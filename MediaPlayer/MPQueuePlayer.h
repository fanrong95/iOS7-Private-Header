/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "MPAudioDeviceControllerDelegate.h"



@class AVPlayer, AVPlayerItem, AVQueuePlayer, MPAudioDeviceController, NSArray, NSDictionary, NSError, NSMutableArray, NSObject<OS_dispatch_queue>, NSString;



@interface MPQueuePlayer : NSObject <MPAudioDeviceControllerDelegate>

{

    MPAudioDeviceController *_audioDeviceController;

    AVPlayerItem *_currentItem;

    CDStruct_1b6d18a9 _currentTime;

    _Bool _isExternalPlaybackActive;

    _Bool _pausedForPlaybackQueueTransaction;

    NSDictionary *_pickedRouteDescription;

    id _playbackQueueCommitHandler;

    long long _playbackQueueTransactionCount;

    AVQueuePlayer *_player;

    NSMutableArray *_queuedOperations;

    NSObject<OS_dispatch_queue> *_queuedOperationsAccessQueue;

    float _rate;

    float _rateBeforePlaybackQueueTransaction;

    _Bool _routeDidChangeDuringPlaybackQueueTransaction;

    long long _status;

    long long _defaultItemEQPresetType;

    _Bool _outputObscuredDueToInsufficientExternalProtection;

}



- (void).cxx_destruct;

- (_Bool)_CALayerDestinationIsTVOut;

@property(readonly, nonatomic) long long _externalProtectionStatus;

@property(readonly, nonatomic) AVPlayer *_player;

- (_Bool)_resumePlayback:(double)arg1 error:(id *)arg2;

- (void)_setCALayerDestinationIsTVOut:(_Bool)arg1;

- (void)_setClientName:(id)arg1;

- (void)_setEQPreset:(int)arg1;

- (void)_setPreferredLanguageList:(id)arg1;

- (void)_setPreparesItemsForPlaybackAsynchronously:(_Bool)arg1;

- (void)_setStoppingFadeOutDuration:(float)arg1;

- (void)_setUserVolume:(float)arg1;

- (void)_setWantsVolumeChangesWhenPausedOrInactive:(_Bool)arg1;

- (float)_userVolume;

@property(nonatomic) long long actionAtItemEnd;

- (id)addBoundaryTimeObserverForTimes:(id)arg1 queue:(id)arg2 usingBlock:(id)arg3;

- (void)advanceToNextItem;

@property(nonatomic) _Bool allowsExternalPlayback;

- (void)audioDeviceControllerAudioRoutesChanged:(id)arg1;

- (void)beginPlaybackQueueTransactionAndPause:(_Bool)arg1;

- (void)commitPlaybackQueueTransaction;

@property(readonly, nonatomic) AVPlayerItem *currentItem;

- (CDStruct_1b6d18a9)currentTime;

- (void)dealloc;

@property(nonatomic) long long defaultItemEQPresetType; // @synthesize defaultItemEQPresetType=_defaultItemEQPresetType;

@property(nonatomic) _Bool disallowsAMRAudio;

@property(readonly, nonatomic) NSError *error;

@property(readonly, nonatomic) long long externalPlaybackType;

@property(copy, nonatomic) NSString *externalPlaybackVideoGravity;

- (id)init;

- (void)insertItem:(id)arg1 afterItem:(id)arg2;

@property(nonatomic, getter=isClosedCaptionDisplayEnabled) _Bool closedCaptionDisplayEnabled;

@property(readonly, nonatomic, getter=isExternalPlaybackActive) _Bool externalPlaybackActive;

@property(readonly, nonatomic) _Bool isPlaybackQueueTransactionActive;

@property(readonly, nonatomic) NSArray *items;

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@property(readonly, nonatomic) _Bool outputObscuredDueToInsufficientExternalProtection;

- (void)pause;

- (void)play;

@property(copy, nonatomic) id playbackQueueCommitHandler; // @synthesize playbackQueueCommitHandler=_playbackQueueCommitHandler;

@property(readonly, nonatomic) id playerAVAudioSession;

- (void)prepareItem:(id)arg1 withCompletionHandler:(id)arg2;

@property(nonatomic) float rate;

- (void)removeItem:(id)arg1;

- (void)removeTimeObserver:(id)arg1;

- (void)seekToTime:(CDStruct_1b6d18a9)arg1;

- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;

- (void)setCurrentPlaybackQueueTransactionDisplayTime:(CDStruct_1b6d18a9)arg1;

- (void)setMediaSelectionCriteria:(id)arg1 forMediaCharacteristic:(id)arg2;

@property(nonatomic) _Bool usesAudioOnlyModeForExternalPlayback;

@property(nonatomic) _Bool usesExternalPlaybackWhileExternalScreenIsActive;

@property(readonly, nonatomic) long long status;



@end


