/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "MPAVPlaylistFeeder.h"



@class MPAVController, NSDictionary, RadioStation;



@interface MPQueueFeeder : NSObject <MPAVPlaylistFeeder>

{

    MPAVController *_avController;

    struct __CFSet *_itemsWithReferencesToClear;

    unsigned long long _repeatType;

    unsigned long long _shuffleType;

    struct __CFDictionary *_nextStartTimes;

    id _representedObject;

    _Bool _fullScreenPlaybackQueue;

    _Bool _isSourceChangeInProgress;

    _Bool _deallocating;

    unsigned long long _activeShuffleType;

}



+ (void)restoreAVControllerPlaybackQueue:(id)arg1 fromUnarchiver:(id)arg2 feederClass:(Class)arg3;

- (void).cxx_destruct;

@property(nonatomic) __weak MPAVController *AVController; // @synthesize AVController=_avController;

- (_Bool)_canPurgeNextStartTimes;

- (void)_fixNextStartTimesByInsertingRange:(struct _NSRange)arg1;

- (void)_fixNextStartTimesByRemovingRange:(struct _NSRange)arg1;

@property(nonatomic) unsigned long long activeShuffleType; // @synthesize activeShuffleType=_activeShuffleType;

- (void)addReferenceToItem:(id)arg1;

- (void)archiveAVControllerPlaybackQueue:(id)arg1 toArchiver:(id)arg2;

- (void)assumeOwnershipOfItems:(id)arg1;

- (void)beginSourceChange;

- (_Bool)canSeek;

- (_Bool)canSkipItem:(id)arg1;

- (_Bool)canSkipToPreviousItem;

- (void)clearReferencesToItem:(id)arg1;

- (void)commitSourceChangeWithStartQueueIndex:(unsigned long long)arg1;

- (void)contentInvalidated;

- (void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned long long)arg1;

- (void)contentsDidChangeByRemovingRange:(struct _NSRange)arg1;

- (void)controller:(id)arg1 willChangePlaybackIndexBy:(long long)arg2 deltaType:(int)arg3 ignoreElapsedTime:(_Bool)arg4 allowSkippingAds:(_Bool)arg5;

- (id)copyRawItemAtIndex:(unsigned long long)arg1;

- (void)dealloc;

- (id)errorResolverForItem:(id)arg1;

@property(nonatomic) _Bool fullScreenPlaybackQueue; // @synthesize fullScreenPlaybackQueue=_fullScreenPlaybackQueue;

- (_Bool)hasItemForIndex:(unsigned long long)arg1;

- (_Bool)hasValidItemAtIndex:(unsigned long long)arg1;

@property(readonly, nonatomic) unsigned long long initialPlaybackQueueDepth;

- (void)invalidateQueueCaches;

@property(nonatomic) _Bool isSourceChangeInProgress; // @synthesize isSourceChangeInProgress=_isSourceChangeInProgress;

@property(readonly, nonatomic) Class itemClass;

@property(readonly, nonatomic) unsigned long long itemCount;

- (id)itemForIndex:(unsigned long long)arg1;

- (unsigned long long)itemTypeForIndex:(unsigned long long)arg1;

- (id)localizedAttributedPositionInPlaylistStringForItem:(id)arg1 withRegularTextAttributes:(id)arg2 emphasizedTextAttributes:(id)arg3;

- (id)localizedPositionInPlaylistString:(id)arg1;

@property(readonly, nonatomic) unsigned long long nonRepeatingItemCount;

- (id)pathAtIndex:(unsigned long long)arg1;

- (id)playbackInfoAtIndex:(unsigned long long)arg1;

@property(readonly, nonatomic) _Bool playerPreparesItemsForPlaybackAsynchronously;

@property(readonly, nonatomic) NSDictionary *preferredLanguages;

@property(readonly, nonatomic) unsigned long long realRepeatType;

@property(readonly, nonatomic) unsigned long long realShuffleType;

- (_Bool)reloadWithDataSource:(id)arg1;

- (_Bool)reloadWithDataSource:(id)arg1 keepPlayingCurrentItemIfPossible:(_Bool)arg2;

@property(nonatomic) unsigned long long repeatType; // @synthesize repeatType=_repeatType;

@property(retain, nonatomic) id <NSObject> representedObject; // @synthesize representedObject=_representedObject;

- (void)restoreAVControllerPlaybackQueue:(id)arg1 fromUnarchiver:(id)arg2;

- (void)setNextStartTime:(double)arg1 forIndex:(unsigned long long)arg2;

@property(nonatomic) unsigned long long shuffleType; // @synthesize shuffleType=_shuffleType;

- (void)setSubsequenceFocused:(_Bool)arg1 currentItemIndex:(unsigned long long)arg2;

- (_Bool)shouldBeginPlaybackOfItem:(id)arg1 error:(id *)arg2;

- (_Bool)shouldReloadForChangeFromNetworkType:(long long)arg1 toNetworkType:(long long)arg2;

- (void)shuffleItemsWithAnchor:(unsigned long long *)arg1;

@property(readonly, nonatomic) RadioStation *station;

@property(readonly, nonatomic) _Bool trackChangesCanEndPlayback;

@property(readonly, nonatomic) _Bool userCanChangeShuffleAndRepeatType;



@end


