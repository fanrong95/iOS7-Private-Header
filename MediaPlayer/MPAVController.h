/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "AVAudioSessionDelegateMediaPlayerOnly.h"

#import "MPAVControllerProtocol.h"

#import "MPAVErrorResolverDelegate.h"

#import "MPAudioDeviceControllerDelegate.h"



@class AVPlayerLayer, CALayer, MPAVControllerToAggregateDCommunicator, MPAVDestinationBrowser, MPAVErrorResolver, MPAVItem, MPAVPlaylistManager, MPAudioDeviceController, MPMediaItem, MPMediaQuery, MPQueueFeeder, MPQueuePlayer, MPVideoView, NSArray, NSDate, NSDictionary, NSMutableArray, NSMutableSet, NSNotification, NSObject<OS_dispatch_source>, NSString;



@interface MPAVController : NSObject <AVAudioSessionDelegateMediaPlayerOnly, MPAudioDeviceControllerDelegate, MPAVErrorResolverDelegate, MPAVControllerProtocol>

{

    MPAVPlaylistManager *_avPlaylistManager;

    _Bool _forceSynchronousQueueFilling;

    _Bool _managesSystemDownloads;

    int _playbackMode;

    _Bool _valid;

    MPAudioDeviceController *_audioDeviceController;

    MPQueueFeeder *_feeder;

    MPAVErrorResolver *_itemErrorResolver;

    NSDictionary *_pickedRouteDescription;

    AVPlayerLayer *_videoLayer;

    unsigned long long _videoLayerUsageCount;

    MPVideoView *_videoView;

    unsigned long long _tickTimerEnabled;

    struct __CFRunLoopTimer *_tickTimer;

    double _tickInterval;

    struct __CFRunLoopTimer *_currentItemBookkeepingTimer;

    long long _indexChangeDirection;

    unsigned long long _itemIndexAtDeath;

    long long _lastDisconnectReason;

    double _lastKnownTimeBeforeDeath;

    double _lastPlaybackIndexChangeTime;

    double _lastSetTime;

    double _lastSetTimeChangeTime;

    unsigned int _hasDelayedCurrentTimeToSet:1;

    unsigned int _forceDelayedCurrentTimeToSet:1;

    double _delayedCurrentTimeToSet;

    long long _delayedCurrentTimeOptions;

    unsigned long long _lastSetTimeMarker;

    double _temporaryChapterTime;

    unsigned int _autoPlayWhenLikelyToKeepUp:1;

    unsigned int _autoplayDisabledForCurrentItem:1;

    long long _eqPreset;

    double _nextFadeOutDuration;

    id _boundaryTimeObserver;

    NSArray *_boundaryTimes;

    unsigned long long _boundaryTimeIndexLastPosted;

    float _rateBeforeSeek;

    float _inflightSeekRate;

    unsigned long long _scanLevel;

    long long _scanDirection;

    long long _resetRateAfterSeekingUpdateDisabled;

    unsigned long long _seeklessState;

    unsigned int _isSeekingOrScrubbing:1;

    unsigned int _resetRateAfterSeeking:1;

    unsigned int _activeRewindHoldingAtStart:1;

    double _lastSeekableEnd;

    double _whenSawSeekableEnd;

    double _maxSeekableFwd;

    double _seekFwdSlop;

    double _lastSeekableStart;

    double _whenSawSeekableStart;

    double _maxSeekableRev;

    double _seekRevSlop;

    unsigned int _canSeekRev:1;

    unsigned int _canSeekFwd:1;

    unsigned int _alwaysPlayWheneverPossible:1;

    unsigned int _stopAtEnd:1;

    unsigned int _didReachEnd:1;

    unsigned int _pausedDuringInterruption:1;

    unsigned int _resumePlaybackWhenActive:1;

    unsigned int _useApplicationAudioSession:1;

    unsigned int _playInBackgroundUserDefaultEnabled:1;

    unsigned int _canPlayFastForward:1;

    unsigned int _canPlayFastReverse:1;

    unsigned long long _state;

    unsigned long long _displayOverridePlaybackState;

    unsigned long long _bufferingState;

    NSNotification *_delayedPlaybackStateNotification;

    NSObject<OS_dispatch_source> *_stallTimerSource;

    NSMutableArray *_queueFeederStateStack;

    int _feederMode;

    MPAVControllerToAggregateDCommunicator *_aggregateDCommunicator;

    double _itemInitialBookmarkTime;

    float _rateBeforeResignActive;

    long long _ubiquitousBookkeepingDisabledCount;

    double _secondsSinceUbiquitousCheckpoint;

    Class _videoViewClass;

    NSString *_audioSessionModeOverride;

    double _lastInterruptionEnd;

    _Bool _shouldEnforceHDCP;

    NSMutableSet *_clientsWantingAirPlayVideo;

    _Bool _currentItemDidLoad;

    _Bool _didResolveError;

    _Bool _disallowsAMRAudio;

    _Bool _disableAirPlayMirroringDuringPlayback;

    NSDate *_itemDidChangeDate;

    unsigned long long _stallBackgroundTaskIdentifier;

    _Bool _shouldSkipToNextTrackOnResumeFromInterruption;

    _Bool _autoReshufflingDisabled;

    MPAVDestinationBrowser *_destinationBrowser;

}



+ (id)_controllerKeysToObserve;

+ (id)_itemKeysToObserve;

+ (id)_playerKeysToObserve;

+ (void)initialize;

+ (_Bool)isNetworkSupportedPath:(id)arg1;

+ (_Bool)outputSupportsAC3;

+ (id)sharedInstance;

- (void).cxx_destruct;

@property(nonatomic) long long EQPreset; // @synthesize EQPreset=_eqPreset;

- (void)_applicationDidBecomeActive:(id)arg1;

- (void)_applicationDidEnterBackgroundNotification:(id)arg1;

- (void)_applicationSuspended:(id)arg1;

- (void)_applicationSuspendedEventsOnly:(id)arg1;

- (void)_applicationWillEnterForegroundNotification:(id)arg1;

- (void)_applicationWillResignActive:(id)arg1;

- (void)_attemptAutoPlay;

- (id)_avPlaylistManager;

- (_Bool)_canPlayItem:(id)arg1;

- (void)_cancelStallTimer;

- (void)_cancelUpdateCurrentItemBookkeepingTimer;

- (_Bool)_changeChapterTimeMarkerIndexBy:(long long)arg1;

- (void)_checkForBoundaryTimeCrossing;

- (void)_clearLastSetTimeIfPlayerTimeIsValid;

- (void)_clearResetRateAfterSeeking;

- (void)_clearSeekingIntervalsForStreaming;

- (void)_clearVideoLayer;

- (void)_configureAVPlaylistManager:(id)arg1;

- (void)_configureUpdateCurrentItemBookkeepingTimer;

- (_Bool)_connectAVPlaylistManager;

- (unsigned long long)_currentIndexInBoundaryCMTimes:(id)arg1;

- (void)_delayedPlaybackIndexChange;

- (void)_delayedPostPlaybackStateChangedNotification;

- (void)_delayedSetCurrentTime;

- (void)_delayedUpdateScanningRate;

- (void)_delayedUpdateTimeMarker;

- (void)_disconnectAVPlaylistManagerWithReason:(long long)arg1;

- (unsigned long long)_displayPlaybackState;

- (void)_endSeekAndChangeRate:(_Bool)arg1;

- (id)_extractImageFromMetadata:(id)arg1;

- (void)_firstVideoFrameDisplayed:(id)arg1;

- (_Bool)_isChangingQueueContents;

- (_Bool)_isCloudItem:(id)arg1;

- (_Bool)_isDownloadingCloudItem:(id)arg1;

- (_Bool)_isDownloadingCloudOrOtherItem:(id)arg1;

- (void)_isExternalPlaybackActiveDidChange:(id)arg1;

- (_Bool)_isVideoLayerAttachedToPlayer;

- (void)_itemAssetIsLoadedNotification:(id)arg1;

- (void)_itemDidChange:(id)arg1;

- (void)_itemFailedToPlayToEnd:(id)arg1;

- (void)_itemFailedToPlayToEndNotification:(id)arg1;

- (void)_itemHeartbeatIsInvalidNotification:(id)arg1;

- (_Bool)_itemIsRestricted:(id)arg1;

- (void)_itemPlaybackDidEndNotification:(id)arg1;

- (void)_itemReadyToPlay:(id)arg1;

- (void)_itemTimeMarkersAvailableNotification:(id)arg1;

- (void)_itemWillChange:(id)arg1;

- (void)_mediaLibraryDynamicPropertiesDidChangeNotification:(id)arg1;

- (void)_pauseBookkeepingTimer;

- (void)_pausePlaybackIfNecessary;

- (void)_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:(_Bool)arg1;

- (void)_pauseTickTimer;

- (id)_pickedRouteDescription;

- (void)_playbackFailedWithError:(id)arg1 canResolve:(_Bool)arg2;

- (unsigned long long)_playbackIndexForDelta:(long long)arg1 fromIndex:(unsigned long long)arg2 ignoreElapsedTime:(_Bool)arg3;

@property(readonly, nonatomic) id _playerAVAudioSession;

- (void)_playerFailedToQueueNotification:(id)arg1;

- (void)_postMPAVControllerItemReadyToPlayNotificationWithItem:(id)arg1;

- (void)_postMPAVControllerSizeDidChangeNotificationWithItem:(id)arg1;

- (void)_postPlaybackStateChangedNotificationWithOriginalState:(unsigned long long)arg1 newState:(unsigned long long)arg2 delayable:(_Bool)arg3;

- (void)_prepareToPlayItem:(id)arg1;

- (void)_rateDidChange:(id)arg1;

- (void)_registerForAVItemNotifications:(id)arg1;

- (void)_registerForAVPlaylistManagerObservation:(id)arg1;

- (void)_reloadTimeMarkerObservationsForItem:(id)arg1;

- (void)_resetInternalState;

- (void)_resetQueue:(_Bool)arg1 useVideoLayer:(_Bool)arg2;

- (void)_resumeBookkeepingTimer;

- (void)_resumeTickTimer;

- (void)_scheduleUpdateCurrentItemBookkeepingTimer;

- (unsigned long long)_seeklessStateForState:(unsigned long long)arg1;

- (void)_serverConnectionDidDie:(id)arg1;

- (void)_setAVControllerQueueFeeder:(id)arg1 startQueueIndex:(unsigned long long)arg2;

- (void)_setActionAtEndAttributeForState:(unsigned long long)arg1;

- (void)_setBufferingState:(unsigned long long)arg1;

- (void)_setItemErrorResolver:(id)arg1;

- (_Bool)_setRate:(float)arg1 forScanning:(_Bool)arg2;

- (void)_setState:(unsigned long long)arg1;

- (void)_setValid:(_Bool)arg1;

- (void)_setVideoLayerAttachedToPlayer:(_Bool)arg1 force:(_Bool)arg2 pauseIfNecessary:(_Bool)arg3;

- (void)_setVideoViewClass:(Class)arg1;

- (_Bool)_showsPlayingWhenInState:(unsigned long long)arg1;

- (void)_sizeDidChange:(id)arg1;

- (void)_streamBufferFull:(id)arg1;

- (void)_streamLikelyToKeepUp:(id)arg1;

- (void)_streamRanDry:(id)arg1;

- (void)_streamUnlikelyToKeepUp:(id)arg1;

- (void)_switchToFeeder:(id)arg1 mode:(int)arg2 index:(unsigned long long)arg3 play:(_Bool)arg4 configureFeederBlock:(id)arg5;

- (void)_timeHasJumpedNotification:(id)arg1;

- (void)_timedMetadataAvailable:(id)arg1;

- (void)_tracksDidChange:(id)arg1;

- (void)_unregisterForAVItemNotifications:(id)arg1;

- (void)_unregisterForAVPlaylistManagerObservation:(id)arg1;

- (void)_updateCurrentItemBookkeepingForTimerCallback;

- (void)_updateCurrentItemBookkeepingMarkedAsCheckpoint:(_Bool)arg1;

- (void)_updateCurrentTimeToBookmarkTimeForDynamicPropertyChange;

- (void)_updateCurrentTimeToNextStartTimeForQueueFeeder:(id)arg1 withItemIndex:(long long)arg2;

- (void)_updateProgress:(struct __CFRunLoopTimer *)arg1;

- (void)_updateScanningRate;

- (void)_updateSeekingIntervalsForStreaming;

- (unsigned long long)_updateSubsequenceFocus;

- (void)_verifyDisplayProtection;

- (void)_volumeDidChangeNotification:(id)arg1;

@property(readonly, nonatomic) unsigned long long activeRepeatType;

@property(readonly, nonatomic) unsigned long long activeShuffleType;

- (void)airPlayVideoEnded;

- (_Bool)allowsExternalPlayback;

@property(nonatomic) _Bool alwaysPlayWheneverPossible;

- (void)applicationDidReceiveMemoryWarningAsUrgent:(_Bool)arg1;

- (void)applicationWillTerminate;

- (void)applyRepeatSettings;

- (void)applyShuffleSettings;

@property(readonly, nonatomic) MPAudioDeviceController *audioDeviceController; // @synthesize audioDeviceController=_audioDeviceController;

- (void)audioDeviceControllerAudioRoutesChanged:(id)arg1;

@property(retain, nonatomic) NSString *audioSessionModeOverride; // @synthesize audioSessionModeOverride=_audioSessionModeOverride;

@property(nonatomic) _Bool autoPlayWhenLikelyToKeepUp;

@property(nonatomic) _Bool autoReshufflingDisabled; // @synthesize autoReshufflingDisabled=_autoReshufflingDisabled;

- (void)autoclearDisplayOverride;

@property(readonly, nonatomic) MPQueuePlayer *avPlayer;

- (void)beginInterruption;

- (void)beginSeek:(int)arg1;

- (void)beginTickTimerWithInterval:(double)arg1;

- (void)beginUsingVideoLayer;

@property(readonly, nonatomic) unsigned long long bufferingState; // @synthesize bufferingState=_bufferingState;

- (_Bool)canPlayFastReverse;

- (_Bool)canSeekBackwards;

- (_Bool)canSeekForwards;

- (_Bool)canSkipToSeekableEnd;

- (void)changePlaybackIndexBy:(long long)arg1;

- (void)changePlaybackIndexBy:(long long)arg1 deltaType:(int)arg2;

- (void)changePlaybackIndexBy:(long long)arg1 deltaType:(int)arg2 ignoreElapsedTime:(_Bool)arg3;

- (void)changePlaybackIndexBy:(long long)arg1 deltaType:(int)arg2 ignoreElapsedTime:(_Bool)arg3 allowSkippingAds:(_Bool)arg4;

- (_Bool)changePlaybackIndexBy:(long long)arg1 deltaType:(int)arg2 ignoreElapsedTime:(_Bool)arg3 allowSkippingAds:(_Bool)arg4 error:(id *)arg5;

@property(nonatomic) _Bool closedCaptioningEnabled;

- (void)contentInvalidated;

- (void)contentInvalidatedWithCurrentItemMovedToIndex:(unsigned long long)arg1;

- (void)contentsDidChangeByRemovingRange:(struct _NSRange)arg1;

@property(readonly, nonatomic) MPAVItem *currentItem;

@property(readonly, nonatomic) _Bool currentItemIsRental;

@property(readonly, nonatomic) MPMediaItem *currentMediaItem;

@property(readonly, nonatomic) MPMediaQuery *currentMediaQuery;

@property(readonly, nonatomic) double currentMonotonousTime;

@property(nonatomic) double currentTime;

- (double)currentTimeForBookmarking;

- (void)dealloc;

@property(readonly, nonatomic) MPAVDestinationBrowser *destinationBrowser; // @synthesize destinationBrowser=_destinationBrowser;

@property(nonatomic, getter=destinationIsTVOut, setter=setDestinationIsTVOut:) _Bool destinationIsTVOut;

@property(nonatomic) _Bool disableAirPlayMirroringDuringPlayback;

- (void)disableAutoplayForCurrentItem;

@property(nonatomic) _Bool disallowsAMRAudio;

- (void)disconnectPlaylistManagerForTeardown;

@property(nonatomic) unsigned long long displayOverridePlaybackState; // @synthesize displayOverridePlaybackState=_displayOverridePlaybackState;

@property(readonly, nonatomic) double durationOfCurrentItemIfAvailable;

- (id)embeddedDataTimesForItem:(id)arg1;

- (void)enableAutoplayForCurrentItem;

- (void)endInterruptionFromInterruptor:(id)arg1 category:(id)arg2 flags:(unsigned long long)arg3;

- (void)endPlayback;

- (void)endSeek;

- (void)endTickTimer;

- (void)endUsingVideoLayer;

- (void)ensureFeederIsClass:(Class)arg1;

- (void)ensureFeederIsSubclass:(Class)arg1;

- (void)ensureHasAVPlaylistManager;

- (void)errorResolver:(id)arg1 didResolveError:(id)arg2 withResolution:(long long)arg3;

@property(readonly, nonatomic) long long externalPlaybackType;

@property(copy, nonatomic) NSString *externalPlaybackVideoGravity;

- (_Bool)fadeOutForQuit;

@property(readonly, nonatomic) MPQueueFeeder *feeder; // @synthesize feeder=_feeder;

- (void)feederChangedContents:(id)arg1;

@property(nonatomic) int feederMode; // @synthesize feederMode=_feederMode;

- (void)finalizeBookkeepingNow;

- (_Bool)forceRestartPlaybackIfNecessary;

@property(nonatomic) _Bool forceSynchronousQueueFilling; // @synthesize forceSynchronousQueueFilling=_forceSynchronousQueueFilling;

@property(readonly, nonatomic) _Bool hasVolumeControl;

- (id)init;

@property(readonly, nonatomic) _Bool isCurrentItemReady;

@property(readonly, nonatomic) _Bool isExternalPlaybackActive;

@property(readonly, nonatomic, getter=isFullScreenVideoMode) _Bool fullScreenVideoMode;

- (_Bool)isLiveStreaming;

@property(readonly, nonatomic, getter=isPlaying) _Bool playing;

@property(readonly, nonatomic, getter=isRewindHoldingAtStart) _Bool rewindHoldingAtStart;

- (_Bool)isSeekingOrScrubbing;

@property(readonly, nonatomic, getter=isShuffled) _Bool shuffled;

- (_Bool)isTickTimerEnabled;

@property(readonly, nonatomic, getter=isValid) _Bool valid;

@property(nonatomic) _Bool managesSystemDownloads; // @synthesize managesSystemDownloads=_managesSystemDownloads;

@property(readonly, nonatomic) _Bool muted;

@property(nonatomic) double nextFadeOutDuration; // @synthesize nextFadeOutDuration=_nextFadeOutDuration;

- (void)notifyAVPlayerItemDidChange:(id)arg1;

- (void)notifyAVPlayerItemWillChange:(id)arg1;

@property(readonly, nonatomic) unsigned long long numberOfItems;

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

- (void)pause;

- (void)pauseWithFadeout:(float)arg1;

- (void)play;

- (void)playChapterTimeMarkerAtIndex:(unsigned long long)arg1;

- (void)playItemAtIndex:(unsigned long long)arg1;

- (void)playItemAtIndex:(unsigned long long)arg1 forceRestart:(_Bool)arg2;

@property(readonly, nonatomic) double playableDurationOfCurrentItemIfAvailable;

@property(nonatomic) int playbackMode;

- (float)rate;

- (void)reloadFeederWithStartQueueIndex:(unsigned long long)arg1;

@property(nonatomic) unsigned long long repeatType;

- (void)restorePreviousFeederState;

@property(readonly, nonatomic) NSString *routeNameForVolumeControl;

- (void)saveCurrentFeederState;

- (void)setActive:(_Bool)arg1;

- (void)setAutoclearingDisplayOverridePlaybackState:(unsigned long long)arg1;

- (void)setClient:(id)arg1 wantsToAllowAirPlayVideo:(_Bool)arg2;

- (void)setCurrentTime:(double)arg1 options:(long long)arg2;

- (void)setPlaybackIndex:(long long)arg1;

- (void)setPlaybackIndex:(long long)arg1 selectionDirection:(long long)arg2;

- (_Bool)setRate:(float)arg1;

- (void)setRateForScanning:(float)arg1;

@property(nonatomic) _Bool shouldEnforceHDCP; // @synthesize shouldEnforceHDCP=_shouldEnforceHDCP;

@property(nonatomic) _Bool shouldSkipToNextTrackOnResumeFromInterruption; // @synthesize shouldSkipToNextTrackOnResumeFromInterruption=_shouldSkipToNextTrackOnResumeFromInterruption;

@property(nonatomic) unsigned long long shuffleType;

@property(nonatomic) unsigned long long state; // @synthesize state=_state;

@property(nonatomic) _Bool stopAtEnd;

@property(nonatomic) _Bool ubiquitousBookkeepingEnabled;

@property(nonatomic) _Bool useApplicationAudioSession;

@property(nonatomic) _Bool usesAudioOnlyModeForExternalPlayback;

@property(nonatomic) float volume;

- (_Bool)shouldDisplayAsPlaying;

- (_Bool)shouldHaveNoActionAtEndForState:(unsigned long long)arg1;

@property(readonly, nonatomic) _Bool showPlaybackStateOverlaysOnTVOut;

- (void)skipToSeekableEnd;

- (void)skipToSeekableStart;

- (void)switchToAudioPlayback:(_Bool)arg1 forItem:(id)arg2;

- (void)switchToFeeder:(id)arg1 mode:(int)arg2 index:(unsigned long long)arg3 play:(_Bool)arg4;

- (void)switchToVideoPlayback:(_Bool)arg1 forItem:(id)arg2;

- (double)timeOfPlayableEnd;

- (double)timeOfPlayableStart;

- (double)timeOfSeekableEnd;

- (double)timeOfSeekableStart;

- (void)togglePlayback;

- (void)updateBookkeepingNow;

@property(readonly, nonatomic) CALayer *videoLayer;

@property(readonly, nonatomic) MPVideoView *videoView;



@end


