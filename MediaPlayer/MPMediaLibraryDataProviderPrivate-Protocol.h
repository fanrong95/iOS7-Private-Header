/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "MPMediaLibraryDataProvider.h"



@class NSArray, NSString;



@protocol MPMediaLibraryDataProviderPrivate <MPMediaLibraryDataProvider>



@optional

- (void)addItemWithIdentifier:(long long)arg1 toPlaylistWithIdentifier:(long long)arg2 completionBlock:(id)arg3;

- (void)addItemsWithIdentifiers:(long long *)arg1 count:(unsigned long long)arg2 toPlaylistWithIdentifier:(long long)arg3 completionBlock:(id)arg4;

- (long long)addPlaylistWithValuesForProperties:(id)arg1;

- (id)artworkCacheIDForItemWithIdentifier:(long long)arg1 atPlaybackTime:(double)arg2;

- (void *)createGeniusClusterPlaylistWithSeedItemIdentifiers:(long long *)arg1 count:(unsigned long long)arg2 error:(id *)arg3;

@property(readonly, nonatomic) NSString *databasePath;

- (long long *)generateItemIdentifiersForGeniusClusterPlaylist:(void *)arg1 count:(unsigned long long *)arg2 error:(id *)arg3;

- (_Bool)hasArtworkImageForItemWithIdentifier:(long long)arg1;

- (_Bool)hasGeniusMixes;

- (_Bool)hasMediaOfType:(unsigned long long)arg1;

- (_Bool)hasUbiquitousBookmarkableItems;

- (_Bool)isArtworkImageIdenticalForItemWithIdentifier:(long long)arg1 otherItemWithIdentifier:(long long)arg2 compareRepresentativeItemArtwork:(_Bool)arg3 missingAlwaysComparesEqual:(_Bool)arg4;

- (_Bool)isCurrentThreadInTransaction;

@property(readonly, nonatomic) _Bool isGeniusEnabled;

- (_Bool)itemExistsWithPersistentID:(unsigned long long)arg1;

- (long long)itemPersistentIDForStoreID:(long long)arg1;

- (id)lastModifiedDate;

- (void)loadArtworkImageForFormat:(long long)arg1 ofItemWithArtworkCacheID:(id)arg2 canUseSurfaceBackedImage:(_Bool)arg3 completionBlock:(id)arg4;

- (void)loadArtworkImageForFormat:(long long)arg1 ofItemWithIdentifier:(long long)arg2 completionBlock:(id)arg3;

- (void)loadBestArtworkImageForSize:(struct CGSize)arg1 forArtworkCacheID:(id)arg2 completionBlock:(id)arg3;

- (id)localizedSectionHeaderForSectionIndex:(unsigned long long)arg1;

@property(readonly, nonatomic) NSArray *localizedSectionIndexTitles;

- (void)moveItemFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 inPlaylistWithIdentifier:(long long)arg3 completionBlock:(id)arg4;

- (void)performReadTransactionWithBlock:(id)arg1;

- (_Bool)performTransactionWithBlock:(id)arg1;

- (_Bool)playlistExistsWithPersistentID:(unsigned long long)arg1;

- (void)populateLocationPropertiesOfItemWithIdentifier:(long long)arg1 withPath:(id)arg2;

@property(readonly, nonatomic) NSArray *preferredAudioLanguages;

@property(readonly, nonatomic) NSArray *preferredSubtitleLanguages;

- (void)releaseGeniusClusterPlaylist:(void *)arg1;

- (void)removeAllItemsInPlaylistWithIdentifier:(long long)arg1;

- (void)removeItemsWithIdentifiers:(long long *)arg1 atFilteredIndexes:(id)arg2 inPlaylistWithIdentifier:(long long)arg3 completionBlock:(id)arg4;

- (_Bool)removeItemsWithIdentifiers:(long long *)arg1 count:(unsigned long long)arg2 hideFromPurchaseHistory:(_Bool)arg3;

- (_Bool)removePlaylistWithIdentifier:(long long)arg1;

- (void)seedPlaylistWithIdentifier:(long long)arg1 withItemWithIdentifier:(long long)arg2 completionBlock:(id)arg3;

- (void)setValue:(id)arg1 forProperty:(id)arg2 ofCollectionWithIdentifier:(long long)arg3 groupingType:(long long)arg4 completionBlock:(id)arg5;

- (void)setValue:(id)arg1 forProperty:(id)arg2 ofItemWithIdentifier:(long long)arg3 completionBlock:(id)arg4;

- (void)setValue:(id)arg1 forProperty:(id)arg2 ofPlaylistWithIdentifier:(long long)arg3 completionBlock:(id)arg4;

- (_Bool)shouldAsynchrounouslyLoadArtworkForItemWithIdentifier:(long long)arg1 artworkFormat:(long long)arg2 artworkCacheID:(id)arg3;

- (_Bool)shouldAsynchrounouslyLoadArtworkForItemWithIdentifier:(long long)arg1 artworkSize:(struct CGSize)arg2 artworkCacheID:(id)arg3;

- (_Bool)supportsEntityChangeTrackingForMediaEntityType:(long long)arg1 collectionGroupingType:(long long)arg2 dataProviderClass:(out Class *)arg3;

- (void)updateEntitesToCurrentRevision;

@end


