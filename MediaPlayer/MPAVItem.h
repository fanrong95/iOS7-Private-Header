/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class AVAsset, AVPlayerItem, MPAVController, MPAlternateTextTrack, MPAlternateTracks, MPImageCache, MPMediaItem, MPQueueFeeder, MPRadioAdTrack, NSArray, NSData, NSObject<OS_dispatch_queue>, NSString, NSURL, RadioAudioClip, RadioTrack;



@interface MPAVItem : NSObject

{

    AVAsset *_asset;

    NSObject<OS_dispatch_queue> *_assetQueue;

    AVPlayerItem *_avPlayerItem;

    _Bool _isAssetLoaded;

    MPQueueFeeder *_feeder;

    MPAVController *_player;

    float _soundCheckVolumeNormalization;

    NSArray *_chapterTimeMarkers;

    NSArray *_artworkTimeMarkers;

    NSArray *_urlTimeMarkers;

    NSArray *_closedCaptionTimeMarkers;

    MPAlternateTracks *_alternateTracks;

    double _cachedDuration;

    double _cachedPlayableDuration;

    NSArray *_cachedSeekableTimeRanges;

    double _seekableTimeRangesCacheTime;

    unsigned long long _type;

    float _defaultPlaybackRate;

    unsigned long long _indexInQueueFeeder;

    unsigned int _advancedDuringPlayback:1;

    unsigned int _handledFinishTime:1;

    unsigned int _hasPlayedThisSession:1;

    unsigned int _wasCountedAsSkipped:1;

    unsigned int _isStreamable:2;

    unsigned int _watchingAttributes:1;

    unsigned int _lyricsAvailable:1;

    unsigned int _timeMarkersNeedLoading:1;

    _Bool _hasPostedNaturalSizeChange;

    _Bool _limitReadAhead;

    _Bool _didAttemptToLoadAsset;

    float _loudnessInfoVolumeNormalization;

    MPMediaItem *_mediaItem;

}



+ (id)URLFromPath:(id)arg1;

+ (void)applyVolumeNormalizationForQueuedItems:(id)arg1;

+ (unsigned long long)defaultScaleMode;

+ (void)setDefaultScaleMode:(unsigned long long)arg1;

- (void).cxx_destruct;

- (void)MPSPWD_prioritizeDownloadSession;

- (void)_applicationDidBecomeActive:(id)arg1;

- (void)_captionAppearanceSettingsChanged;

- (void)_checkAllowsBlockingDurationCall;

- (void)_clearAsset;

- (double)_durationFromExternalMetadataIfAvailable;

- (double)_durationInSeconds;

- (id)_imageChapterTrackIDsForAsset:(id)arg1;

- (void)_itemAttributeAvailableKey:(id)arg1;

- (void)_loadAssetAndPlayerItem;

- (void)_loadAssetProperties;

- (void)_loadTimeMarkersAsync;

- (void)_loadTimeMarkersBlocking;

- (double)_playableDurationForLoadedTimeRanges:(id)arg1;

- (id)_plistKeyForMPMediaItemProperty:(id)arg1;

- (void)_realoadEmbeddedTimeMarkers;

- (void)_releaseAllTimeMarkers;

- (id)_seekableTimeRanges;

- (id)_timeMarkerFromMarkers:(id)arg1 forTime:(double)arg2;

- (void)_updateSoundCheckVolumeNormalizationForPlayerItem;

@property(readonly, nonatomic) MPRadioAdTrack *adTrack;

- (void)addDerivedStationForArtist:(_Bool)arg1 withCompletionHandler:(id)arg2;

@property(readonly, nonatomic) NSString *album;

@property(readonly, nonatomic) NSString *albumArtist;

@property(readonly, nonatomic) unsigned long long albumTrackCount;

@property(readonly, nonatomic) unsigned long long albumTrackNumber;

@property(readonly, nonatomic) _Bool allowsEQ;

@property(readonly, nonatomic) MPAlternateTracks *alternateTracks; // @synthesize alternateTracks=_alternateTracks;

- (unsigned long long)alternatesCountForTypes:(unsigned long long)arg1;

@property(readonly, nonatomic) NSString *artist;

@property(readonly, nonatomic) NSData *artworkImageData;

@property(readonly, nonatomic) NSString *artworkMIMEType;

- (id)artworkTimeMarkerForTime:(double)arg1;

@property(retain, nonatomic) NSArray *artworkTimeMarkers; // @synthesize artworkTimeMarkers=_artworkTimeMarkers;

@property(readonly, nonatomic) AVAsset *asset;

@property(readonly, nonatomic) NSString *assetFlavor;

@property(readonly, nonatomic) RadioAudioClip *audioClip;

- (id)blockForDirectAVControllerNotificationReferencingItem:(SEL)arg1;

@property(readonly, nonatomic) _Bool canSeedGenius;

- (id)chapterTimeMarkerForTime:(double)arg1;

@property(retain, nonatomic) NSArray *chapterTimeMarkers; // @synthesize chapterTimeMarkers=_chapterTimeMarkers;

- (id)closedCaptionTimeMarkerForTime:(double)arg1;

@property(retain, nonatomic) NSArray *closedCaptionTimeMarkers;

@property(readonly, nonatomic) NSString *composer;

@property(readonly, nonatomic) unsigned long long countForQueueFeeder;

@property(readonly, nonatomic) double currentTimeDisplayOverride;

@property(readonly, nonatomic) long long customAVEQPreset;

- (void)dealloc;

@property(nonatomic) float defaultPlaybackRate; // @synthesize defaultPlaybackRate=_defaultPlaybackRate;

@property(readonly, nonatomic) _Bool didAttemptToLoadAsset; // @synthesize didAttemptToLoadAsset=_didAttemptToLoadAsset;

@property(readonly, nonatomic) unsigned long long discCount;

@property(readonly, nonatomic) unsigned long long discNumber;

@property(readonly, nonatomic) NSString *displayableText;

@property(readonly, nonatomic) _Bool displayableTextLoaded;

@property(readonly, nonatomic) CDStruct_1b6d18a9 duration;

@property(readonly, nonatomic) double durationFromExternalMetadata;

@property(readonly, nonatomic) double durationIfAvailable;

- (double)durationInSeconds;

@property(readonly, nonatomic) _Bool durationIsValid;

@property(nonatomic) __weak MPQueueFeeder *feeder; // @synthesize feeder=_feeder;

- (void)flushNowPlayingCaches;

@property(nonatomic) CDStruct_1b6d18a9 forwardPlaybackEndTime;

@property(readonly, nonatomic) NSString *genre;

- (_Bool)hasAlternatesForTypes:(unsigned long long)arg1;

@property(readonly, nonatomic) _Bool hasDataForItemArtwork;

@property(readonly, nonatomic) _Bool hasDisplayableText;

@property(nonatomic) _Bool hasPlayedThisSession;

@property(readonly, nonatomic) MPImageCache *imageCache;

- (id)imageCacheRequestWithSize:(struct CGSize)arg1 time:(double)arg2;

- (id)imageCacheRequestWithSize:(struct CGSize)arg1 time:(double)arg2 usePlaceholderAsFallback:(_Bool)arg3;

- (id)inBandAlternateTextTracks;

@property(nonatomic) unsigned long long indexInQueueFeeder; // @synthesize indexInQueueFeeder=_indexInQueueFeeder;

- (id)init;

- (id)initWithAsset:(id)arg1;

- (id)initWithURL:(id)arg1;

- (id)initWithURL:(id)arg1 options:(id)arg2;

@property(readonly, nonatomic) _Bool isAd;

@property(readonly, nonatomic, getter=isAlwaysLive) _Bool alwaysLive;

@property _Bool isAssetLoaded; // @synthesize isAssetLoaded=_isAssetLoaded;

- (_Bool)isAssetURLValid;

@property(readonly, nonatomic, getter=isExplicitTrack) _Bool explicitTrack;

- (_Bool)isPlaceholderForItem:(id)arg1;

@property(readonly, nonatomic) _Bool isRadioItem;

@property(readonly, nonatomic, getter=isStreamable) _Bool streamable;

@property(readonly, nonatomic) _Bool isStreamingQuality;

- (_Bool)isSupportedDefaultPlaybackSpeed:(unsigned long long)arg1;

- (_Bool)isValidPlayerSubstituteForItem:(id)arg1;

- (_Bool)limitReadAhead;

- (void)loadAssetAndPlayerItem;

- (id)localeForAssetTrack:(id)arg1;

- (id)localizedAttributedPositionInPlaylistStringWithRegularTextAttributes:(id)arg1 emphasizedTextAttributes:(id)arg2;

@property(readonly, nonatomic) NSString *localizedPositionInPlaylistString;

@property(nonatomic) float loudnessInfoVolumeNormalization; // @synthesize loudnessInfoVolumeNormalization=_loudnessInfoVolumeNormalization;

@property(readonly, nonatomic) NSString *lyrics;

@property(readonly, nonatomic) NSString *mainTitle;

@property(readonly, nonatomic) MPMediaItem *mediaItem; // @synthesize mediaItem=_mediaItem;

@property(readonly, nonatomic) struct CGSize naturalSize;

- (void)notePlaybackFinishedByHittingEnd;

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

- (id)path;

@property(readonly, nonatomic) unsigned long long persistentID;

@property(readonly, nonatomic) double playableDuration;

@property(readonly, nonatomic) double playableDurationIfAvailable;

@property(nonatomic) double playbackCheckpointCurrentTime;

- (float)playbackRateForLevel:(unsigned long long)arg1 direction:(long long)arg2 paused:(_Bool)arg3;

@property(nonatomic) __weak MPAVController *player; // @synthesize player=_player;

@property(readonly, nonatomic) AVPlayerItem *playerItem;

@property(readonly, nonatomic) NSURL *podcastURL;

@property(readonly, nonatomic) struct CGSize presentationSize;

@property(readonly, nonatomic) RadioTrack *radioTrack;

- (void)reevaluateType;

- (void)replaceOutOfBandAlternateTextTracksWithArray:(id)arg1;

- (void)replacePlayerItemWithPlayerItem:(id)arg1;

- (void)resetBookkeeping;

- (float)scanIntervalForLevel:(unsigned long long)arg1 paused:(_Bool)arg2;

@property(retain, nonatomic) MPAlternateTextTrack *selectedAlternateTextTrack;

- (void)setAlternateAudioTrackID:(int)arg1;

- (void)setLimitReadAhead:(_Bool)arg1;

- (void)setOverrideDuration:(double)arg1;

- (void)setPlaybackFinishedTime:(double)arg1;

- (void)setPlaybackStoppedTime:(double)arg1;

- (void)setPlayerItem:(id)arg1;

- (void)setRating:(float)arg1;

@property(nonatomic) float soundCheckVolumeNormalization; // @synthesize soundCheckVolumeNormalization=_soundCheckVolumeNormalization;

- (void)setSubtitleTrackID:(int)arg1;

@property(retain, nonatomic) NSArray *urlTimeMarkers; // @synthesize urlTimeMarkers=_urlTimeMarkers;

- (void)setUserAdvancedDuringPlayback:(_Bool)arg1;

- (void)setUserSkippedPlayback:(_Bool)arg1;

@property(copy, nonatomic) NSString *videoID;

- (void)setupEQPresetWithDefaultPreset:(long long)arg1;

- (void)setupPlaybackInfo;

@property(readonly, nonatomic) long long status;

- (int)subtitleTrackID;

@property(readonly, nonatomic) _Bool supportsAddStation;

@property(readonly, nonatomic) _Bool supportsHistory;

@property(readonly, nonatomic) _Bool supportsLikeOrBan;

@property(readonly, nonatomic) _Bool supportsRewindAndFastForward15Seconds;

@property(readonly, nonatomic) _Bool supportsShare;

@property(readonly, nonatomic) _Bool supportsSkip;

@property(readonly, nonatomic) _Bool supportsTrackInfo;

@property(readonly, nonatomic) double timeOfSeekableEnd;

@property(readonly, nonatomic) double timeOfSeekableStart;

@property(readonly, nonatomic) NSArray *timedMetadataIfAvailable;

- (id)titlesForTime:(double)arg1;

@property(readonly, nonatomic) unsigned long long type;

- (id)url;

- (id)urlTimeMarkerForTime:(double)arg1;

@property(readonly, nonatomic) _Bool useEmbeddedChapterData;

@property(readonly, nonatomic) float userRating;

- (_Bool)userSkippedPlayback;

@property(readonly, nonatomic) _Bool wasDownloadedThisSession;



@end


