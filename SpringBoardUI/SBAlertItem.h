/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "UIAlertViewDelegate.h"



@class NSArray, UIAlertView;



@interface SBAlertItem : NSObject <UIAlertViewDelegate>

{

    UIAlertView *_alertSheet;

    _Bool _orderOverSBAlert;

    _Bool _preventLockOver;

    _Bool _didEverActivate;

    _Bool _ignoreIfAlreadyDisplaying;

    _Bool _didPlayPresentationSound;

    _Bool _allowInSetup;

    _Bool _pendInSetupIfNotAllowed;

    _Bool _pendWhileKeyBagLocked;

    NSArray *_allowedBundleIDs;

    _Bool _allowInStark;

}



+ (id)_alertItemsController;

+ (void)activateAlertItem:(id)arg1;

- (_Bool)_didEverActivate;

- (void)_playPresentationSound;

- (id)alertItemNotificationDate;

- (id)alertItemNotificationSender;

- (int)alertItemNotificationType;

- (int)alertPriority;

- (id)alertSheet;

- (Class)alertSheetClass;

- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;

- (_Bool)allowAutoUnlock;

@property(nonatomic) _Bool allowInSetup; // @synthesize allowInSetup=_allowInSetup;

@property(nonatomic) _Bool allowInStark; // @synthesize allowInStark=_allowInStark;

- (_Bool)allowMenuButtonDismissal;

@property(retain, nonatomic) NSArray *allowedBundleIDs; // @synthesize allowedBundleIDs=_allowedBundleIDs;

- (double)autoDismissInterval;

- (_Bool)behavesSuperModally;

- (void)buttonDismissed;

- (void)cleanPreviousConfiguration;

- (void)configure:(_Bool)arg1 requirePasscodeForActions:(_Bool)arg2;

- (void)dealloc;

- (void)didActivate;

- (void)didDeactivateForReason:(int)arg1;

- (void)didFailToActivate;

- (_Bool)didPlayPresentationSound;

- (void)dismiss;

- (void)dismiss:(int)arg1;

- (_Bool)dismissOnLock;

- (_Bool)dismissOnModalDisplayActivation;

- (_Bool)displayActionButtonOnLockScreen;

- (_Bool)forcesModalAlertAppearance;

- (_Bool)hasActiveKeyboardOnScreen;

@property(nonatomic) _Bool ignoreIfAlreadyDisplaying; // @synthesize ignoreIfAlreadyDisplaying=_ignoreIfAlreadyDisplaying;

- (id)init;

- (_Bool)isCriticalAlert;

- (id)lockLabel;

- (void)noteVolumeOrLockPressed;

@property(nonatomic) _Bool pendInSetupIfNotAllowed; // @synthesize pendInSetupIfNotAllowed=_pendInSetupIfNotAllowed;

@property(nonatomic) _Bool pendWhileKeyBagLocked; // @synthesize pendWhileKeyBagLocked=_pendWhileKeyBagLocked;

- (void)performUnlockAction;

- (void)playPresentationSound;

- (id)prepareNewAlertSheetWithLockedState:(_Bool)arg1 requirePasscodeForActions:(_Bool)arg2;

- (_Bool)preventInterruption;

- (_Bool)preventLockOver;

- (_Bool)reappearsAfterLock;

- (_Bool)reappearsAfterUnlock;

- (void)screenWillUndim;

- (void)setOrderOverSBAlert:(_Bool)arg1;

- (void)setPreventLockOver:(_Bool)arg1;

- (id)shortLockLabel;

- (_Bool)shouldShowInEmergencyCall;

- (_Bool)shouldShowInLockScreen;

- (id)sound;

- (_Bool)togglesMediaControls;

- (_Bool)undimsScreen;

- (int)unlockSource;

- (_Bool)unlocksScreen;

- (void)willActivate;

- (void)willDeactivateForReason:(int)arg1;

- (void)willRelockForButtonPress:(_Bool)arg1;



@end


