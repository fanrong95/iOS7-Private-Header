/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class JSContext;



@interface JSValue : NSObject

{

    struct OpaqueJSValue *m_value;

    JSContext *_context;

}



+ (SEL)selectorForStructToValue:(const char *)arg1;

+ (SEL)selectorForValueToStruct:(const char *)arg1;

+ (id)valueWithBool:(_Bool)arg1 inContext:(id)arg2;

+ (id)valueWithDouble:(double)arg1 inContext:(id)arg2;

+ (id)valueWithInt32:(int)arg1 inContext:(id)arg2;

+ (id)valueWithJSValueRef:(struct OpaqueJSValue *)arg1 inContext:(id)arg2;

+ (id)valueWithNewArrayInContext:(id)arg1;

+ (id)valueWithNewErrorFromMessage:(id)arg1 inContext:(id)arg2;

+ (id)valueWithNewObjectInContext:(id)arg1;

+ (id)valueWithNewRegularExpressionFromPattern:(id)arg1 flags:(id)arg2 inContext:(id)arg3;

+ (id)valueWithNullInContext:(id)arg1;

+ (id)valueWithObject:(id)arg1 inContext:(id)arg2;

+ (id)valueWithPoint:(struct CGPoint)arg1 inContext:(id)arg2;

+ (id)valueWithRange:(struct _NSRange)arg1 inContext:(id)arg2;

+ (id)valueWithRect:(struct CGRect)arg1 inContext:(id)arg2;

+ (id)valueWithSize:(struct CGSize)arg1 inContext:(id)arg2;

+ (id)valueWithUInt32:(unsigned int)arg1 inContext:(id)arg2;

+ (id)valueWithUndefinedInContext:(id)arg1;

- (struct OpaqueJSValue *)JSValueRef;

- (id)callWithArguments:(id)arg1;

- (id)constructWithArguments:(id)arg1;

@property(readonly) JSContext *context; // @synthesize context=_context;

- (void)dealloc;

- (void)defineProperty:(id)arg1 descriptor:(id)arg2;

- (_Bool)deleteProperty:(id)arg1;

- (id)description;

- (_Bool)hasProperty:(id)arg1;

- (id)init;

- (id)initWithValue:(struct OpaqueJSValue *)arg1 inContext:(id)arg2;

- (id)invokeMethod:(id)arg1 withArguments:(id)arg2;

- (_Bool)isBoolean;

- (_Bool)isEqualToObject:(id)arg1;

- (_Bool)isEqualWithTypeCoercionToObject:(id)arg1;

- (_Bool)isInstanceOf:(id)arg1;

- (_Bool)isNull;

- (_Bool)isNumber;

- (_Bool)isObject;

- (_Bool)isString;

- (_Bool)isUndefined;

- (id)objectAtIndexedSubscript:(unsigned long long)arg1;

- (id)objectForKeyedSubscript:(id)arg1;

- (void)setObject:(id)arg1 atIndexedSubscript:(unsigned long long)arg2;

- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;

- (void)setValue:(id)arg1 atIndex:(unsigned long long)arg2;

- (void)setValue:(id)arg1 forProperty:(id)arg2;

- (id)toArray;

- (_Bool)toBool;

- (id)toDate;

- (id)toDictionary;

- (double)toDouble;

- (int)toInt32;

- (id)toNumber;

- (id)toObject;

- (id)toObjectOfClass:(Class)arg1;

- (struct CGPoint)toPoint;

- (struct _NSRange)toRange;

- (struct CGRect)toRect;

- (struct CGSize)toSize;

- (id)toString;

- (unsigned int)toUInt32;

- (id)valueAtIndex:(unsigned long long)arg1;

- (id)valueForProperty:(id)arg1;



@end


