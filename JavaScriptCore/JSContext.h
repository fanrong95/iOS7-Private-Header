/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class JSValue, JSVirtualMachine, JSWrapperMap;



@interface JSContext : NSObject

{

    JSVirtualMachine *m_virtualMachine;

    struct OpaqueJSContext *m_context;

    JSWrapperMap *m_wrapperMap;

    struct Strong<JSC::JSObject> m_exception;

    id exceptionHandler;

}



+ (id)contextWithJSGlobalContextRef:(struct OpaqueJSContext *)arg1;

+ (id)currentArguments;

+ (id)currentContext;

+ (id)currentThis;

- (id).cxx_construct;

- (void).cxx_destruct;

- (struct OpaqueJSContext *)JSGlobalContextRef;

- (void)beginCallbackWithData:(struct CallbackData *)arg1 thisValue:(struct OpaqueJSValue *)arg2 argumentCount:(unsigned long long)arg3 arguments:(const struct OpaqueJSValue **)arg4;

- (_Bool)boolFromNotifyException:(struct OpaqueJSValue *)arg1;

- (void)dealloc;

- (void)endCallbackWithData:(struct CallbackData *)arg1;

- (id)evaluateScript:(id)arg1;

@property(retain) JSValue *exception;

@property(copy) id exceptionHandler; // @synthesize exceptionHandler;

- (id)globalObject;

- (id)init;

- (id)initWithGlobalContextRef:(struct OpaqueJSContext *)arg1;

- (id)initWithVirtualMachine:(id)arg1;

- (void)notifyException:(struct OpaqueJSValue *)arg1;

- (id)objectForKeyedSubscript:(id)arg1;

- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;

- (id)valueFromNotifyException:(struct OpaqueJSValue *)arg1;

@property(readonly) JSVirtualMachine *virtualMachine;

- (id)wrapperForJSObject:(struct OpaqueJSValue *)arg1;

- (id)wrapperForObjCObject:(id)arg1;

@property(readonly) JSWrapperMap *wrapperMap;



@end


