/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class ACAccount, DAStatusReport, DATaskManager, NSArray, NSData, NSMutableDictionary, NSString, NSURL;



@interface DAAccount : NSObject

{

    ACAccount *_backingAccountInfo;

    _Bool _hasInitted;

    _Bool _shouldPromptForPassword;

    _Bool _shouldUseOpportunisticSockets;

    _Bool _wasUserInitiated;

    NSMutableDictionary *_haveWarnedAboutCertDict;

    DAStatusReport *_statusReport;

    struct __CFDictionary *_consumers;

    struct __CFURLStorageSession *_storageSession;

    DATaskManager *_taskManager;

    NSString *_clientToken;

    _Bool _shouldFailAllTasks;

    _Bool _isValidating;

    NSArray *_appIdsForPasswordPrompt;

    NSMutableDictionary *_dataclassPropertyURLsByDataclass;

}



+ (id)_leafAccountTypes;

+ (id)daAccountSubclassWithBackingAccountInfo:(id)arg1;

+ (id)oneshotListOfAccountIDs;

+ (void)reacquireClientRestrictions:(id)arg1;

- (int)_actionForTrust:(struct __SecTrust *)arg1 host:(id)arg2 service:(id)arg3;

- (id)_exceptionsDict;

- (_Bool)_isIdentityManagedByProfile;

- (id)_serverSuffixesToAlwaysFail;

- (void)_setPersistentUUID:(id)arg1;

- (void)_webLoginRequestedAtURL:(id)arg1 reasonString:(id)arg2 completionBlock:(id)arg3;

- (_Bool)accountBoolPropertyForKey:(id)arg1;

- (_Bool)accountContainsEmailAddress:(id)arg1;

@property(copy) NSString *accountDescription;

- (void)accountDidChangeFromOldAccountInfo:(id)arg1;

- (_Bool)accountHasSignificantPropertyChangesFromOldAccountInfo:(id)arg1;

- (id)accountID;

- (int)accountIntPropertyForKey:(id)arg1;

- (id)accountPropertyForKey:(id)arg1;

- (id)addUsernameToURL:(id)arg1;

- (id)additionalHeaderValues;

@property(readonly) NSArray *appIdsForPasswordPrompt; // @synthesize appIdsForPasswordPrompt=_appIdsForPasswordPrompt;

- (_Bool)autodiscoverAccountConfigurationWithConsumer:(id)arg1;

@property(readonly) ACAccount *backingAccountInfo; // @synthesize backingAccountInfo=_backingAccountInfo;

- (id)beginDownloadingAttachmentWithUUID:(id)arg1 consumer:(id)arg2;

- (void)cancelAllSearchQueries;

- (void)cancelDownloadingInstance:(id)arg1 error:(id)arg2;

- (void)cancelSearchQuery:(id)arg1;

- (void)cancelShareResponseInstance:(id)arg1 error:(id)arg2;

- (void)checkValidityOnAccountStore:(id)arg1 withConsumer:(id)arg2;

- (void)cleanupAccountFiles;

@property(readonly) NSString *clientToken;

- (void)clientTokenRequestedByServer;

- (id)consumerForTask:(id)arg1;

- (id)contactsFolders;

- (struct __CFURLStorageSession *)copyStorageSession;

- (id)customConnectionProperties;

@property(setter=setDAAccountVersion:) int daAccountVersion;

- (id)dataclassProperties;

@property(retain, nonatomic) NSMutableDictionary *dataclassPropertyURLsByDataclass; // @synthesize dataclassPropertyURLsByDataclass=_dataclassPropertyURLsByDataclass;

- (void)dealloc;

- (id)defaultContactsFolder;

- (id)defaultContainerIdentifierForDADataclass:(int)arg1;

- (id)defaultEventsFolder;

- (id)defaultNotesFolder;

- (id)defaultToDosFolder;

- (id)deletedItemsFolder;

- (id)description;

- (void)discoverInitialPropertiesWithConsumer:(id)arg1;

- (id)displayName;

- (id)domainOnly;

- (id)draftsFolder;

- (void)dropAssertionsAndRenewCredentialsWithHandler:(id)arg1;

@property(copy) NSString *emailAddress;

@property(copy) NSArray *emailAddresses;

@property(readonly) int enabledDataclassesBitmask;

- (_Bool)enabledForAnyDADataclasses:(int)arg1;

- (_Bool)enabledForDADataclass:(int)arg1;

@property(retain) NSData *encryptionIdentityPersistentReference;

- (id)eventsFolders;

- (struct __CFData *)exceptionsForDigest:(id)arg1;

- (void)getRootFolderWithConsumer:(id)arg1;

- (void)handleTrust:(struct __SecTrust *)arg1 forHost:(id)arg2 withCompletionBlock:(id)arg3;

- (_Bool)handleTrustChallenge:(id)arg1;

- (void)handleValidationError:(id)arg1 completion:(id)arg2;

- (_Bool)haveWarnedAboutCert:(id)arg1 forHost:(id)arg2;

@property(copy) NSString *host;

- (id)hostFromDataclassPropertiesForDataclass:(id)arg1;

@property(readonly) NSData *identityPersist;

- (id)inboxFolder;

- (void)ingestBackingAccountInfoProperties;

- (id)initWithBackingAccountInfo:(id)arg1;

- (_Bool)isActiveSyncAccount;

- (_Bool)isBookmarkDAVAccount;

- (_Bool)isCalDAVAccount;

- (_Bool)isCalDAVChildAccount;

- (_Bool)isCardDAVAccount;

@property(readonly) _Bool isChildAccount;

- (_Bool)isDisabled;

- (_Bool)isEnabledForDataclass:(id)arg1;

- (_Bool)isEqualToAccount:(id)arg1;

- (_Bool)isGoogleAccount;

- (_Bool)isHotmailAccount;

- (_Bool)isLDAPAccount;

- (_Bool)isSubscribedCalendarAccount;

@property(nonatomic) _Bool isValidating; // @synthesize isValidating=_isValidating;

@property(readonly) int keychainAccessibilityType;

- (id)localizedIdenticalAccountFailureMessage;

- (id)localizedInvalidPasswordMessage;

- (_Bool)monitorFolderWithID:(id)arg1;

- (_Bool)monitorFoldersWithIDs:(id)arg1;

- (id)notesFolders;

- (id)oauth2Token;

- (id)oauthInfoProvider;

- (id)onBehalfOfBundleIdentifier;

@property(copy) NSString *password;

- (id)passwordWithExpected:(_Bool)arg1;

- (void)performSearchQuery:(id)arg1;

@property(readonly) NSString *persistentUUID;

@property long long port;

- (long long)portFromDataclassPropertiesForDataclass:(id)arg1;

@property(copy) NSString *principalPath;

@property(copy) NSURL *principalURL;

- (_Bool)reattemptInvitationLinkageForMetaData:(id)arg1 inFolderWithId:(id)arg2;

- (void)reload;

- (void)removeAccountPropertyForKey:(id)arg1;

- (void)removeClientCertificateData;

- (void)removeConsumerForTask:(id)arg1;

- (void)removeDBSyncData;

- (void)resetAccountID;

- (_Bool)resetCertWarnings;

- (void)resetStatusReport;

- (id)respondToShareRequestForCalendar:(id)arg1 withResponse:(int)arg2 consumer:(id)arg3;

- (void)resumeMonitoringFoldersWithIDs:(id)arg1;

- (void)saveAccountProperties;

- (void)saveAccountPropertiesWithCompletionHandler:(id)arg1;

- (_Bool)saveModifiedPropertiesOnBackingAccount;

@property(readonly, nonatomic) NSString *scheduleIdentifier;

@property(readonly) NSString *scheme;

- (_Bool)searchQueriesRunning;

- (_Bool)sendEmailsForCalEvents:(id)arg1 consumer:(id)arg2;

- (id)sentItemsFolder;

- (void)setAccountBoolProperty:(_Bool)arg1 forKey:(id)arg2;

- (void)setAccountIntProperty:(int)arg1 forKey:(id)arg2;

- (void)setAccountProperty:(id)arg1 forKey:(id)arg2;

- (void)setConsumer:(id)arg1 forTask:(id)arg2;

- (void)setEnabled:(_Bool)arg1 forDADataclass:(int)arg2;

- (void)setEnabled:(_Bool)arg1 forDataclass:(id)arg2;

- (void)setExceptions:(struct __CFData *)arg1 forDigest:(id)arg2;

- (void)setHaveWarnedAboutCert:(id)arg1 forHost:(id)arg2;

- (void)setIdentityCertificatePersistentID:(id)arg1 managedByProfile:(_Bool)arg2;

@property _Bool shouldDoInitialAutodiscovery;

@property _Bool shouldPromptForPassword; // @synthesize shouldPromptForPassword=_shouldPromptForPassword;

@property _Bool shouldUseOpportunisticSockets; // @synthesize shouldUseOpportunisticSockets=_shouldUseOpportunisticSockets;

@property(retain) NSData *signingIdentityPersistentReference;

@property(retain) DAStatusReport *statusReport; // @synthesize statusReport=_statusReport;

- (void)setToDosNumberOfPastDaysToSync:(int)arg1;

@property _Bool useSSL;

@property(copy) NSString *user;

@property(copy) NSString *username;

@property _Bool wasUserInitiated; // @synthesize wasUserInitiated=_wasUserInitiated;

@property(readonly) _Bool shouldAutodiscoverAccountProperties;

@property(readonly, nonatomic) _Bool shouldFailAllTasks; // @synthesize shouldFailAllTasks=_shouldFailAllTasks;

- (_Bool)shouldRemoveDBSyncDataOnAccountChange;

- (void)shutdown;

- (id)spinnerIdentifiers;

- (id)stateString;

- (void)stopMonitoringFolderWithID:(id)arg1;

- (void)stopMonitoringFolders;

- (void)stopMonitoringFoldersWithIDs:(id)arg1;

- (int)supportsEmailFlagging;

- (int)supportsMailboxSearch;

- (void)suspendMonitoringFoldersWithIDs:(id)arg1;

- (id)syncStoreIdentifier;

- (void)synchronizeBookmarkTreeWithConsumer:(id)arg1 hasRemoteChanges:(_Bool)arg2;

- (void)synchronizeContactsFolder:(id)arg1 previousTag:(id)arg2 previousSyncToken:(id)arg3 actions:(id)arg4 highestIdContext:(CDStruct_1ef3fb1f *)arg5 isInitialUberSync:(_Bool)arg6 isResyncAfterConnectionFailed:(_Bool)arg7 previousTagIsSuspect:(_Bool)arg8 consumer:(id)arg9;

- (void)synchronizeEventsFolder:(id)arg1 previousTag:(id)arg2 actions:(id)arg3 highestIdContext:(CDStruct_a734b2e2 *)arg4 isInitialUberSync:(_Bool)arg5 isResyncAfterConnectionFailed:(_Bool)arg6 consumer:(id)arg7;

- (void)synchronizeNotesFolder:(id)arg1 noteContext:(id)arg2 previousTag:(id)arg3 actions:(id)arg4 changeSet:(id)arg5 notesToDeleteAfterSync:(id)arg6 isInitialUberSync:(_Bool)arg7 isResyncAfterConnectionFailed:(_Bool)arg8 consumer:(id)arg9;

- (void)synchronizeToDosFolder:(id)arg1 previousTag:(id)arg2 actions:(id)arg3 highestIdContext:(CDStruct_a734b2e2 *)arg4 isInitialUberSync:(_Bool)arg5 isResyncAfterConnectionFailed:(_Bool)arg6 consumer:(id)arg7;

@property(readonly, nonatomic) DATaskManager *taskManager; // @synthesize taskManager=_taskManager;

- (void)tearDown;

- (id)toDosFolders;

- (int)toDosNumberOfPastDaysToSync;

- (id)unactionableICSRepresentationForMetaData:(id)arg1 inFolderWithId:(id)arg2 outSummary:(id *)arg3;

- (_Bool)upgradeAccount;

- (id)urlFromDataclassPropertiesForDataclass:(id)arg1;

- (_Bool)useSSLFromDataclassPropertiesForDataclass:(id)arg1;

- (id)usernameWithoutDomain;

- (void)webLoginRequestedAtURL:(id)arg1 reasonString:(id)arg2 completionBlock:(id)arg3;



@end


