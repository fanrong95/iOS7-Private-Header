/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSMutableDictionary, NSString, NSXPCConnection;



@interface AFConnection : NSObject

{

    NSXPCConnection *_connection;

    NSString *_outstandingRequestClass;

    _Bool _hasActiveRequest;

    NSMutableDictionary *_replyHandlerForAceId;

    unsigned int _stateInSync:1;

    unsigned int _shouldSpeak:1;

    unsigned int _isCapturingSpeech:1;

    unsigned int _hasOutstandingRequest:1;

    unsigned int _audioSessionID;

    float _averagePower;

    float _peakPower;

    unsigned int _clientStateIsInSync:1;

    unsigned int _voiceOverIsActive:1;

    id <AFAssistantUIService> _delegate;

    id <AFSpeechDelegate> _speechDelegate;

}



+ (_Bool)assistantIsSupported;

+ (_Bool)assistantIsSupportedForLanguageCode:(id)arg1 error:(id *)arg2;

+ (void)beginMonitoringAvailability;

+ (id)currentLanguageCode;

+ (void)defrost;

+ (void)initialize;

+ (_Bool)isAvailable;

+ (_Bool)isReadyForLanguageCode:(id)arg1;

+ (id)outputVoice;

+ (void)stopMonitoringAvailability;

+ (_Bool)userDataSyncNeeded;

- (void).cxx_destruct;

- (void)_barrier;

- (void)_cancelRequestTimeout;

- (void)_checkAndSetIsCapturingSpeech:(_Bool)arg1;

- (void)_clearAssistantInfoForAccountWithIdentifier:(id)arg1;

- (void)_clearConnection;

- (id)_clientService;

- (id)_clientServiceWithErrorHandler:(id)arg1;

- (id)_connection;

- (void)_connectionInterrupted;

- (void)_doCommand:(id)arg1 reply:(id)arg2;

- (void)_extendRequestTimeout;

- (void)_invokeRequestTimeout;

- (void)_requestDidEnd;

- (void)_requestWillBeginWithRequestClass:(id)arg1 isSpeechRequest:(_Bool)arg2;

- (void)_requestWillBeginWithRequestClass:(id)arg1 isSpeechRequest:(_Bool)arg2 isBackgroundRequest:(_Bool)arg3;

- (void)_scheduleRequestTimeout;

- (void)_setAudioSessionID:(unsigned int)arg1;

- (void)_setShouldSpeak:(_Bool)arg1;

- (void)_speechRecordingDidUpdateAveragePower:(float)arg1 peakPower:(float)arg2;

- (void)_tellDelegateAudioSessionIDChanged:(unsigned int)arg1;

- (void)_tellDelegateRequestFailed:(id)arg1 requestClass:(id)arg2;

- (void)_tellDelegateRequestFinished;

- (void)_tellDelegateRequestWillStart;

- (void)_tellDelegateShouldSpeakChanged:(_Bool)arg1;

- (void)_tellSpeechDelegateRecognitionDidFail:(id)arg1;

- (void)_tellSpeechDelegateRecordingDidBeginOnAVRecordRoute:(id)arg1;

- (void)_tellSpeechDelegateRecordingDidCancel;

- (void)_tellSpeechDelegateRecordingDidEnd;

- (void)_tellSpeechDelegateRecordingDidFail:(id)arg1;

- (void)_tellSpeechDelegateRecordingWillBegin;

- (void)_tellSpeechDelegateSpeechRecognized:(id)arg1;

- (void)_updateClientState;

- (void)_updateState;

- (void)_willCancelRequest;

- (void)_willCompleteRequest;

- (void)_willFailRequestWithError:(id)arg1;

- (void)_willStartRequestForSpeech:(_Bool)arg1;

- (unsigned int)audioSessionID;

- (float)averagePower;

- (void)cancelRequest;

- (void)cancelSpeech;

- (void)clearContext;

- (void)dealloc;

@property(nonatomic) __weak id <AFAssistantUIService> delegate; // @synthesize delegate=_delegate;

- (void)endSession;

- (id)init;

@property(readonly, nonatomic) _Bool isRecording;

- (float)peakPower;

- (void)preheat;

- (void)redoRequest;

- (void)rollbackClearContext;

- (void)rollbackRequest;

- (void)sendGenericAceCommand:(id)arg1;

- (void)sendGenericAceCommand:(id)arg1 conflictHandler:(id)arg2;

- (void)sendReplyCommand:(id)arg1;

- (void)setAlertContextWithBulletins:(id)arg1;

- (void)setApplicationContext;

- (void)setIsStark:(_Bool)arg1;

- (void)setLockState:(_Bool)arg1 screenLocked:(_Bool)arg2;

@property(nonatomic) __weak id <AFSpeechDelegate> speechDelegate; // @synthesize speechDelegate=_speechDelegate;

- (void)setVoiceOverIsActive:(_Bool)arg1;

- (_Bool)shouldSpeak;

- (void)startDirectActionRequestWithString:(id)arg1;

- (void)startRequestWithCorrectedText:(id)arg1 forSpeechIdentifier:(id)arg2;

- (void)startRequestWithText:(id)arg1;

- (void)startSpeechPronunciationRequestWithOptions:(id)arg1 pronunciationContext:(id)arg2;

- (void)startSpeechRequestWithOptions:(id)arg1;

- (void)startSpeechRequestWithSpeechFileAtURL:(id)arg1;

- (void)startSpeechRequestWithSpeechFileAtURL:(id)arg1 isNarrowBand:(_Bool)arg2;

- (void)stopSpeech;

- (void)stopSpeechWithOptions:(id)arg1;

- (void)telephonyRequestCompleted;

- (void)undoRequest;

- (void)updateSpeechOptions:(id)arg1;



@end


