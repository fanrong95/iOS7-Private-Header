/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "EKCalendarItem.h"


@class EKCalendarDate, EKEventStore, EKParticipant, NSArray, NSDate, NSNumber, NSString, NSURL;



@interface EKEvent : EKCalendarItem

{

    _Bool _occurrenceIsAllDay;

    _Bool _requiresDetachDueToSnoozedAlarm;

    int _attendeeCount;

    EKCalendarDate *_occurrenceStartDate;

    EKCalendarDate *_occurrenceEndDate;

    EKCalendarDate *_originalOccurrenceStartDate;

    EKCalendarDate *_originalOccurrenceEndDate;

    NSNumber *_originalOccurrenceIsAllDay;

}



+ (id)eventWithEventStore:(id)arg1;

- (_Bool)_cancelWithSpan:(int)arg1 error:(id *)arg2;

- (_Bool)_checkStartDateConstraintAgainstDate:(CDStruct_b0fa4487)arg1 timeZone:(id)arg2 error:(id *)arg3;

- (id)_dateForNextOccurrence;

- (void)_deleteThisOccurrence;

- (_Bool)_deleteWithSpan:(int)arg1 error:(id *)arg2;

- (void)_detachWithStartDate:(id)arg1 newStartDate:(id)arg2 future:(_Bool)arg3;

- (id)_effectiveTimeZone;

- (CDStruct_b0fa4487)_gregorianDateCorrectedForTimeZoneFromCalendarDate:(id)arg1 orNSDate:(id)arg2;

- (_Bool)_isAllDay;

- (_Bool)_isInitialOccurrenceDate:(id)arg1;

- (_Bool)_occurrenceExistsOnDate:(double)arg1 timeZone:(id)arg2;

- (int)_parentParticipationStatus;

- (id)_persistentEvent;

- (void)_sendModifiedNote;

- (_Bool)_shouldCancelInsteadOfDeleteWithSpan:(int)arg1;

- (_Bool)_shouldDeclineInsteadOfDelete;

- (_Bool)_validateAlarmIntervalConstrainedToRecurrenceInterval:(int)arg1;

- (_Bool)_validateDatesAndRecurrencesGivenSpan:(int)arg1 error:(id *)arg2;

- (_Bool)_validateDurationConstrainedToRecurrenceInterval;

- (_Bool)allowsAlarmModifications;

- (_Bool)allowsCalendarModifications;

- (_Bool)allowsRecurrenceModifications;

@property(readonly, nonatomic) NSArray *attachments;

@property(readonly) int attendeeCount; // @synthesize attendeeCount=_attendeeCount;

- (id)attendees;

@property(nonatomic) int availability;

@property(readonly, nonatomic) long long birthdayPersonID;

@property(readonly, nonatomic) _Bool canBeRespondedTo;

@property(readonly) _Bool canDetachSingleOccurrence;

- (_Bool)canMoveToCalendar:(id)arg1 fromCalendar:(id)arg2 error:(id *)arg3;

@property(readonly, nonatomic) _Bool canSetAvailability;

- (_Bool)changingAllDayPropertyIsAllowed;

- (void)clearInvitationStatus;

- (_Bool)commitWithSpan:(int)arg1 error:(id *)arg2;

- (id)committedValueForKey:(id)arg1;

- (long long)compareStartDateWithEvent:(id)arg1;

@property(readonly, nonatomic) _Bool dateChanged;

- (void)dealloc;

- (id)description;

- (void)didCommit;

- (id)dirtyPropertiesToSkip;

@property(readonly) double duration;

@property(readonly, nonatomic) EKCalendarDate *endCalendarDate;

@property(copy, nonatomic) NSDate *endDate;

@property(readonly, nonatomic) CDStruct_b0fa4487 endDateGr;

- (CDStruct_b0fa4487)endDatePinnedForAllDay;

@property(readonly, nonatomic) NSString *eventIdentifier;

@property(readonly, nonatomic) EKEventStore *eventStore;

- (id)exportToICS;

- (id)externalURI;

@property(readonly, nonatomic) NSURL *externalURL;

- (_Bool)hasSelfAttendee;

- (unsigned long long)hash;

- (id)init;

- (id)initWithEventStore:(id)arg1;

- (id)initWithPersistentObject:(id)arg1;

- (id)initWithPersistentObject:(id)arg1 occurrenceDate:(id)arg2;

@property(readonly) NSDate *initialEndDate;

@property(readonly) NSDate *initialStartDate;

@property(nonatomic) unsigned long long invitationStatus;

@property(nonatomic, getter=isAllDay) _Bool allDay;

@property(readonly) _Bool isAllDayDirty;

@property(readonly, nonatomic) _Bool isDetached;

- (_Bool)isDirtyIgnoringCalendar;

@property(readonly) _Bool isEndDateDirty;

- (_Bool)isEqual:(id)arg1;

@property(readonly) _Bool isStartDateDirty;

@property(readonly) _Bool isStatusDirty;

- (_Bool)isTentative;

@property(readonly, nonatomic) _Bool locationChanged;

@property(readonly, nonatomic) unsigned int modifiedProperties;

- (_Bool)needsOccurrenceCacheUpdate;

@property(readonly, nonatomic) NSDate *occurrenceDate;

@property(copy, nonatomic) EKCalendarDate *occurrenceEndDate; // @synthesize occurrenceEndDate=_occurrenceEndDate;

@property(nonatomic) _Bool occurrenceIsAllDay; // @synthesize occurrenceIsAllDay=_occurrenceIsAllDay;

@property(copy, nonatomic) EKCalendarDate *occurrenceStartDate; // @synthesize occurrenceStartDate=_occurrenceStartDate;

@property(readonly, nonatomic) EKParticipant *organizer;

@property(copy, nonatomic) EKCalendarDate *originalOccurrenceEndDate; // @synthesize originalOccurrenceEndDate=_originalOccurrenceEndDate;

@property(copy, nonatomic) NSNumber *originalOccurrenceIsAllDay; // @synthesize originalOccurrenceIsAllDay=_originalOccurrenceIsAllDay;

@property(copy, nonatomic) EKCalendarDate *originalOccurrenceStartDate; // @synthesize originalOccurrenceStartDate=_originalOccurrenceStartDate;

@property(nonatomic) int participationStatus;

@property(readonly, nonatomic) NSDate *participationStatusModifiedDate;

@property(readonly, nonatomic) int pendingParticipationStatus;

- (id)recurrenceRule;

- (_Bool)refresh;

- (_Bool)removeWithSpan:(int)arg1 error:(id *)arg2;

- (_Bool)requiresDetach;

@property(nonatomic) _Bool requiresDetachDueToSnoozedAlarm; // @synthesize requiresDetachDueToSnoozedAlarm=_requiresDetachDueToSnoozedAlarm;

@property(copy) NSString *responseComment;

@property(readonly, nonatomic) _Bool responseMustApplyToAll;

- (void)revert;

- (void)rollback;

- (void)setModifiedProperties:(unsigned int)arg1;

- (void)setNeedsOccurrenceCacheUpdate:(_Bool)arg1;

- (void)setRecurrenceRule:(id)arg1;

@property(copy, nonatomic) NSDate *startDate;

- (void)setTimeZone:(id)arg1;

- (void)snoozeAlarm:(id)arg1 withTimeIntervalFromNow:(double)arg2;

@property(readonly, nonatomic) EKCalendarDate *startCalendarDate;

@property(readonly, nonatomic) CDStruct_b0fa4487 startDateGr;

- (CDStruct_b0fa4487)startDatePinnedForAllDay;

@property(readonly, nonatomic) int status;

@property(readonly, nonatomic) _Bool timeChanged;

- (id)title;

@property(readonly, nonatomic) _Bool titleChanged;

@property(readonly, nonatomic) NSString *uniqueId;

- (_Bool)validateWithSpan:(int)arg1 error:(id *)arg2;



// Remaining properties

@property(readonly, nonatomic) NSString *UUID;

@property(readonly) _Bool isEditable;



@end


