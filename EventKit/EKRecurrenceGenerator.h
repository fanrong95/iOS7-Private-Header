/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSArray, NSCalendar, NSDate, NSTimeZone;



@interface EKRecurrenceGenerator : NSObject

{

    NSCalendar *_calendar;

    NSDate *_eventStartDate;

    NSDate *_eventEndDate;

    NSTimeZone *_eventTimeZone;

    unsigned int _duration;

    _Bool _allDay;

    int _interval;

    int _frequency;

    NSDate *_endDate;

    int _weekStart;

    _Bool _shouldPinMonthDays;

    NSArray *_daysOfTheWeek;

    NSArray *_daysOfTheMonth;

    NSArray *_daysOfTheYear;

    NSArray *_weeksOfTheYear;

    NSArray *_monthsOfTheYear;

    NSArray *_setPositions;

}



+ (id)generator;

- (id)_computeRecurrenceEndDate:(int)arg1;

- (double)_convertAbsoluteTime:(double)arg1 fromTimeZone:(id)arg2 toTimeZone:(id)arg3;

- (id)_copyDailyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned int)arg4;

- (id)_copyMonthlyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned int)arg4;

- (id)_copyOccurrenceDatesBetweenStartDate:(CDStruct_b0fa4487)arg1 endDate:(CDStruct_b0fa4487)arg2 timeZone:(id)arg3 limit:(int)arg4;

- (id)_copySimpleYearlyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned int)arg4;

- (id)_copyWeeklyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned int)arg4;

- (id)_copyYearlyOccurrencesWithInitialDate:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 count:(unsigned int)arg4;

- (_Bool)_isSimpleYearlyRecurrence;

- (void)_prepareForCalRecurrence:(void *)arg1 locked:(_Bool)arg2;

- (void)_prepareForEKRecurrence:(id)arg1;

- (void)_prepareForPersistentRecurrence:(id)arg1;

- (void)_setupForCalEvent:(void *)arg1 locked:(_Bool)arg2;

- (void)_setupForEKEvent:(id)arg1;

- (void)_setupForPersistentEvent:(id)arg1;

- (_Bool)_validateCalDate:(CDStruct_b0fa4487)arg1 pinned:(_Bool)arg2;

@property(nonatomic) _Bool allDay; // @synthesize allDay=_allDay;

- (id)copyOccurrenceDatesWithCalEvent:(void *)arg1 startDate:(CDStruct_b0fa4487)arg2 endDate:(CDStruct_b0fa4487)arg3 timeZone:(id)arg4 limit:(int)arg5 locked:(_Bool)arg6;

- (id)copyOccurrenceDatesWithEKEvent:(id)arg1 recurrenceRule:(id)arg2 startDate:(CDStruct_b0fa4487)arg3 endDate:(CDStruct_b0fa4487)arg4 timeZone:(id)arg5 exceptionDates:(id)arg6 limit:(int)arg7;

- (id)copyOccurrenceDatesWithEKEvent:(id)arg1 recurrenceRule:(id)arg2 startDate:(CDStruct_b0fa4487)arg3 endDate:(CDStruct_b0fa4487)arg4 timeZone:(id)arg5 limit:(int)arg6;

- (id)copyOccurrenceDatesWithEKEvent:(id)arg1 startDate:(CDStruct_b0fa4487)arg2 endDate:(CDStruct_b0fa4487)arg3 timeZone:(id)arg4 limit:(int)arg5;

- (id)copyOccurrenceDatesWithEvent:(id)arg1 recurrenceRule:(id)arg2 startDate:(CDStruct_b0fa4487)arg3 endDate:(CDStruct_b0fa4487)arg4 timeZone:(id)arg5 limit:(int)arg6;

- (id)copyOccurrenceDatesWithEvent:(id)arg1 startDate:(CDStruct_b0fa4487)arg2 endDate:(CDStruct_b0fa4487)arg3 timeZone:(id)arg4 limit:(int)arg5;

- (id)copyOccurrenceDatesWithInitialDate:(id)arg1 calRecurrences:(id)arg2 rangeStart:(id)arg3 rangeEnd:(id)arg4 timeZone:(id)arg5;

@property(copy, nonatomic) NSArray *daysOfTheMonth; // @synthesize daysOfTheMonth=_daysOfTheMonth;

@property(copy, nonatomic) NSArray *daysOfTheWeek; // @synthesize daysOfTheWeek=_daysOfTheWeek;

@property(copy, nonatomic) NSArray *daysOfTheYear; // @synthesize daysOfTheYear=_daysOfTheYear;

- (void)dealloc;

@property(copy, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;

@property(copy, nonatomic) NSDate *eventEndDate; // @synthesize eventEndDate=_eventEndDate;

@property(copy, nonatomic) NSDate *eventStartDate; // @synthesize eventStartDate=_eventStartDate;

@property(copy, nonatomic) NSTimeZone *eventTimeZone; // @synthesize eventTimeZone=_eventTimeZone;

- (id)init;

- (_Bool)isOccurrenceDate:(id)arg1 validForEvent:(id)arg2;

@property(copy, nonatomic) NSArray *monthsOfTheYear; // @synthesize monthsOfTheYear=_monthsOfTheYear;

- (id)nextOccurrenceDateWithEKRecurrences:(id)arg1 exceptionDates:(id)arg2 initialDate:(id)arg3 afterDate:(id)arg4;

- (id)nextOccurrenceDateWithEKRecurrences:(id)arg1 initialDate:(id)arg2 afterDate:(id)arg3;

- (_Bool)occurrenceDate:(id)arg1 matchesRecurrenceRule:(id)arg2 forEvent:(id)arg3 includeDetachedEventsInSeries:(_Bool)arg4;

@property(copy, nonatomic) NSArray *setPositions; // @synthesize setPositions=_setPositions;

@property(copy, nonatomic) NSArray *weeksOfTheYear; // @synthesize weeksOfTheYear=_weeksOfTheYear;



@end


