/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "UIView.h"



#import "MKAnnotationRepresentation.h"

#import "MKLocatableObject.h"



@class MKAnnotationManager, MKUserLocationAnnotationViewProxy, NSString, UICalloutView, UIImage, VKAnchorWrapper, VKAttributedRouteMatch, _MKAnnotationViewAnchor;



@interface MKAnnotationView : UIView <MKAnnotationRepresentation, MKLocatableObject>

{

    _Bool _customTransformApplied;

    _Bool _internalTransformApplied;

    _Bool _animatingToCoordinate;

    _Bool _tracking;

    CDStruct_2c43369c _presentationCoordinate;

    double _presentationCourse;

    id _presentationCoordinateChangedCallback;

    MKUserLocationAnnotationViewProxy *_userLocationProxy;

    double _rotationRadians;

    _MKAnnotationViewAnchor *_anchor;

    VKAttributedRouteMatch *_routeMatch;

    double _mapRotationRadians;

    _Bool _explicitlyHidden;

    _Bool _hiddenForOffscreen;

    _Bool _hiddenForInvalidPoint;

    double _mapPitchRadians;

    long long _mapDisplayStyle;

    MKAnnotationManager *_annotationManager;

    id <MKAnnotation> _annotation;

    UICalloutView *_calloutView;

    UIView *_leftCalloutAccessoryView;

    UIView *_rightCalloutAccessoryView;

    UIView *_detailCalloutAccessoryView;

    NSString *_reuseIdentifier;

    UIImage *_image;

    unsigned long long _mapType;

    unsigned long long _zIndex;

    struct CGPoint _centerOffset;

    struct CGPoint _calloutOffset;

    unsigned long long _dragState;

    id _calloutHitTest;

    struct {

        unsigned int disabled:1;

        unsigned int selected:1;

        unsigned int canShowCallout:1;

        unsigned int isHighlighted:1;

        unsigned int canDisplayDisclosureInCallout:1;

        unsigned int canDisplayPlacemarkInCallout:1;

        unsigned int draggable:1;

    } _flags;

    struct CGPoint _leftCalloutOffset;

    struct CGPoint _rightCalloutOffset;

}



+ (id)_disclosureCalloutButton;

+ (_Bool)_followsTerrain;

+ (unsigned long long)_selectedZIndex;

+ (unsigned long long)_zIndex;

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;

+ (id)currentLocationTitle;

+ (id)droppedPinTitle;

- (id)_annotationContainer;

@property(nonatomic, setter=_setAnnotationManager:) MKAnnotationManager *_annotationManager; // @synthesize _annotationManager;

@property(copy, nonatomic) id _calloutHitTest; // @synthesize _calloutHitTest;

- (id)_calloutView;

- (_Bool)_canChangeOrientation;

- (_Bool)_canDisplayDisclosureInCallout;

- (_Bool)_canDisplayPlacemarkInCallout;

- (id)_containerView;

- (id)_contentLayer;

- (void)_didUpdatePosition;

- (struct CGPoint)_draggingDropOffset;

- (void)_enableRotationForHeadingMode:(double)arg1;

- (_Bool)_hasAlternateOrientation;

@property(nonatomic, getter=_isAnimatingToCoordinate, setter=_setAnimatingToCoordinate:) _Bool _animatingToCoordinate; // @synthesize _animatingToCoordinate;

@property(nonatomic, getter=_isHiddenForInvalidPoint, setter=_setHiddenForInvalidPoint:) _Bool hiddenForInvalidPoint; // @synthesize hiddenForInvalidPoint=_hiddenForInvalidPoint;

@property(nonatomic, getter=_isTracking, setter=_setTracking:) _Bool _tracking; // @synthesize _tracking;

@property(nonatomic, getter=_mapDisplayStyle, setter=_setMapDisplayStyle:) long long mapDisplayStyle; // @synthesize mapDisplayStyle=_mapDisplayStyle;

@property(nonatomic, getter=_mapPitchRadians, setter=_setMapPitchRadians:) double mapPitchRadians; // @synthesize mapPitchRadians=_mapPitchRadians;

@property(nonatomic, getter=_mapRotationRadians, setter=_setMapRotationRadians:) double mapRotationRadians; // @synthesize mapRotationRadians=_mapRotationRadians;

- (unsigned long long)_mapType;

- (struct CGRect)_mapkit_visibleRect;

- (unsigned long long)_orientationCount;

@property(nonatomic, setter=_setPresentationCoordinate:) CDStruct_c3b9c2ee _presentationCoordinate; // @synthesize _presentationCoordinate;

@property(copy, nonatomic, setter=_setPresentationCoordinateChangedCallback:) id _presentationCoordinateChangedCallback; // @synthesize _presentationCoordinateChangedCallback;

@property(nonatomic, setter=_setPresentationCourse:) double _presentationCourse; // @synthesize _presentationCourse;

- (void)_resetZIndex;

- (void)_resetZIndexNotify:(_Bool)arg1;

@property(retain, nonatomic, setter=_setRouteMatch:) VKAttributedRouteMatch *_routeMatch; // @synthesize _routeMatch;

- (void)_setCalloutView:(id)arg1;

- (void)_setCanDisplayDisclosureInCallout:(_Bool)arg1;

- (void)_setCanDisplayPlacemarkInCallout:(_Bool)arg1;

- (void)_setHiddenForOffscreen:(_Bool)arg1;

- (void)_setMapType:(unsigned long long)arg1;

- (void)_setRotationRadians:(double)arg1 withAnimation:(id)arg2;

- (void)_setZIndex:(unsigned long long)arg1;

- (void)_setZIndex:(unsigned long long)arg1 notify:(_Bool)arg2;

@property(readonly, nonatomic, getter=_significantBounds) struct CGRect significantBounds;

@property(readonly, nonatomic) struct CGRect _significantFrame;

- (void)_transitionFrom:(long long)arg1 to:(long long)arg2 duration:(double)arg3;

- (void)_updateFromMap;

@property(readonly, nonatomic) MKUserLocationAnnotationViewProxy *_userLocationProxy;

- (void)_userTrackingModeDidChange:(id)arg1;

- (id)_vkMarker;

- (unsigned long long)_zIndex;

@property(readonly, nonatomic) VKAnchorWrapper *anchor;

@property(retain, nonatomic) id <MKAnnotation> annotation;

@property(nonatomic) struct CGPoint calloutOffset;

@property(nonatomic) _Bool canShowCallout;

@property(nonatomic) struct CGPoint centerOffset;

@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;

- (void)dealloc;

@property(retain, nonatomic) UIView *detailCalloutAccessoryView; // @synthesize detailCalloutAccessoryView=_detailCalloutAccessoryView;

@property(nonatomic) unsigned long long dragState;

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@property(retain, nonatomic) UIImage *image;

- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;

- (id)initWithFrame:(struct CGRect)arg1;

@property(nonatomic, getter=isDraggable) _Bool draggable;

@property(nonatomic, getter=isEnabled) _Bool enabled;

@property(nonatomic, getter=isHighlighted) _Bool highlighted;

- (_Bool)isPersistent;

@property(nonatomic, getter=isSelected) _Bool selected;

- (void)layoutSubviews;

@property(retain, nonatomic) UIView *leftCalloutAccessoryView; // @synthesize leftCalloutAccessoryView=_leftCalloutAccessoryView;

@property(nonatomic) struct CGPoint leftCalloutOffset; // @synthesize leftCalloutOffset=_leftCalloutOffset;

- (void)prepareForReuse;

@property(readonly, nonatomic) NSString *reuseIdentifier;

@property(retain, nonatomic) UIView *rightCalloutAccessoryView; // @synthesize rightCalloutAccessoryView=_rightCalloutAccessoryView;

@property(nonatomic) struct CGPoint rightCalloutOffset; // @synthesize rightCalloutOffset=_rightCalloutOffset;

- (void)setDragState:(unsigned long long)arg1 animated:(_Bool)arg2;

- (void)setHidden:(_Bool)arg1;

- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;



@end


