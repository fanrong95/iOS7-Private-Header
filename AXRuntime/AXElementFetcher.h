/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class AXElement, AXElementGroup, AXElementGroupPruner, AXVisualElementGrouper, NSArray, NSMapTable, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>;



@interface AXElementFetcher : NSObject

{

    NSObject<OS_dispatch_queue> *_elementFetchQueue;

    NSObject<OS_dispatch_queue> *_elementAccessQueue;

    struct __AXObserver *_axRuntimeNotificationObserver;

    unsigned long long _scheduledFetchEvent;

    NSObject<OS_dispatch_source> *_eventCoalesceTimer;

    _Bool _enabled;

    _Bool _eventManagementEnabled;

    _Bool _groupingEnabled;

    _Bool _shouldUsePadInterfaceHeuristics;

    _Bool _fetchingElements;

    id <AXElementFetcherDelegate> _delegate;

    long long _fetchPolicy;

    NSMapTable *_fetchObservers;

    unsigned long long _activeFetchEvents;

    NSArray *_elementCache;

    AXElementGroup *_rootGroupCache;

    AXElementGroup *_keyboardGroupCache;

    AXElement *_currentApp;

    AXVisualElementGrouper *_visualElementGrouper;

    AXElementGroupPruner *_elementGroupPruner;

    NSMutableDictionary *_postFetchFilters;

}



+ (id)_applicationForElement:(id)arg1;

+ (id)currentAppWithPositionHint:(struct CGPoint)arg1;

+ (id)springBoardElement;

+ (id)systemWideElement;

- (id)_axNotificationsForManagedEvents;

- (void)_debugLogElementCache;

- (id)_debugStringForFetchEvents:(unsigned long long)arg1;

- (id)_debugStringForPolicy:(long long)arg1;

- (double)_delayForFetchEvent:(unsigned long long)arg1;

- (_Bool)_fetchElements:(_Bool)arg1;

- (_Bool)_fetchEventCanBeManaged:(unsigned long long)arg1;

- (void)_fetchEventOccurred:(unsigned long long)arg1;

- (id)_fetchFirstElements;

- (_Bool)_fetchGroups:(_Bool)arg1;

- (id)_fetchVisibleElements;

- (id)_filterElements:(id)arg1 withFilter:(id)arg2;

- (id)_filterGroup:(id)arg1 withFilter:(id)arg2;

- (id)_findElementsMatchingBlock:(id)arg1 internalRequest:(void)arg2;

- (id)_findGroupableMatchingBlock:(id)arg1 inElementGroup:(void)arg2;

- (id)_findGroupableMatchingGroupable:(id)arg1 inElementGroup:(id)arg2;

- (id)_groupWithDictionary:(id)arg1;

- (id)_groupWithItems:(id)arg1 groupTraits:(int)arg2;

- (void)_notifyObserversDidFetchElementsForEvent:(unsigned long long)arg1 foundNewElements:(_Bool)arg2;

- (void)_notifyObserversDidScheduleFetchEvent:(unsigned long long)arg1;

- (void)_notifyObserversWillFetchElementsForEvent:(unsigned long long)arg1;

- (long long)_priorityForFetchEvent:(unsigned long long)arg1;

- (void)_scheduleFetchEvent:(unsigned long long)arg1;

- (void)_sendFakeScreenChangeIfNecessaryForGroup:(id)arg1 orElements:(id)arg2 appDidChange:(_Bool)arg3;

- (_Bool)_shouldConsiderCacheAsInvalid;

- (id)_siblingOfGroupable:(id)arg1 forDirection:(_Bool)arg2 didWrap:(_Bool *)arg3;

- (void)_tearDownEventCoalesceTimer;

- (_Bool)_updateCurrentApp;

@property(nonatomic) unsigned long long activeFetchEvents; // @synthesize activeFetchEvents=_activeFetchEvents;

- (void)addFetchEvents:(unsigned long long)arg1;

- (void)addPostFetchFilter:(id)arg1 withIdentifier:(void)arg2;

@property(readonly, nonatomic) NSArray *availableElements;

- (id)closestElementToElement:(id)arg1;

- (id)closestElementToPoint:(struct CGPoint)arg1;

@property(retain, nonatomic) AXElement *currentApp; // @synthesize currentApp=_currentApp;

- (void)dealloc;

@property(nonatomic) id <AXElementFetcherDelegate> delegate; // @synthesize delegate=_delegate;

- (id)description;

- (void)disableEventManagement;

@property(retain, nonatomic) NSArray *elementCache; // @synthesize elementCache=_elementCache;

@property(retain, nonatomic) AXElementGroupPruner *elementGroupPruner; // @synthesize elementGroupPruner=_elementGroupPruner;

- (void)enableEventManagement;

- (void)fetchEventOccurred:(unsigned long long)arg1;

@property(retain, nonatomic) NSMapTable *fetchObservers; // @synthesize fetchObservers=_fetchObservers;

@property(nonatomic) long long fetchPolicy; // @synthesize fetchPolicy=_fetchPolicy;

- (id)findElementMatchingBlock:(id)arg1;

- (id)findElementMatchingElement:(id)arg1;

- (id)findElementsMatchingBlock:(id)arg1;

- (id)findGroupableMatchingBlock:(id)arg1;

- (id)findGroupableMatchingGroupable:(id)arg1;

- (id)firstElement;

@property(readonly, nonatomic) AXElementGroup *firstKeyboardRow;

- (id)initWithDelegate:(id)arg1 fetchEvents:(unsigned long long)arg2 fetchPolicy:(long long)arg3 enableEventManagement:(_Bool)arg4 enableGrouping:(_Bool)arg5 beginEnabled:(_Bool)arg6;

@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;

@property(nonatomic, getter=isEventManagementEnabled) _Bool eventManagementEnabled; // @synthesize eventManagementEnabled=_eventManagementEnabled;

@property(nonatomic, getter=isFetchingElements) _Bool fetchingElements; // @synthesize fetchingElements=_fetchingElements;

@property(nonatomic, getter=isGroupingEnabled) _Bool groupingEnabled; // @synthesize groupingEnabled=_groupingEnabled;

@property(readonly, nonatomic) AXElementGroup *keyboardGroup;

@property(retain, nonatomic) AXElementGroup *keyboardGroupCache; // @synthesize keyboardGroupCache=_keyboardGroupCache;

- (id)lastElement;

@property(readonly, nonatomic) AXElementGroup *lastKeyboardRow;

- (id)nextSiblingOfElement:(id)arg1 didWrap:(_Bool *)arg2;

- (id)nextSiblingOfGroupable:(id)arg1 didWrap:(_Bool *)arg2;

@property(retain, nonatomic) NSMutableDictionary *postFetchFilters; // @synthesize postFetchFilters=_postFetchFilters;

- (id)previousSiblingOfElement:(id)arg1 didWrap:(_Bool *)arg2;

- (id)previousSiblingOfGroupable:(id)arg1 didWrap:(_Bool *)arg2;

- (void)refresh;

- (void)registerFetchObserver:(id)arg1 targetQueue:(id)arg2;

- (void)removeAllPostFetchFilters;

- (void)removeFetchEvents:(unsigned long long)arg1;

- (void)removePostFetchFilterWithIdentifier:(id)arg1;

@property(readonly, nonatomic) AXElementGroup *rootGroup;

@property(retain, nonatomic) AXElementGroup *rootGroupCache; // @synthesize rootGroupCache=_rootGroupCache;

@property(nonatomic) _Bool shouldUsePadInterfaceHeuristics; // @synthesize shouldUsePadInterfaceHeuristics=_shouldUsePadInterfaceHeuristics;

@property(retain, nonatomic) AXVisualElementGrouper *visualElementGrouper; // @synthesize visualElementGrouper=_visualElementGrouper;

- (void)unregisterAllFetchObservers;

- (void)unregisterFetchObserver:(id)arg1;

- (void)updateKeyboardGroup:(id)arg1;

@property(readonly, nonatomic) _Bool willFetchElements;



@end


