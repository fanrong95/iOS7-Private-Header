/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "NSFetchedResultsControllerDelegate.h"



@class BKSProcessAssertion, NSArray, NSFetchRequest, NSFetchedResultsController, NSManagedObjectContext, NSManagedObjectModel, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>, NSOperationQueue, NSPersistentStoreCoordinator, NSString;



@interface RadioModel : NSObject <NSFetchedResultsControllerDelegate>

{

    NSOperationQueue *_backgroundCleanupQueue;

    BKSProcessAssertion *_backgroundProcessAssertion;

    NSObject<OS_dispatch_queue> *_backgroundTaskAccessQueue;

    long long _backgroundTaskCount;

    NSObject<OS_dispatch_source> *_backgroundTaskInvalidateTimerSource;

    NSManagedObjectContext *_context;

    _Bool _isBackgroundModel;

    NSManagedObjectModel *_model;

    int _modelChangedToken;

    _Bool _modelChangedTokenIsValid;

    int _modelDeletedToken;

    _Bool _modelDeletedTokenIsValid;

    NSFetchedResultsController *_stationFetchedResultsController;

    NSFetchRequest *_stationFetchRequest;

    NSPersistentStoreCoordinator *_storeCoordinator;

    NSFetchedResultsController *_trackHistoriesFetchedResultsController;

    NSFetchRequest *_trackHistoriesFetchRequest;

    long long _transactionCount;

    NSFetchedResultsController *_wishlistedTracksFetchedResultsController;

    NSFetchRequest *_wishlistedTracksFetchRequest;

}



+ (id)_radioDatabasePath;

+ (id)_radioDirectoryPath;

+ (id)backgroundModel;

+ (void)deleteAllData;

+ (void)initialize;

+ (unsigned int)maxStationArtworkSize;

+ (id)sharedModel;

- (void).cxx_destruct;

- (void)_addTimestamp:(double)arg1 toManagedSkipHistory:(id)arg2 withSkipIntervalForCulling:(double)arg3;

- (id)_arrayByReplacingManagedObjectsInArray:(id)arg1;

- (void)_beginBackgroundTaskAssertion;

- (void)_contextDidSaveNotification:(id)arg1;

- (void)_createRadioDirectoryAndDatabaseIfNecessary;

- (void)_cullTrackHistoryIfNecessary;

- (id)_databasePropertyValueForKey:(id)arg1;

- (void)_defaultRadioModelInitialization;

- (void)_endBackgroundTaskAssertion;

- (id)_init;

- (id)_initBackgroundModelWithPersistentStoreCoordinator:(id)arg1;

- (void)_insertRevisionWithStationID:(long long)arg1 revisionType:(long long)arg2;

- (void)_internalAuthenticatedAccountIdentifierDidChangeNotification:(id)arg1;

- (id)_managedSkipHistoryWithSkipIdentifier:(id)arg1;

- (id)_managedSkipHistoryWithStationHash:(id)arg1;

- (id)_managedSkipHistoryWithStationID:(long long)arg1;

- (id)_newManagedSkipHistoryWithSkipIdentifier:(id)arg1;

- (id)_newManagedSkipHistoryWithStationHash:(id)arg1;

- (id)_newManagedSkipHistoryWithStationID:(long long)arg1;

- (unsigned long long)_numberOfSkipsUsedWithSkipTimestamps:(id)arg1 currentTimestamp:(double)arg2 skipInterval:(double)arg3;

- (void)_performTransactionAndSave:(_Bool)arg1 withBlock:(id)arg2;

- (void)_postContextDidChangeNotification:(id)arg1;

- (void)_prepareModel;

- (void)_resetModel;

- (id)_setByReplacingManagedObjectsInSet:(id)arg1;

- (void)_setDatabasePropertyValue:(id)arg1 forKey:(id)arg2;

- (id)audioClipWithStoreID:(long long)arg1;

@property(nonatomic) unsigned long long authenticatedAccountIdentifier;

- (_Bool)canSkipTracksForStation:(id)arg1;

- (id)context;

- (void)controller:(id)arg1 didChangeObject:(id)arg2 atIndexPath:(id)arg3 forChangeType:(unsigned long long)arg4 newIndexPath:(id)arg5;

- (void)controllerDidChangeContent:(id)arg1;

- (id)convertObject:(id)arg1;

- (id)convertObjects:(id)arg1;

- (id)convertObjectsInSet:(id)arg1;

- (void)copySkipHistoryFromStationHash:(id)arg1 toStationID:(long long)arg2;

- (long long)databaseVersion;

- (void)dealloc;

- (void)deleteAllData;

- (void)deleteAllTrackHistory;

- (void)deleteAllWishlistedTracks;

- (void)deletePreviewStation:(id)arg1;

- (void)deleteStation:(id)arg1;

- (void)deleteStationWithID:(long long)arg1;

- (void)deleteTrackFromWishlist:(id)arg1;

- (void)deleteTrackHistoryItem:(id)arg1;

- (void)deleteUnreferencedTracks;

- (void)enumerateRevisionsSinceRevisionID:(long long)arg1 usingBlock:(id)arg2;

@property(readonly, nonatomic) NSArray *featuredStations;

@property(copy, nonatomic) NSString *globalHash;

@property(nonatomic) unsigned long long globalVersion;

- (id)init;

- (void)insertHistoryForTrack:(id)arg1 station:(id)arg2 date:(id)arg3;

- (void)insertHistoryForTrack:(id)arg1 stationID:(long long)arg2 stationHash:(id)arg3 stationName:(id)arg4 date:(id)arg5;

- (void)insertHistoryForTrackStoreID:(long long)arg1 stationID:(long long)arg2 stationHash:(id)arg3 stationName:(id)arg4 date:(id)arg5;

- (void)markTracksNeedRefreshForStation:(id)arg1;

- (id)newAudioClipWithDictionary:(id)arg1;

- (id)newFeaturedStationWithDictionary:(id)arg1;

- (id)newHistoryForTrack:(id)arg1 station:(id)arg2 date:(id)arg3;

- (id)newPreviewStationWithDictionary:(id)arg1;

- (id)newStationWithDictionary:(id)arg1;

- (id)newTrackWithDictionary:(id)arg1;

- (void)noteTrackWasSkippedForStation:(id)arg1;

- (unsigned long long)numberOfTracksSkippedForStation:(id)arg1;

- (void)performTransactionWithBlock:(id)arg1;

- (void)performWriteTransactionWithBlock:(id)arg1;

@property(readonly, nonatomic) NSArray *previewStations;

- (void)removeAllTracksForPlaybackFromStation:(id)arg1;

- (void)removeTrackForPlayback:(id)arg1 fromStation:(id)arg2;

- (void)removeTracksForPlaybackFromAllStations;

@property(readonly, nonatomic) NSArray *reportProblemIssueTypes;

- (void)setCurrentPlayingTrack:(id)arg1 withTime:(double)arg2 forStation:(id)arg3;

- (void)setDatabaseVersion:(long long)arg1;

- (void)setReportProblemIssueTypes:(id)arg1;

@property(copy, nonatomic) NSArray *stationSortOrdering;

- (id)stationWithHash:(id)arg1;

- (id)stationWithID:(long long)arg1;

- (id)stationWithPersistentID:(long long)arg1;

@property(readonly, nonatomic) NSArray *stations;

@property(readonly, nonatomic) NSArray *trackHistories;

@property(readonly, nonatomic) NSArray *trackHistorySections;

- (id)trackWithStoreID:(long long)arg1;

@property(readonly, nonatomic) NSArray *wishlistedTracks;



@end


