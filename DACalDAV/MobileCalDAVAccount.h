/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "DAAccount.h"



@class CalDAVPrincipalSearchPropertySet, CalDAVRefreshContext, CalDAVServerVersion, CoreDAVDiscoveryTaskGroup, DACoreDAVLogger, DACoreDAVTaskManager, MobileCalDAVAccountRefreshActor, MobileCalDAVPrincipal, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSSet, NSString, NSTimeZone, NSURL;



@interface MobileCalDAVAccount : DAAccount

{

    NSMutableDictionary *_principals;

    MobileCalDAVPrincipal *_mainPrincipal;

    int _preferredEventDaysToSync;

    int _preferredToDoDaysToSync;

    NSMutableSet *_calendars;

    _Bool _subscribedCalendarsChanged;

    NSString *_collectionSetName;

    CalDAVPrincipalSearchPropertySet *_searchPropertySet;

    CoreDAVDiscoveryTaskGroup *_checkValidityTaskGroup;

    MobileCalDAVAccountRefreshActor *_actor;

    _Bool _isRefreshing;

    _Bool _isSpinning;

    _Bool _needsAccountPropertyRefresh;

    CalDAVRefreshContext *_refreshContext;

    NSMutableSet *_searchTaskSet;

    DACoreDAVLogger *_curLogger;

    CalDAVServerVersion *_serverVersion;

    NSMutableDictionary *_itemIDsToMoveActions;

    NSMutableSet *_movedItemURLStrings;

    int _wasMigrated;

    _Bool _searchQueriesShouldCancel;

    int _calDAVAccountVersion;

}



- (id)_calendarConstraintsPath;

- (id)_calendarConstraintsResource;

- (void)_clearOrphanedCalendarItemChangesOfType:(int)arg1 withContext:(id)arg2 goodCalendarIds:(id)arg3;

- (void)_clearOrphanedChangesWithChangesCall:(void *)arg1 clearChanges:(void *)arg2 withContext:(id)arg3;

- (void)_clearOrphanedChangesWithContext:(id)arg1;

- (id)_collectActionsFromMoveDictionary:(struct __CFDictionary *)arg1 forDataclass:(id)arg2 outShouldSave:(_Bool *)arg3;

- (void)_collectMoveActions;

- (id)_powerAssertionContext;

- (id)_powerAssertionGroupIdentifier;

- (_Bool)_saveModifiedPrincipalsOnBackingAccount;

- (_Bool)_saveModifiedSubscribedCalendarsOnBackingAccount;

- (void)_setSpinning:(_Bool)arg1;

- (void)_updateCalendarStore:(_Bool)arg1;

- (_Bool)_updateCalendarStoreNoDBOpen:(_Bool)arg1;

- (_Bool)_updateCalendarStoreProperties:(void *)arg1;

- (_Bool)accountHasSignificantPropertyChangesFromOldAccountInfo:(id)arg1;

- (void)addCalendar:(id)arg1;

- (void)addPrincipal:(id)arg1;

@property int calDAVAccountVersion; // @synthesize calDAVAccountVersion=_calDAVAccountVersion;

@property(copy, nonatomic) NSString *calendarHomeSyncToken;

@property(readonly) NSSet *calendars;

- (void)cancelAllSearchQueries;

- (void)cancelRefreshWithCompletion:(id)arg1;

- (void)cancelSearchQuery:(id)arg1;

@property(retain) NSURL *collectionSetURL;

- (void *)copyCalStore;

- (void)coreDAVLogDiagnosticMessage:(id)arg1 atLevel:(long long)arg2;

- (long long)coreDAVLogLevel;

- (void)coreDAVLogTransmittedDataPartial:(id)arg1;

- (long long)coreDAVOutputLevel;

- (void)coreDAVTransmittedDataFinished;

- (void)dealloc;

- (void)discoverInitialPropertiesWithConsumer:(id)arg1;

- (void)discoveryTask:(id)arg1 gotAccountInfo:(id)arg2 error:(id)arg3;

- (void)dropPowerAssertions;

- (void)ingestBackingAccountInfoProperties;

- (id)init;

- (id)initWithBackingAccountInfo:(id)arg1;

- (_Bool)isCalDAVAccount;

- (_Bool)isEqualToAccount:(id)arg1;

@property _Bool isRefreshing; // @synthesize isRefreshing=_isRefreshing;

@property _Bool isWritable;

@property(readonly) NSMutableDictionary *itemIDsToMoveActions; // @synthesize itemIDsToMoveActions=_itemIDsToMoveActions;

- (id)localizedIdenticalAccountFailureMessage;

- (id)localizedInvalidPasswordMessage;

@property(retain) MobileCalDAVPrincipal *mainPrincipal; // @synthesize mainPrincipal=_mainPrincipal;

@property(readonly) NSSet *movedItemURLStrings; // @synthesize movedItemURLStrings=_movedItemURLStrings;

@property _Bool needsAccountPropertyRefresh; // @synthesize needsAccountPropertyRefresh=_needsAccountPropertyRefresh;

- (void)noteHomeSetOnDifferentHost:(id)arg1;

@property(readonly) NSDate *ocurrenceCacheEndDate;

@property(readonly) NSDate *ocurrenceCacheStartDate;

- (id)onBehalfOfBundleIdentifier;

@property int overriddenPort;

@property(retain) NSString *overriddenScheme;

@property(retain) NSString *overriddenServer;

- (void)performSearchQuery:(id)arg1;

@property int preferredEventDaysToSync; // @synthesize preferredEventDaysToSync=_preferredEventDaysToSync;

@property int preferredToDoDaysToSync; // @synthesize preferredToDoDaysToSync=_preferredToDoDaysToSync;

- (id)principalPath;

@property(readonly) NSDictionary *principals; // @synthesize principals=_principals;

- (void)reattainPowerAssertions;

- (void)refreshActor:(id)arg1 didCompleteWithError:(id)arg2;

@property(retain) CalDAVRefreshContext *refreshContext; // @synthesize refreshContext=_refreshContext;

- (void)refreshWithContext:(id)arg1;

- (void)releasePowerAssertion;

- (void)reloadCalendars;

- (void)removeCalendar:(id)arg1;

- (void)removeCalendarWithURL:(id)arg1;

- (void)removePrincipal:(id)arg1;

- (void)retainPowerAssertion;

- (_Bool)saveModifiedPropertiesOnBackingAccount;

@property(retain) id searchPropertySet;

- (_Bool)searchQueriesRunning;

@property _Bool searchQueriesShouldCancel; // @synthesize searchQueriesShouldCancel=_searchQueriesShouldCancel;

- (id)serverBaseURL;

@property CalDAVServerVersion *serverVersion;

- (void)setAccountDescription:(id)arg1;

- (void)setPrincipalPath:(id)arg1;

- (void)setPrincipalURL:(id)arg1;

@property(retain, nonatomic) NSDictionary *subscribedCalendars;

@property _Bool wasMigrated;

@property(readonly) _Bool shouldFilterEventSyncTimeRange;

@property(readonly) _Bool shouldFilterSyncTimeRangeForInbox;

@property(readonly) _Bool shouldFilterTodoSyncTimeRange;

- (_Bool)shouldLogTransmittedData;

@property(readonly) _Bool shouldUseCalendarHomeSyncReport;

- (id)spinnerIdentifiers;

@property(readonly) _Bool supportsEvents;

@property(readonly) _Bool supportsReminders;

- (void)task:(id)arg1 didFinishWithError:(id)arg2;

@property(readonly, nonatomic) DACoreDAVTaskManager *taskManager;

- (_Bool)upgradeAccount;

@property(readonly) NSTimeZone *viewedTimeZone;

- (id)wellKnownPaths;



@end


