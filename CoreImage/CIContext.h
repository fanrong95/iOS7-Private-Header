/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@interface CIContext : NSObject

{

    struct CIContextInternal *_priv;

}



+ (int)_crashed_because_nonaddressable_memory_was_passed_to_render:(id)arg1 toBitmap:(void *)arg2 rowBytes:(long long)arg3 bounds:(struct CGRect)arg4 format:(int)arg5 colorSpace:(struct CGColorSpace *)arg6;

+ (id)_singletonContext;

+ (_Bool)applicationIsInForegroundState;

+ (id)clContextOptions:(id)arg1;

+ (id)context;

+ (id)contextWithEAGLContext:(id)arg1;

+ (id)contextWithEAGLContext:(id)arg1 options:(id)arg2;

+ (id)contextWithOptions:(id)arg1;

+ (id)glesContextOptions:(id)arg1;

+ (struct Context *)glesInternalContextWithEAGLContext:(id)arg1 options:(id)arg2;

+ (struct Context *)glesInternalContextWithOptions:(id)arg1;

- (struct CGColorSpace *)_colorspace;

- (void)_gpuContextCheck;

- (id)_initWithInternalRepresentation:(void *)arg1;

- (void)_insertEventMarker:(const char *)arg1;

- (_Bool)_isEAGLBackedContext;

- (struct CGImage *)createCGImage:(id)arg1 fromRect:(struct CGRect)arg2;

- (struct CGImage *)createCGImage:(id)arg1 fromRect:(struct CGRect)arg2 format:(int)arg3;

- (struct CGImage *)createCGImage:(id)arg1 fromRect:(struct CGRect)arg2 format:(int)arg3 colorSpace:(struct CGColorSpace *)arg4;

- (void)dealloc;

- (void)drawImage:(id)arg1 atPoint:(struct CGPoint)arg2 fromRect:(struct CGRect)arg3;

- (void)drawImage:(id)arg1 inRect:(struct CGRect)arg2 fromRect:(struct CGRect)arg3;

- (id)init;

- (id)initWithEAGLContext:(id)arg1;

- (id)initWithEAGLContext:(id)arg1 options:(id)arg2;

- (struct CGSize)inputImageMaximumSize;

- (void)lock;

- (unsigned long long)maximumInputImageSize;

- (unsigned long long)maximumOutputImageSize;

- (struct CGSize)outputImageMaximumSize;

- (void)render:(id)arg1 toBitmap:(void *)arg2 rowBytes:(long long)arg3 bounds:(struct CGRect)arg4 format:(int)arg5 colorSpace:(struct CGColorSpace *)arg6;

- (void)render:(id)arg1 toCVPixelBuffer:(struct __CVBuffer *)arg2;

- (void)render:(id)arg1 toCVPixelBuffer:(struct __CVBuffer *)arg2 bounds:(struct CGRect)arg3 colorSpace:(struct CGColorSpace *)arg4;

- (void)unlock;



@end


