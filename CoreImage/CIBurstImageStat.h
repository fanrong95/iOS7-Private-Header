/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSMutableArray, NSString;



__attribute__((visibility("hidden")))

@interface CIBurstImageStat : NSObject

{

    NSString *imageId;

    float normalizedFocusScore;

    float normalizedSigma;

    int orientation;

    NSMutableArray *faceStatArray;

    _Bool exclude;

    _Bool AEStable;

    int AEAverage;

    int AETarget;

    _Bool AFStable;

    int temporalOrder;

    float imageScore;

    float actionScore;

    float avgHorzDiffY;

    float blurExtent;

    float colorHistogram[1024];

    int numEntries;

    unsigned short aeMatrix[256];

    int dissimilarity;

    double timeReceived;

    double timestamp;

    void *projectionMemoryBlock;

    struct FastRegistration_Signatures projectionSignature;

    struct SharpnessGridElement_t *sharpnessGrid;

    int gridWidth;

    int gridHeight;

    struct GridROI_t gridROI;

    struct GridROI_t smoothedROI;

    _Bool hasRegistrationData;

    float maxSkewness;

    float registrationErrorX;

    float registrationErrorY;

    float registrationErrorIntegral;

    float actionClusteringScore;

    float tx;

    float ty;

    struct CGRect facesRoiRect;

    int numHWFaces;

    _Bool doLimitedSharpnessAndBlur;

    _Bool emotionallyRejected;

    _Bool isGarbage;

    float roiSize;

}



@property int AEAverage; // @synthesize AEAverage;

@property _Bool AEStable; // @synthesize AEStable;

@property int AETarget; // @synthesize AETarget;

@property _Bool AFStable; // @synthesize AFStable;

@property float actionClusteringScore; // @synthesize actionClusteringScore;

@property float actionScore; // @synthesize actionScore;

- (unsigned short *)aeMatrix;

- (void)allocateMeanStdPingPongBuffers:(float **)arg1:(float **)arg2:(float **)arg3:(float **)arg4;

- (void)assignMeanStdBuffers:(float *)arg1;

@property float avgHorzDiffY; // @synthesize avgHorzDiffY;

@property float blurExtent; // @synthesize blurExtent;

- (int)canRegister;

- (void)collapseSharpnessGrid;

- (float *)colorHistogram;

- (long long)compareImageOrder:(id)arg1;

- (long long)compareImageStats:(id)arg1;

- (void)computeAEMatrix:(id)arg1;

- (float)computeAEMatrixDifference:(id)arg1;

- (void)computeBlurStatsOnGrid:(id)arg1;

- (float)computeFacialFocusScoreSum;

- (void)computeImageColorHistogram:(id)arg1;

- (void)computeImageData:(id)arg1 faceIDCounts:(id)arg2;

- (float)computeImageDistance:(id)arg1;

- (void)computeImageProjections:(id)arg1;

- (void)computeImageSharpnessOnGrid:(id)arg1;

- (float)computeRuleOfThreeDistance;

- (float)computeScore:(float)arg1;

- (float)computeSmilePercentage;

- (float)computeSmoothedGridROI:(id)arg1 nextStat:(id)arg2;

- (void)dealloc;

@property _Bool doLimitedSharpnessAndBlur; // @synthesize doLimitedSharpnessAndBlur;

@property _Bool emotionallyRejected; // @synthesize emotionallyRejected;

@property _Bool exclude; // @synthesize exclude;

@property NSMutableArray *faceStatArray; // @synthesize faceStatArray;

@property struct CGRect facesRoiRect; // @synthesize facesRoiRect;

- (void)flagAsGarbage;

- (struct GridROI_t)getSharpnessAndBlurLimits;

@property _Bool hasRegistrationData; // @synthesize hasRegistrationData;

@property NSString *imageId; // @synthesize imageId;

@property float imageScore; // @synthesize imageScore;

- (id)initWithIdentifier:(id)arg1;

@property _Bool isGarbage; // @synthesize isGarbage;

@property float maxSkewness; // @synthesize maxSkewness;

@property int numHWFaces; // @synthesize numHWFaces;

@property int orientation; // @synthesize orientation;

- (void)performRegistration:(id)arg1 deltaCol:(float *)arg2 deltaRow:(float *)arg3;

@property float registrationErrorIntegral; // @synthesize registrationErrorIntegral;

@property float registrationErrorX; // @synthesize registrationErrorX;

@property float registrationErrorY; // @synthesize registrationErrorY;

@property float roiSize; // @synthesize roiSize;

- (int)setAEMatrix:(id)arg1;

@property int temporalOrder; // @synthesize temporalOrder;

@property double timeReceived; // @synthesize timeReceived;

@property double timestamp; // @synthesize timestamp;

@property float tx; // @synthesize tx;

@property float ty; // @synthesize ty;

- (void)updateROI:(struct GridROI_t)arg1;

- (void)writeGridROI:(id)arg1;



@end


