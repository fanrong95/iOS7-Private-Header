/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSDictionary, NSMutableDictionary, NSObject<OS_dispatch_queue>;



@interface MCRestrictionManager : NSObject

{

    NSMutableDictionary *_memberQueueRestrictions;

    NSMutableDictionary *_memberQueueClientRestrictions;

    NSMutableDictionary *_memberQueueUserSettings;

    NSMutableDictionary *_memberQueueEffectiveUserSettings;

    NSObject<OS_dispatch_queue> *_memberQueue;

    NSMutableDictionary *_memberQueueProfileRestrictions;

}



+ (int)appWhitelistStateWithSettingsDictionary:(id)arg1;

+ (_Bool)boolSetting:(id)arg1 valueChangedBetweenOldSettings:(id)arg2 andNewSettings:(id)arg3;

+ (int)boolSettingForFeature:(id)arg1 withUserSettingDictionary:(id)arg2;

+ (int)defaultBoolValueForSetting:(id)arg1;

+ (id)defaultIntersectedValuesForSetting:(id)arg1;

+ (id)defaultParametersForBoolSetting:(id)arg1;

+ (id)defaultParametersForIntersectedValuesSetting:(id)arg1;

+ (id)defaultParametersForUnionValuesSetting:(id)arg1;

+ (id)defaultParametersForValueSetting:(id)arg1;

+ (id)defaultRestrictionFilePath;

+ (id)defaultSettings;

+ (id)defaultUnionValuesForSetting:(id)arg1;

+ (id)defaultValueForSetting:(id)arg1;

+ (id)filterRestrictionDictionaryForPublicUse:(id)arg1;

+ (id)filterUserSettingsForPublicUse:(id)arg1;

+ (_Bool)intersectedValuesForFeature:(id)arg1 changedBetweenOldRestrictions:(id)arg2 andNewRestrictions:(id)arg3;

+ (id)intersectedValuesForFeature:(id)arg1 withRestrictionsDictionary:(id)arg2;

+ (_Bool)intersectedValuesSetting:(id)arg1 valueChangedBetweenOldSettings:(id)arg2 andNewSettings:(id)arg3;

+ (id)intersectedValuesSettingForFeature:(id)arg1 withUserSettingDectionary:(id)arg2;

+ (_Bool)isInSingleAppModeWithSettingsDictionary:(id)arg1;

+ (_Bool)isPasscodeRequiredToAccessWhitelistedAppsWithSettingsDictionary:(id)arg1;

+ (_Bool)isWebContentFilterUIActiveWithRestrictionDictionary:(id)arg1;

+ (_Bool)mayEnterPasscodeToAccessNonWhitelistedAppsWithSettingsDictionary:(id)arg1;

+ (id)newEffectiveSettingsByApplyingRestrictions:(id)arg1 toSettings:(id)arg2;

+ (id)objectForFeature:(id)arg1 withRestrictionsDictionary:(id)arg2;

+ (_Bool)restrictedBool:(id)arg1 changedBetweenOldRestrictions:(id)arg2 andNewRestrictions:(id)arg3;

+ (int)restrictedBoolForFeature:(id)arg1 withRestrictionsDictionary:(id)arg2;

+ (_Bool)restrictedValue:(id)arg1 changedBetweenOldRestrictions:(id)arg2 andNewRestrictions:(id)arg3;

+ (id)restrictionsAfterApplyingRestrictionsDictionary:(id)arg1 toRestrictionsDictionary:(id)arg2 outChangeDetected:(_Bool *)arg3 outError:(id *)arg4;

+ (id)restrictionsWithCurrentRestrictions:(id)arg1 defaultRestrictions:(id)arg2 profileRestrictions:(id)arg3 clientRestrictions:(id)arg4 outRestrictionsChanged:(_Bool *)arg5 outError:(id *)arg6;

+ (id)sharedManager;

+ (_Bool)unionValuesForFeature:(id)arg1 changedBetweenOldRestrictions:(id)arg2 andNewRestrictions:(id)arg3;

+ (id)unionValuesForFeature:(id)arg1 withRestrictionsDictionary:(id)arg2;

+ (_Bool)unionValuesSetting:(id)arg1 valueChangedBetweenOldSettings:(id)arg2 andNewSettings:(id)arg3;

+ (id)unionValuesSettingForFeature:(id)arg1 withUserSettingDictionary:(id)arg2;

+ (id)valueForFeature:(id)arg1 withRestrictionsDictionary:(id)arg2;

+ (_Bool)valueSetting:(id)arg1 valueChangedBetweenOldSettings:(id)arg2 andNewSettings:(id)arg3;

+ (id)valueSettingForFeature:(id)arg1 withUserSettingDictionary:(id)arg2;

- (void).cxx_destruct;

- (id)allClientUUIDsForClientType:(id)arg1;

- (int)appWhitelistState;

- (id)clientRestrictions;

- (id)clientRestrictionsForClientUUID:(id)arg1;

@property(readonly, nonatomic) NSDictionary *combinedProfileRestrictions;

@property(readonly, nonatomic) NSDictionary *currentRestrictions;

@property(readonly, nonatomic) NSDictionary *defaultRestrictions;

@property(readonly, nonatomic) NSDictionary *defaultSettings;

- (id)description;

- (id)effectiveIntersectedValuesForSetting:(id)arg1;

- (id)effectiveParametersForBoolSetting:(id)arg1;

- (id)effectiveParametersForIntersectedSetting:(id)arg1;

- (id)effectiveParametersForUnionSetting:(id)arg1;

- (id)effectiveParametersForValueSetting:(id)arg1;

- (int)effectiveRestrictedBoolForSetting:(id)arg1;

- (id)effectiveUnionValuesForSetting:(id)arg1;

@property(readonly, nonatomic) NSDictionary *effectiveUserSettings;

- (id)effectiveValueForSetting:(id)arg1;

- (id)init;

- (id)intersectedValuesForFeature:(id)arg1;

- (void)invalidateRestrictions;

- (void)invalidateSettings;

- (_Bool)isBoolSettingLockedDownByRestrictions:(id)arg1;

- (_Bool)isValueSettingLockedDownByRestrictions:(id)arg1;

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *memberQueue; // @synthesize memberQueue=_memberQueue;

@property(retain, nonatomic) NSMutableDictionary *memberQueueClientRestrictions; // @synthesize memberQueueClientRestrictions=_memberQueueClientRestrictions;

- (id)memberQueueClientRestrictionsForClientUUID:(id)arg1;

- (id)memberQueueClientTypeForClientUUID:(id)arg1;

@property(readonly, nonatomic) NSMutableDictionary *memberQueueCombinedProfileRestrictions;

- (void)memberQueueCommitUserSettingsToDisk;

@property(retain, nonatomic) NSMutableDictionary *memberQueueEffectiveUserSettings; // @synthesize memberQueueEffectiveUserSettings=_memberQueueEffectiveUserSettings;

@property(retain, nonatomic) NSMutableDictionary *memberQueueProfileRestrictions; // @synthesize memberQueueProfileRestrictions=_memberQueueProfileRestrictions;

@property(retain, nonatomic) NSMutableDictionary *memberQueueRestrictions; // @synthesize memberQueueRestrictions=_memberQueueRestrictions;

- (id)memberQueueUserInfoForClientUUID:(id)arg1;

@property(retain, nonatomic) NSMutableDictionary *memberQueueUserSettings; // @synthesize memberQueueUserSettings=_memberQueueUserSettings;

- (id)objectForFeature:(id)arg1;

- (id)potentialRestrictionsAfterApplyingRestrictionsDictionary:(id)arg1 outChangeDetected:(_Bool *)arg2 outError:(id *)arg3;

@property(readonly, nonatomic) NSDictionary *profileRestrictions;

- (int)restrictedBoolForFeature:(id)arg1;

- (id)unionValuesForFeature:(id)arg1;

- (id)userInfoForClientUUID:(id)arg1;

@property(readonly, nonatomic) NSDictionary *userSettings;

- (id)valueForFeature:(id)arg1;



@end


