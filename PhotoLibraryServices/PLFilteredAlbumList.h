/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "PLAlbumContainer.h"

#import "PLDerivedAlbumListOrigin.h"

#import "PLIndexMapperDataSource.h"

#import "PLIndexMappingCache.h"



@class NSIndexSet, NSMutableIndexSet, NSMutableOrderedSet, NSObject<PLIndexMappingCache>, NSPredicate, NSString, PLIndexMapper, PLManagedAlbumList, PLPhotoLibrary;



@interface PLFilteredAlbumList : NSObject <PLAlbumContainer, PLIndexMapperDataSource, PLIndexMappingCache, PLDerivedAlbumListOrigin>

{

    PLIndexMapper *_indexMapper;

    NSMutableIndexSet *_filteredIndexes;

    NSMutableOrderedSet *_weak_albums;

    NSObject<PLIndexMappingCache> *_derivedAlbumLists[5];

    int filter;

    PLManagedAlbumList *backingAlbumList;

    NSPredicate *predicate;

}



+ (id)filteredAlbumList:(id)arg1 filter:(int)arg2;

@property(retain, nonatomic) NSMutableOrderedSet *_albums;

- (void)_backingContextDidChange:(id)arg1;

- (void)_invalidateFilteredIndexes;

@property(readonly, nonatomic) NSString *_prettyDescription;

@property(readonly, nonatomic) NSString *_typeDescription;

- (_Bool)albumHasFixedOrder:(struct NSObject *)arg1;

@property(readonly, nonatomic) int albumListType;

@property(readonly, nonatomic) NSMutableOrderedSet *albums;

@property(readonly, nonatomic) unsigned long long albumsCount;

@property(readonly, nonatomic) id albumsSortingComparator;

@property(retain, nonatomic) PLManagedAlbumList *backingAlbumList; // @synthesize backingAlbumList;

@property(readonly, nonatomic) id <NSObject><NSCopying> cachedIndexMapState;

@property(readonly, nonatomic) _Bool canEditAlbums;

- (_Bool)canEditContainers;

- (id)containers;

@property(readonly, nonatomic) unsigned long long containersCount;

- (id)containersRelationshipName;

- (unsigned long long)countOfFilteredAlbums;

- (void)dealloc;

- (Class)derivedChangeNotificationClass;

- (id)description;

- (void)enumerateDerivedAlbumLists:(id)arg1;

@property(nonatomic) int filter; // @synthesize filter;

- (id)filteredAlbumsAtIndexes:(id)arg1;

@property(readonly, nonatomic) NSIndexSet *filteredIndexes;

- (void)getFilteredAlbums:(id *)arg1 range:(struct _NSRange)arg2;

- (_Bool)hasAtLeastOneAlbum;

- (id)identifier;

- (unsigned long long)indexInFilteredAlbumsOfObject:(id)arg1;

@property(readonly, nonatomic) PLIndexMapper *indexMapper;

- (id)initWithBackingAlbumList:(id)arg1 filter:(int)arg2;

- (void)insertFilteredAlbums:(id)arg1 atIndexes:(id)arg2;

- (void)insertObject:(id)arg1 inFilteredAlbumsAtIndex:(unsigned long long)arg2;

- (_Bool)isEmpty;

- (id)managedObjectContext;

- (_Bool)mappedDataSourceChanged:(id)arg1 remoteNotificationData:(id)arg2;

- (_Bool)needsReordering;

- (id)objectInFilteredAlbumsAtIndex:(unsigned long long)arg1;

@property(readonly, nonatomic) PLPhotoLibrary *photoLibrary;

@property(retain, nonatomic) NSPredicate *predicate; // @synthesize predicate;

- (void)registerDerivedAlbumList:(struct NSObject *)arg1;

- (void)removeFilteredAlbumsAtIndexes:(id)arg1;

- (void)removeObjectFromFilteredAlbumsAtIndex:(unsigned long long)arg1;

- (void)replaceFilteredAlbumsAtIndexes:(id)arg1 withFilteredValues:(id)arg2;

- (void)replaceObjectInFilteredAlbumsAtIndex:(unsigned long long)arg1 withObject:(id)arg2;

- (void)setNeedsReordering;

- (_Bool)shouldIncludeObjectAtIndex:(unsigned long long)arg1;

@property(readonly, nonatomic) unsigned long long unreadAlbumsCount;

- (void)unregisterAllDerivedAlbums;

- (void)updateAlbumsOrderIfNeeded;



@end


