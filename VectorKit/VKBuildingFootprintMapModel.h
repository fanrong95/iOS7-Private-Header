/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "VKVectorMapModel.h"


#import "VKMapLayer.h"

#import "VKMercatorTerrainHeightProvider.h"



@class VGLRenderState, VKAnimation, VKMercatorTerrainHeightCache, VKSkyModel;



__attribute__((visibility("hidden")))

@interface VKBuildingFootprintMapModel : VKVectorMapModel <VKMercatorTerrainHeightProvider, VKMapLayer>

{

    struct _VGLColor _topColor;

    struct _VGLColor _facadeColor;

    struct _VGLColor _landmarkColor;

    struct _VGLColor _flatColor;

    struct _VGLColor _pointyFacadeColor;

    struct _VGLColor _pointyTopColor;

    float _brightness;

    long long _vectorType;

    int _buildingMode;

    VKAnimation *_styleChangeAnimation;

    VKAnimation *_fadeBuildingAnimation;

    float _buildingOccluderAlpha;

    _Bool _fadeTiles;

    VKSkyModel *_skyModel;

    struct _VGLColor _footprintStrokeColor;

    float _footprintStrokeWidth;

    struct _VGLColor _3DStrokeColor;

    float _3DStrokeWidth;

    double _nearDistance;

    double _farDistance;

    struct unordered_map<VKVectorTile *, OccluderGroupList, std::__1::hash<VKVectorTile *>, std::__1::equal_to<VKVectorTile *>, vk_allocator<std::__1::pair<VKVectorTile *const, OccluderGroupList>>> _currentOccluders;

    struct unordered_map<VKVectorTile *, OccluderGroupList, std::__1::hash<VKVectorTile *>, std::__1::equal_to<VKVectorTile *>, vk_allocator<std::__1::pair<VKVectorTile *const, OccluderGroupList>>> _previousOccluders;

    VGLRenderState *_renderState;

    float _minLayeringHeight;

    float _maxLayeringHeight;

    _Bool _shouldDraw3DBuildingsInVectorBuildingsRenderPass;

    _Bool _shouldDraw3DBuildingsIn3DBuildingsRenderPass;

    _Bool _initializedStyles;

    VKMercatorTerrainHeightCache *_heightCache;

}



- (id).cxx_construct;

- (void).cxx_destruct;

- (void)_clearOccluders;

- (id)_globalBuildingDrawStyle;

- (id)_globalPointyBuildingDrawStyle;

- (void)_updateStyles;

@property(nonatomic) int buildingMode; // @synthesize buildingMode=_buildingMode;

- (void)dealloc;

- (void)draw2DBuildingsInScene:(id)arg1 withContext:(id)arg2;

- (void)draw3DBuildingShadowsInScene:(id)arg1 withContext:(id)arg2;

- (void)draw3DBuildingStrokesInScene:(id)arg1 withContext:(id)arg2;

- (void)draw3DBuildingsInScene:(id)arg1 withContext:(id)arg2 passes:(unsigned int)arg3;

- (void)drawDebugScene:(id)arg1 withContext:(id)arg2;

- (void)drawFootprintsInScene:(id)arg1 withContext:(id)arg2;

- (void)drawScene:(id)arg1 withContext:(id)arg2 pass:(unsigned int)arg3;

@property(nonatomic) _Bool fadeTiles; // @synthesize fadeTiles=_fadeTiles;

- (double)heightAtPoint:(struct VKPoint)arg1;

@property(readonly, nonatomic) VKMercatorTerrainHeightCache *heightCache; // @synthesize heightCache=_heightCache;

- (id)init;

- (void)layoutScene:(id)arg1 withContext:(id)arg2;

- (unsigned long long)mapLayerPosition;

- (double)maxTileHeightAtPoint:(struct VKPoint)arg1;

- (void)removePersistingExitingTiles:(id)arg1;

- (void)reset;

- (void)setActive:(_Bool)arg1;

- (void)setBuildingMode:(int)arg1 animated:(_Bool)arg2;

@property(retain, nonatomic) VKSkyModel *skyModel; // @synthesize skyModel=_skyModel;

@property(nonatomic) long long vectorType; // @synthesize vectorType=_vectorType;

- (void)stylesheetDidChange;

- (unsigned int)supportedRenderPasses;

- (void)vectorTypeDidChange;

- (_Bool)wantsCategorizedSourceTiles;

- (void)willStartDrawingTiles:(id)arg1;

- (void)willStopDrawingTiles:(id)arg1;



@end


