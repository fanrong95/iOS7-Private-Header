/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "CALayer.h"



#import "VGLCanvas.h"



@class VGLContext, VGLFramebuffer, VGLLayer;



__attribute__((visibility("hidden")))

@interface VGLScreenCanvas : CALayer <VGLCanvas>

{

    VGLContext *_targetContext;

    long long _canvasWidth;

    long long _canvasHeight;

    _Bool _useDepthBuffer;

    _Bool _useStencilBuffer;

    _Bool _useMultisampling;

    _Bool _requiresMultisampling;

    struct _VGLColor _glClearColor;

    struct CGContext *_snapshotContext;

    _Bool _forceRecreateFramebuffer;

    _Bool _forceRecreateFramebufferAndKeepMultisampleFramebuffer;

    VGLFramebuffer *_targetBuffer;

    double _contentScale;

    VGLLayer *_glLayer;

    _Bool _isInBackground;

}



+ (Class)contextClass;

- (id).cxx_construct;

- (void)_createFramebuffer;

- (void)_createGLLayerIfNecessary;

- (void)_destroyAndCreateFramebuffer;

- (void)_destroyAndCreateFramebufferAndKeepMultisampleFramebuffer;

- (void)_destroyFramebuffer;

- (void)_destroyFramebufferAndKeepMultisampleFramebuffer;

- (void)_updateForceRecreateFramebuffer;

- (_Bool)canRender;

@property(nonatomic) double contentScale; // @synthesize contentScale=_contentScale;

- (void)createContextIfNecessary;

@property(readonly, nonatomic) _Bool currentSceneRequiresMSAA;

- (void)dealloc;

- (void)didDrawView;

- (void)didEnterBackground;

- (void)didPresent;

- (void)didReceiveMemoryWarning;

- (void)display;

- (void)drawWithTimestamp:(double)arg1;

- (void)frameBufferDestroyed;

@property(nonatomic) struct _VGLColor glClearColor; // @synthesize glClearColor=_glClearColor;

@property(readonly, nonatomic) VGLLayer *glLayer; // @synthesize glLayer=_glLayer;

- (id)initWithContext:(id)arg1 inBackground:(_Bool)arg2;

@property(readonly, nonatomic, getter=isDrawable) _Bool drawable;

- (_Bool)isEffectivelyHidden;

- (void)layoutSublayers;

- (void)preloadResources;

- (void)present;

- (void)renderInContext:(struct CGContext *)arg1;

- (void)setBackgroundColor:(struct CGColor *)arg1;

- (void)setBounds:(struct CGRect)arg1;

- (void)setContentsGravity:(id)arg1;

- (void)setContentsScale:(double)arg1;

- (void)setNeedsDisplay;

- (void)setNeedsDisplayOnBoundsChange:(_Bool)arg1;

- (void)setOpaque:(_Bool)arg1;

@property(nonatomic) _Bool useDepthBuffer; // @synthesize useDepthBuffer=_useDepthBuffer;

@property(nonatomic) _Bool useMultisampling;

@property(nonatomic) _Bool useStencilBuffer; // @synthesize useStencilBuffer=_useStencilBuffer;

- (_Bool)shouldRender;

@property(readonly, nonatomic) struct CGSize size;

@property(readonly, nonatomic) struct CGSize sizeInPixels;

@property(readonly, nonatomic) VGLContext *vglContext; // @synthesize vglContext=_targetContext;

- (_Bool)wantsRender;

- (void)willDrawView;

- (void)willEnterForeground;



@end


