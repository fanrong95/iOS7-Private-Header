/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "VKModelObject.h"


#import "GEOResourceManifestTileGroupObserver.h"

#import "VKAnnotationModelDelegate.h"

#import "VKLabelModelDelegate.h"

#import "VKOverlayContainerDelegate.h"

#import "VKTileProviderClient.h"



@class NSArray, NSMapTable, NSMutableArray, NSMutableSet, NSSet, VKAnimation, VKAnnotationMarker, VKAnnotationModel, VKBuildingFootprintMapModel, VKDebugModel, VKGridModel, VKGroundCoverMapModel, VKLabelMarker, VKLabelModel, VKMapRasterizer, VKMercatorTerrainHeightCache, VKOverlayContainerModel, VKOverlayTileSource, VKPolygonMapModel, VKPolylineOverlayPainter, VKRasterMapModel, VKRasterOverlayMapModel, VKRasterOverlayTileSource, VKRasterTrafficMapModel, VKRealisticMapModel, VKRoadMapModel, VKRoadTrafficMapModel, VKSkyModel, VKStylesheet, VKTileProvider, VKTrafficTileSource;



__attribute__((visibility("hidden")))

@interface VKMapModel : VKModelObject <VKAnnotationModelDelegate, VKOverlayContainerDelegate, VKLabelModelDelegate, GEOResourceManifestTileGroupObserver, VKTileProviderClient>

{

    unsigned long long _mapPurpose;

    long long _tileSize;

    VKTileProvider *_tileProviders[3];

    VKTileProvider *_rasterOverlayProvider[2];

    long long _mapMode;

    long long _desiredMapMode;

    _Bool _transitioningToNav;

    _Bool _activeMapLayers[3][29];

    NSMapTable *_layerToSourceMaps[3];

    VKTrafficTileSource *_trafficSource;

    VKOverlayTileSource *_overlayTileSource;

    VKOverlayTileSource *_realisticOverlayTileSource;

    VKRasterOverlayTileSource *_rasterOverlayTileSource[2];

    VKGridModel *_gridModel;

    VKSkyModel *_skyModel;

    VKLabelModel *_labelModel;

    VKRasterMapModel *_rasterModel;

    VKRasterMapModel *_standardRasterModel;

    VKGroundCoverMapModel *_groundCoverModel;

    VKRoadMapModel *_riverLineModel;

    VKRasterTrafficMapModel *_rasterTrafficModel;

    VKPolygonMapModel *_polygonModel;

    VKRoadMapModel *_roadModel;

    VKRoadMapModel *_hybridRoadModel;

    VKRoadTrafficMapModel *_roadTrafficModel;

    VKRealisticMapModel *_realisticModel;

    VKBuildingFootprintMapModel *_buildingFootprintModel;

    VKAnnotationModel *_annotationModel;

    VKOverlayContainerModel *_overlayContainerModel;

    VKRasterOverlayMapModel *_rasterOverlayModel[2];

    VKDebugModel *_debugModel;

    NSMapTable *_tileSources;

    NSMutableArray *_drawOrder;

    NSMutableArray *_mapLayerSubmodels;

    NSMutableArray *_mapTileSubmodels;

    VKStylesheet *_activeStylesheet;

    VKStylesheet *_defaultStylesheet;

    VKStylesheet *_hybridStylesheet;

    VKStylesheet *_satelliteStylesheet;

    double _zoomLevel;

    long long _mapType;

    id <VKMapModelDelegate> _delegate;

    id <VKRoutePreloadSession> _routePreloadSession;

    _Bool _dynamicMapModesEnabled;

    _Bool _debugDynamicMapModesEnabled;

    _Bool _buildingsAreVisible;

    _Bool _showsBuildings;

    _Bool _fullyDrawn;

    _Bool _shouldNotifyFullyDrawn;

    _Bool _hasFailedTile;

    _Bool _trafficEnabled;

    _Bool _shouldRasterize;

    long long _loadingCount;

    double _contentScale;

    long long _targetDisplay;

    double _lodBias;

    _Bool _disableRoads;

    _Bool _disableLabels;

    _Bool _disablePolygons;

    _Bool _disableBuildingFootprints;

    _Bool _disableRasters;

    _Bool _enableBlackRoadLines;

    _Bool _disableGrid;

    struct _VGLColor _clearColor;

    VKMapRasterizer *_rasterizer;

    VKRasterMapModel *_rasterViewer;

    int _annotationMarkerStyle;

    _Bool _limitingNavCameraHeight;

    NSMutableSet *_blockingStylesheetObservers;

    double _styleTransitionProgress;

    NSMutableArray *_externalAnchors;

    VKAnimation *_modeTransitionAnimation;

    _Bool _disableRoadClass[9];

    id <VKMapModeObserver> _mapModeObserver;

}



+ (const char *)nameForRoadClass:(int)arg1;

+ (unsigned long long)numberOfRoadClasses;

- (id).cxx_construct;

- (void)_activateModel:(id)arg1;

- (void)_deactivateModel:(id)arg1;

- (void)_forceLayout;

- (void)_localeChanged:(id)arg1;

- (void)_mapConfigurationDidChange;

- (id)_rasterOverlayTileSourceForLevel:(unsigned long long)arg1;

- (void)_reloadStylesheet;

- (void)_setStyleTransitionProgress:(double)arg1 targetStyle:(long long)arg2 step:(long long)arg3;

- (void)_setStylesheetFromMapType:(long long)arg1;

- (double)_styleTransitionProgress;

- (void)_transitionFromMode:(long long)arg1 toMode:(long long)arg2 animated:(_Bool)arg3;

- (void)_tryTransitionAndPreloadIfNecessary:(id)arg1;

- (void)_updateOverlayTileSource;

- (void)_updateRegularTileProviderMode;

- (void)_updateTileExclusionAreas;

- (void)_updateZoomLevel:(id)arg1;

- (void)addAnnotationMarker:(id)arg1 allowAnimation:(_Bool)arg2;

- (void)addExternalAnchor:(id)arg1;

- (void)addOverlay:(id)arg1;

- (void)addPersistentOverlay:(id)arg1;

- (void)addRasterOverlay:(id)arg1;

- (void)addSubmodel:(id)arg1;

@property(retain, nonatomic) NSArray *alwaysVisibleTrafficIncidents;

- (id)annotationCoordinateTest;

- (id)annotationMarkerDeselectionCallback;

- (id)annotationMarkerForSelectionAtPoint:(struct VKPoint)arg1 avoidCurrent:(_Bool)arg2 canvasSize:(struct CGSize)arg3;

- (id)annotationMarkers;

- (void)annotationModel:(id)arg1 didAnimateInAnnotationMarkers:(id)arg2;

- (void)annotationModel:(id)arg1 didFinishAddingAnnotationMarkers:(id)arg2;

- (void)annotationModel:(id)arg1 willAnimateInAnnotationMarkers:(id)arg2;

- (id)annotationRectTest;

- (id)attributionsForCurrentRegion;

@property(readonly, nonatomic) VKBuildingFootprintMapModel *buildingFootprintModel; // @synthesize buildingFootprintModel=_buildingFootprintModel;

@property(readonly, nonatomic) _Bool buildingsAreVisible; // @synthesize buildingsAreVisible=_buildingsAreVisible;

@property(nonatomic) struct _VGLColor clearColor; // @synthesize clearColor=_clearColor;

- (void)clearScene;

- (void)configureTileSources;

@property(nonatomic) double contentScale; // @synthesize contentScale=_contentScale;

- (id)createSourceForLayer:(unsigned long long)arg1 tileSet:(id)arg2 mode:(long long)arg3;

- (void)createTrafficTileSourceIfNecessary;

@property(readonly, nonatomic) long long currentMapMode; // @synthesize currentMapMode=_mapMode;

- (void)dealloc;

- (void)debugHighlightLabelAtScreenPoint:(struct CGPoint)arg1 viewTransform:(id)arg2;

@property(nonatomic) id <VKMapModelDelegate> delegate; // @synthesize delegate=_delegate;

- (void)deselectAnnotationMarker:(id)arg1;

- (void)deselectLabelMarker;

- (id)detailedDescription;

- (void)didBeginTransitionToNavigation;

- (void)didEndNavigation;

- (void)didReceiveMemoryWarning;

- (void)didStopLoadingTilesWithError:(id)arg1;

- (void)didTapZoom;

@property(nonatomic) _Bool disableBuildingFootprints; // @synthesize disableBuildingFootprints=_disableBuildingFootprints;

@property(nonatomic) _Bool disableGrid; // @synthesize disableGrid=_disableGrid;

@property(nonatomic) _Bool disableLabels; // @synthesize disableLabels=_disableLabels;

@property(nonatomic) _Bool disablePolygons; // @synthesize disablePolygons=_disablePolygons;

@property(nonatomic) _Bool disableRasters; // @synthesize disableRasters=_disableRasters;

@property(nonatomic) _Bool disableRealisticLand;

@property(nonatomic) _Bool disableRealisticRoads;

- (void)disableRoadClass:(_Bool)arg1 withRoadClass:(int)arg2;

@property(nonatomic) _Bool disableRoads; // @synthesize disableRoads=_disableRoads;

- (void)drawScene:(id)arg1 withContext:(id)arg2;

@property(nonatomic) _Bool dynamicMapModesEnabled; // @synthesize dynamicMapModesEnabled=_dynamicMapModesEnabled;

@property(nonatomic) _Bool enableBlackRoadLines; // @synthesize enableBlackRoadLines=_enableBlackRoadLines;

- (id)externalAnchors;

- (void)flushCaches;

@property(retain, nonatomic) VKPolylineOverlayPainter *focusedLabelsPolylinePainter;

- (void)forceMapType:(long long)arg1;

- (void)foreachActiveLayer:(id)arg1;

- (double)heightAtPoint:(struct VKPoint)arg1;

- (id)initShouldRasterize:(_Bool)arg1 mapPurpose:(unsigned long long)arg2 contentScale:(double)arg3;

- (void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2;

- (void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2;

@property(readonly, nonatomic) _Bool isFullyDrawn;

- (_Bool)isRoadClassDisabled:(int)arg1;

- (_Bool)isShowingNoDataPlaceholders;

@property(nonatomic, getter=isTrafficEnabled) _Bool trafficEnabled; // @synthesize trafficEnabled=_trafficEnabled;

- (id)labelDebugString;

- (id)labelMarkerForSelectionAtPoint:(struct CGPoint)arg1 selectableLabelsOnly:(_Bool)arg2;

@property(nonatomic) _Bool labelMarkerSelectionEnabled;

- (id)labelMarkers;

- (id)labelModel:(id)arg1 mapTileForTile:(id)arg2 layer:(unsigned long long)arg3;

- (void)labelModel:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;

@property(nonatomic) long long labelScaleFactor;

- (void)layoutScene:(id)arg1 withContext:(id)arg2;

- (void)layoutSceneIfNeeded:(id)arg1 withContext:(id)arg2;

@property(nonatomic) _Bool limitingNavCameraHeight; // @synthesize limitingNavCameraHeight=_limitingNavCameraHeight;

@property(nonatomic) _Bool localizeLabels;

@property(nonatomic) long long mapType; // @synthesize mapType=_mapType;

- (double)maxTileHeightAtPoint:(struct VKPoint)arg1;

- (long long)maximumZoomLevelInView:(id)arg1;

- (long long)minimumZoomLevelInView:(id)arg1;

- (id)navTileSource;

@property(nonatomic) long long navigationShieldSize;

@property(nonatomic) unsigned long long neighborMode;

- (id)overlayContainer:(id)arg1 painterForOverlay:(id)arg2;

- (id)overlayContainer:(id)arg1 roadTileForTile:(id)arg2;

- (_Bool)overlayContainerIsInRealisticMode:(id)arg1;

@property(readonly, nonatomic) NSArray *overlays;

- (void)performStylesheetDidChange;

- (void)performStylesheetDoneChanging;

- (void)performStylesheetWillChange;

@property(readonly, nonatomic) NSSet *persistentOverlays;

- (float)ppi;

- (void)preloadNavigationSceneAnimationResourcesForDisplayStyle:(long long)arg1 context:(id)arg2;

- (void)preloadNavigationSceneResourcesWithContext:(id)arg1;

- (void)recursiveDrawScene:(id)arg1 withContext:(id)arg2 pass:(unsigned int)arg3;

- (void)removeAnnotationMarker:(id)arg1;

- (void)removeExternalAnchor:(id)arg1;

- (void)removeOverlay:(id)arg1;

- (void)removePersistentOverlay:(id)arg1;

- (void)removeRasterOverlay:(id)arg1;

- (void)requestStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(long long)arg2 setupHandler:(id)arg3;

- (void)resetTileContainers;

- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;

- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;

@property(nonatomic) id <VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation;

@property(retain, nonatomic) id <VKRoutePreloadSession> routePreloadSession;

- (void)selectAnnotationMarker:(id)arg1;

- (void)selectLabelMarker:(id)arg1;

@property(readonly, nonatomic) VKAnnotationMarker *selectedAnnotationMarker;

@property(readonly, nonatomic) VKLabelMarker *selectedLabelMarker;

- (void)setAnnotationMarkerDeselectionCallback:(id)arg1;

- (void)setCurrentLocationText:(id)arg1;

- (void)setDesiredMapMode:(long long)arg1 immediate:(_Bool)arg2;

- (void)setRouteUserOffset:(struct PolylineCoordinate)arg1;

@property(nonatomic) long long shieldIdiom;

@property(nonatomic) long long shieldSize;

@property(nonatomic) _Bool shouldLoadFallbackTiles;

@property(nonatomic) _Bool showsBuildings; // @synthesize showsBuildings=_showsBuildings;

@property(nonatomic) _Bool showsPointsOfInterest;

@property(retain, nonatomic) VKStylesheet *stylesheet; // @synthesize stylesheet=_activeStylesheet;

@property(nonatomic) long long targetDisplay;

- (void)shouldFlushCaches:(id)arg1;

- (id)sourceForLayer:(unsigned long long)arg1 mode:(long long)arg2;

- (void)stylesheetAnimationDidEnd:(_Bool)arg1;

- (void)stylesheetAnimationDidProgress:(float)arg1;

- (void)stylesheetAnimationWillStartFromStyle:(long long)arg1 toStyle:(long long)arg2;

- (unsigned int)supportedRenderPasses;

@property(readonly, nonatomic) VKMercatorTerrainHeightCache *terrainHeightCache;

@property(readonly, nonatomic) VKTileProvider *tileProvider;

- (_Bool)tileProviderMayUseNetwork:(id)arg1;

- (void)tileProviderNeedsUpdate:(id)arg1;

- (long long)tileSize;

- (int)tileStyleForMapLayer:(unsigned long long)arg1;

@property(readonly, nonatomic) NSArray *visibleTileSets;

- (void)willStartLoadingTiles;

- (void)willTapZoom;



@end


