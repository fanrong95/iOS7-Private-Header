/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "VKTileHeightInformation.h"



@class GEOVectorTile, NSArray, VGLMeshVendor, VGLTexture, VKAnimation, VKHeightfield, VKStylesheet;



__attribute__((visibility("hidden")))

@interface VKBuildingFootprintMaker : NSObject <VKTileHeightInformation>

{

    float _maxHeight;

    VKHeightfield *_heightfield;

    VKAnimation *_animateOut;

    VKAnimation *_animateIn;

    float _alpha;

    float _scale;

    double _contentScale;

    GEOVectorTile *_geotile;

    VKStylesheet *_stylesheet;

    VKAnimation *_animateBuildingMode;

    vector_f457f7ad _regularFacadeCollections;

    vector_f457f7ad _realisticFacadeCollections;

    VGLMeshVendor *_pointyBuildingsMeshVendor;

    VGLMeshVendor *_footprintsMeshVendor;

    struct vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>> _sharedFacadeCollection;

    struct vector<VGLMeshVendor *, vk_allocator<VGLMeshVendor *>> _regularFacadeCollection;

    VGLTexture *_shadowTexture;

    CDStruct_aa5aacbc _shadowTextureMatrix;

    struct vector<VKBuildingHeightMap, vk_allocator<VKBuildingHeightMap>> _landmarkHeights;

    VGLMeshVendor *_landmarksMeshVendor;

    struct DiscontinuityEdgeInfo *_sharedDiscontinuityEdgeInfo;

    struct DiscontinuityEdgeInfo *_regularDiscontinuityEdgeInfo;

    struct DiscontinuityEdgeInfo *_realisticDiscontinuityEdgeInfo;

    struct unordered_map<long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>, std::__1::hash<long>, std::__1::equal_to<long>, vk_allocator<std::__1::pair<const long, std::__1::vector<const vk::DiscontinuityEdgeInfo *, vk_allocator<const vk::DiscontinuityEdgeInfo *>>>>> _discontinuityEdgeInfoMap;

    struct BuildingTopMeshFactory *_topMeshFactory;

    VGLMeshVendor *_footprintStrokeMeshVendor;

    float _minLayeringHeight;

    float _maxLayeringHeight;

}



- (id).cxx_construct;

- (void).cxx_destruct;

- (void)_makeFootprintsMesh;

- (void)_makeMeshesWithLandmarksPresent:(_Bool)arg1 makeFacades:(_Bool)arg2 pointyFootprints:(unordered_map_93d329bc *)arg3 useHiResFootprints:(_Bool)arg4;

- (void)_makeShadowTextureWithVectorTile:(id)arg1 skipLandmarks:(_Bool)arg2 pointyFootprints:(const unordered_map_93d329bc *)arg3 useHiResFootprints:(_Bool)arg4 landmarks:(const CDStruct_9c9be310 *)arg5 landmarkCount:(unsigned long long)arg6;

- (_Bool)_makeThreeDBuildingsMesh:(const CDStruct_9c9be310 *)arg1 buildingCount:(unsigned long long)arg2;

@property(nonatomic) float alpha; // @synthesize alpha=_alpha;

@property(retain, nonatomic) VKAnimation *animateBuildingMode; // @synthesize animateBuildingMode=_animateBuildingMode;

@property(retain, nonatomic) VKAnimation *animateIn; // @synthesize animateIn=_animateIn;

@property(retain, nonatomic) VKAnimation *animateOut; // @synthesize animateOut=_animateOut;

- (void)dealloc;

- (const vector_9adfa044 *)discontinuityEdgeInfoWithVectorType:(long long)arg1;

- (const vector_f457f7ad *)facadeCollectionsWithVectorType:(long long)arg1;

@property(readonly, nonatomic) NSArray *footprintStrokeMeshes;

@property(readonly, nonatomic) NSArray *footprintsMeshes;

- (void)forEachTopMesh:(id)arg1 forVectorType:(void)arg2 atLayer:(long long)arg3;

- (void)forEachTopMesh:(id)arg1 topStrokeMesh:(void)arg2 forVectorType:(id)arg3;

- (void)forEachTopStrokeMesh:(id)arg1 forVectorType:(void)arg2 atLayer:(long long)arg3;

- (_Bool)heightAtX:(float)arg1 Y:(float)arg2 outZ:(float *)arg3;

- (id)initWithVectorTile:(id)arg1 stylesheet:(id)arg2 makeFacades:(_Bool)arg3;

@property(readonly, nonatomic) NSArray *landmarksMeshes;

@property(readonly, nonatomic) float maxHeight; // @synthesize maxHeight=_maxHeight;

@property(readonly, nonatomic) float maxLayeringHeight;

@property(readonly, nonatomic) float minLayeringHeight;

@property(readonly, nonatomic) NSArray *pointyBuildingsMeshes;

@property(nonatomic) float scale; // @synthesize scale=_scale;

@property(readonly, nonatomic) VGLTexture *shadowTexture;

@property(readonly, nonatomic) const CDStruct_aa5aacbc *shadowTextureMatrix;



@end


