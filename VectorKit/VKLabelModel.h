/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "VKModelObject.h"


#import "GEOResourceManifestTileGroupObserver.h"

#import "LabelManagerDelegate.h"

#import "VKMapLayer.h"

#import "VKMapModeObserver.h"

#import "VKStylesheetObserver.h"



@class NSArray, VKStylesheet;



__attribute__((visibility("hidden")))

@interface VKLabelModel : VKModelObject <LabelManagerDelegate, GEOResourceManifestTileGroupObserver, VKMapLayer, VKStylesheetObserver, VKMapModeObserver>

{

    _Bool _debugSkipLabels;

    id <VKLabelModelDelegate> _delegate;

    _Bool _drawLabels;

    id _observerIsReadyHook;

    shared_ptr_dd1f7020 _labelManager;

    int _layoutStamp;

    struct vector<std::__1::shared_ptr<vk::InfoMapTile>, vk_allocator<std::__1::shared_ptr<vk::InfoMapTile>>> _currentTiles;

    _Bool _inRealistic;

}



+ (_Bool)reloadOnStylesheetChange;

- (id).cxx_construct;

- (void).cxx_destruct;

@property(retain, nonatomic) NSArray *alwaysVisibleTrafficIncidents;

- (void)clearScene;

- (void)dealloc;

- (void)debugHighlightLabelAtScreenPoint:(struct CGPoint)arg1;

@property(nonatomic) id <VKLabelModelDelegate> delegate; // @synthesize delegate=_delegate;

- (void)deselectLabelMarker;

- (void)didTapZoom;

- (void)didTransitionFrom:(long long)arg1 To:(long long)arg2;

@property(nonatomic) _Bool drawLabels; // @synthesize drawLabels=_drawLabels;

- (void)drawScene:(id)arg1 withContext:(id)arg2 pass:(unsigned int)arg3;

- (id)focusedPolylinePainter;

- (void)forEachDisplayedLabel:(id)arg1;

- (id)initWithPurpose:(unsigned long long)arg1;

- (id)labelDebugString;

@property(readonly, nonatomic) shared_ptr_dd1f7020 labelManager; // @synthesize labelManager=_labelManager;

- (void)labelManager:(struct LabelManager *)arg1 pendingArtworkIsReady:(_Bool)arg2;

- (void)labelManager:(struct LabelManager *)arg1 selectedLabelMarkerWillDisappear:(id)arg2;

- (void)labelManager:(struct LabelManager *)arg1 setNeedsDisplay:(_Bool)arg2;

- (void)labelManager:(struct LabelManager *)arg1 setNeedsLayout:(_Bool)arg2;

- (id)labelMarkerForSelectionAtPoint:(struct CGPoint)arg1 selectableLabelsOnly:(_Bool)arg2;

@property(nonatomic) _Bool labelMarkerSelectionEnabled;

- (id)labelMarkers;

@property(nonatomic) long long labelScaleFactor;

- (void)layoutScene:(id)arg1 withContext:(id)arg2;

@property(nonatomic) _Bool localizeLabels;

- (unsigned long long)mapLayerPosition;

@property(nonatomic) long long navigationShieldSize;

- (void)prepareForStylesheetTransitionToMapDisplayStyle:(long long)arg1 withReadinessBlock:(id)arg2;

- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;

- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;

- (void)selectLabelMarker:(id)arg1;

- (id)selectedLabelMarker;

- (void)setContentScale:(double)arg1;

- (void)setCurrentLocationText:(id)arg1;

- (void)setFocusedPolylinePainter:(id)arg1;

- (void)setLabelMode:(int)arg1;

- (void)setMapType:(long long)arg1;

- (void)setRouteUserOffset:(struct PolylineCoordinate)arg1;

@property(nonatomic) long long shieldIdiom;

@property(nonatomic) long long shieldSize;

@property(nonatomic) _Bool showsPointsOfInterest;

- (void)setStylesheet:(id)arg1;

- (void)setTrafficEnabled:(_Bool)arg1;

- (void)setVectorType:(long long)arg1;

@property(readonly, nonatomic) VKStylesheet *stylesheet;

- (void)stylesheetDidChange;

- (void)stylesheetDoneChanging;

- (void)stylesheetWillChange;

- (unsigned int)supportedRenderPasses;

- (void)updateInfoMapTiles:(id)arg1;

- (void)willTapZoom;

- (void)willTransitionFrom:(long long)arg1 To:(long long)arg2;



@end


