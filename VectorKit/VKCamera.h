/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class VKFootprint, VKViewVolume;



__attribute__((visibility("hidden")))

@interface VKCamera : NSObject

{

    id <VKCameraDelegate> _delegate;

    struct VKPoint _position;

    CDStruct_aa5aacbc _orientation;

    float _aspectRatio;

    float _verticalFieldOfView;

    CDStruct_184b3e93 _frustum;

    CDStruct_184b3e93 _previousFrustum;

    double _minHeight;

    double _maxHeight;

    double _maxPitch;

    double _terrainHeight;

    double _maxFarClipDistance;

    _Bool _needsUpdate;

    _Bool _updating;

    int _updateNumber;

    CDStruct_aa5aacbc _viewProjectionMatrix;

    CDStruct_aa5aacbc _projectionMatrix;

    CDStruct_aa5aacbc _viewMatrix;

    CDStruct_aa5aacbc _viewMatrixUnscaled;

    CDStruct_aa5aacbc _projectionMatrixUnscaled;

    CDStruct_aa5aacbc _viewProjectionMatrixUnscaled;

    CDStruct_aa5aacbc _worldMatrix;

    VKViewVolume *_viewVolume;

    VKFootprint *_footprint;

    double _tanHalfHorizFOV;

    double _tanHalfVerticalFOV;

    Vec3Imp_f658403c _forward;

    Vec3Imp_f658403c _right;

    Vec3Imp_f658403c _up;

    double _fractionOfScreenAboveFarClipPlaneAtCanonicalPitch;

    double _distanceToGroundAndFarClipPlaneIntersection;

    double _screenHeightOfGroundAndFarClipPlaneIntersection;

    _Bool _allowDatelineWraparound;

    double _canonicalPitch;

}



- (id).cxx_construct;

- (void)_setPosition:(struct VKPoint)arg1;

- (void)adjustClipPlanes;

@property(nonatomic) _Bool allowDatelineWraparound; // @synthesize allowDatelineWraparound=_allowDatelineWraparound;

@property(nonatomic) float aspectRatio; // @synthesize aspectRatio=_aspectRatio;

@property(nonatomic) struct VKCameraState cameraState;

@property(nonatomic) double canonicalPitch; // @synthesize canonicalPitch=_canonicalPitch;

- (void)dealloc;

@property(nonatomic) id <VKCameraDelegate> delegate; // @synthesize delegate=_delegate;

- (double)depthForViewWidth:(double)arg1;

- (id)description;

@property(readonly, nonatomic) double distanceToGroundAndFarClipPlaneIntersection; // @synthesize distanceToGroundAndFarClipPlaneIntersection=_distanceToGroundAndFarClipPlaneIntersection;

@property(readonly, nonatomic) double farClipDistance;

@property(readonly, nonatomic) VKFootprint *footprint;

@property(readonly, nonatomic) Vec3Imp_f658403c forwardVector;

@property(nonatomic) double fractionOfScreenAboveFarClipPlaneAtCanonicalPitch; // @synthesize fractionOfScreenAboveFarClipPlaneAtCanonicalPitch=_fractionOfScreenAboveFarClipPlaneAtCanonicalPitch;

@property(readonly, nonatomic) CDStruct_184b3e93 frustum; // @synthesize frustum=_frustum;

@property(readonly, nonatomic) struct VKPoint groundPoint;

- (struct VKPoint)groundPointFromScreenPoint:(struct CGPoint)arg1;

- (struct VKPoint)groundPointFromScreenPoint:(struct CGPoint)arg1 atGroundLevel:(double)arg2;

- (_Bool)hasChangedState:(struct VKCameraState *)arg1;

@property(readonly, nonatomic) float horizontalFieldOfView;

- (id)init;

- (_Bool)isOuterWorldBoundsVisible;

- (_Bool)isWorldSpaceRectVisible:(const CDStruct_d2b197d1 *)arg1;

- (void)logCameraState;

@property(nonatomic) double maxHeight; // @synthesize maxHeight=_maxHeight;

@property(nonatomic) double maxPitch; // @synthesize maxPitch=_maxPitch;

- (float)maximumStyleZForRect:(const CDStruct_d2b197d1 *)arg1;

@property(nonatomic) double minHeight; // @synthesize minHeight=_minHeight;

@property(readonly, nonatomic) double nearClipDistance;

@property(nonatomic) const CDStruct_aa5aacbc *orientation;

@property(readonly, nonatomic) double pitch;

@property(nonatomic) struct VKPoint position; // @synthesize position=_position;

@property(readonly, nonatomic) const CDStruct_aa5aacbc *projectionMatrix;

@property(readonly, nonatomic) const CDStruct_aa5aacbc *projectionMatrixUnscaled;

@property(readonly, nonatomic) Vec3Imp_f658403c rightVector;

@property(readonly, nonatomic) double screenHeightOfGroundAndFarClipPlaneIntersection; // @synthesize screenHeightOfGroundAndFarClipPlaneIntersection=_screenHeightOfGroundAndFarClipPlaneIntersection;

- (void)setNeedsUpdate;

@property(nonatomic) double terrainHeight; // @synthesize terrainHeight=_terrainHeight;

@property(nonatomic) float verticalFieldOfView;

@property(readonly, nonatomic) double tanHalfHorizFOV;

@property(readonly, nonatomic) double tanHalfVerticalFOV;

@property(readonly, nonatomic) Vec3Imp_f658403c upVector;

- (void)updateIfNeeded;

@property(readonly, nonatomic) int updateNumber; // @synthesize updateNumber=_updateNumber;

@property(readonly, nonatomic) const CDStruct_aa5aacbc *viewMatrix;

@property(readonly, nonatomic) const CDStruct_aa5aacbc *viewMatrixUnscaled;

@property(readonly, nonatomic) const CDStruct_aa5aacbc *viewProjectionMatrix;

@property(readonly, nonatomic) const CDStruct_aa5aacbc *viewProjectionMatrixUnscaled;

@property(readonly, nonatomic) VKViewVolume *viewVolume;

- (double)widthOfViewAtDepth:(double)arg1;

@property(readonly, nonatomic) const CDStruct_aa5aacbc *worldMatrix;

@property(readonly, nonatomic) double yaw;



@end


