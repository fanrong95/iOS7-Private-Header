/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSError, VKStylesheet, VKTileKeyList, VKTileKeyMap, VKTilePool;



__attribute__((visibility("hidden")))

@interface VKTileSource : NSObject

{

    id <VKTileSourceClient> _client;

    VKTilePool *_tilePool;

    VKTileKeyMap *_pendingLoads;

    VKTileKeyList *_decoding;

    VKTileKeyList *_failedTiles;

    VKStylesheet *_stylesheet;

    double _contentScale;

    int loadingTiles;

    NSError *_recentError;

}



- (void)_failedToLoadSourceKey:(const struct VKTileKey *)arg1 downloadKey:(const struct _GEOTileKey *)arg2 error:(id)arg3;

- (void)_fetchedTile:(id)arg1;

- (_Bool)_shouldDecodeTile:(const struct VKTileKey *)arg1;

- (_Bool)canFetchTileForKey:(const struct VKTileKey *)arg1;

- (void)cancelDownload:(const struct _GEOTileKey *)arg1;

- (_Bool)cancelFetchForKey:(const struct VKTileKey *)arg1;

- (_Bool)cancelFetchForKey:(const struct VKTileKey *)arg1 sourceKey:(const struct VKTileKey *)arg2;

- (void)clearCaches;

@property(nonatomic) id <VKTileSourceClient> client; // @synthesize client=_client;

@property(nonatomic) double contentScale; // @synthesize contentScale=_contentScale;

- (void)dealloc;

- (void)decodeData:(id)arg1 downloadKey:(const struct _GEOTileKey *)arg2 sourceKey:(const struct VKTileKey *)arg3;

- (id)detailedDescription;

- (void)didFailToLoadTileKey:(const struct _GEOTileKey *)arg1 error:(id)arg2;

- (void)didFetchData:(id)arg1 forKey:(const struct _GEOTileKey *)arg2;

- (void)didFinishWithNetwork;

- (void)didLoadTile:(id)arg1 forKey:(const struct VKTileKey *)arg2;

- (struct _GEOTileKey)downloadKeyAtX:(unsigned int)arg1 y:(unsigned int)arg2 z:(unsigned int)arg3;

- (struct _GEOTileKey)downloadKeyForSourceKey:(const struct VKTileKey *)arg1;

- (void)failedToDecodeSourceKey:(const struct VKTileKey *)arg1;

- (void)fetchTileForKey:(const struct VKTileKey *)arg1;

- (void)fetchTileForKey:(const struct VKTileKey *)arg1 sourceKey:(const struct VKTileKey *)arg2;

- (void)fetchedTile:(id)arg1 forKey:(const struct VKTileKey *)arg2;

- (void)forceDownload;

- (void)foreachTileInPool:(id)arg1;

- (id)init;

@property(readonly, nonatomic) long long maximumDownloadZoomLevel;

@property(readonly, nonatomic) long long maximumZoomLevel;

@property(readonly, nonatomic) _Bool maximumZoomLevelBoundsCamera;

- (_Bool)mayUseNetwork;

@property(readonly, nonatomic) long long minimumDownloadZoomLevel;

@property(readonly, nonatomic) long long minimumZoomLevel;

@property(readonly, nonatomic) _Bool minimumZoomLevelBoundsCamera;

- (struct VKTileKey)nativeKeyForRenderKey:(const struct VKTileKey *)arg1;

- (void)performDownload:(const struct _GEOTileKey *)arg1;

- (void)populateVisibleTileSets:(id)arg1 withTiles:(id)arg2;

@property(retain, nonatomic) VKStylesheet *stylesheet; // @synthesize stylesheet=_stylesheet;

- (struct VKTileKey)sourceKeyForDownloadKey:(const struct _GEOTileKey *)arg1;

- (struct VKTileKey)sourceKeyForRenderKey:(const struct VKTileKey *)arg1;

- (void)tileAvailabilityChanged:(id)arg1;

- (id)tileForData:(id)arg1 downloadKey:(const struct _GEOTileKey *)arg2 sourceKey:(const struct VKTileKey *)arg3;

- (id)tileForKey:(const struct VKTileKey *)arg1;

- (id)tileForSourceKey:(const struct VKTileKey *)arg1 renderKey:(const struct VKTileKey *)arg2;

@property(readonly, nonatomic) long long tileSize;

- (void)willGoToNetwork;

@property(readonly, nonatomic) long long zEquivalenceClass;



@end


