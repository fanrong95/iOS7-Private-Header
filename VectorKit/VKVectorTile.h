/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "VKTile.h"


@class GEOVectorTile, NSArray, NSMutableArray, VKBuildingFootprintMaker, VKMapTileList, VKStylesheet, VKTrafficTile;



__attribute__((visibility("hidden")))

@interface VKVectorTile : VKTile

{

    GEOVectorTile *_modelTile;

    VKTrafficTile *_trafficTile;

    NSMutableArray *_roadGroups;

    NSMutableArray *_polygonGroups;

    NSMutableArray *_coastlineGroups;

    _Bool _shouldBlend;

    float _alpha;

    double _contentScale;

    VKBuildingFootprintMaker *_buildingFootprintMaker;

    float _maximumStyleZ;

    float _textureScale;

    VKStylesheet *_stylesheet;

    long long _vectorType;

    VKMapTileList *_fragments;

}



@property(nonatomic) float alpha; // @synthesize alpha=_alpha;

- (void)buildCoastlines;

- (void)buildPolygons;

- (void)buildRoadGroupsAndGenerateMesh:(_Bool)arg1;

@property(readonly, nonatomic) VKBuildingFootprintMaker *buildingFootprintMaker; // @synthesize buildingFootprintMaker=_buildingFootprintMaker;

@property(readonly, nonatomic) NSArray *coastlineGroups; // @synthesize coastlineGroups=_coastlineGroups;

@property(nonatomic) double contentScale; // @synthesize contentScale=_contentScale;

- (void)dealloc;

@property(readonly, nonatomic) VKMapTileList *fragments; // @synthesize fragments=_fragments;

- (void)generateBuildingFootprintMeshWithFacades:(_Bool)arg1;

- (unsigned long long)geometryCount;

- (_Bool)heightAtX:(float)arg1 Y:(float)arg2 outZ:(float *)arg3;

- (id)initWithKey:(const struct VKTileKey *)arg1;

@property(readonly, nonatomic) double maxHeight;

@property(nonatomic) float maximumStyleZ; // @synthesize maximumStyleZ=_maximumStyleZ;

@property(retain, nonatomic) GEOVectorTile *modelTile; // @synthesize modelTile=_modelTile;

@property(readonly, nonatomic) NSArray *polygonGroups; // @synthesize polygonGroups=_polygonGroups;

- (void)postprocessRoadGroups;

@property(readonly, nonatomic) NSArray *roadGroups; // @synthesize roadGroups=_roadGroups;

@property(nonatomic) _Bool shouldBlend; // @synthesize shouldBlend=_shouldBlend;

@property(retain, nonatomic) VKStylesheet *stylesheet; // @synthesize stylesheet=_stylesheet;

@property(nonatomic) float textureScale; // @synthesize textureScale=_textureScale;

@property(retain, nonatomic) VKTrafficTile *trafficTile; // @synthesize trafficTile=_trafficTile;

@property(nonatomic) long long vectorType; // @synthesize vectorType=_vectorType;



@end


