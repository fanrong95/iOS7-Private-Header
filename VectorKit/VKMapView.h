/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "CALayer.h"



#import "VKInteractiveMapDelegate.h"



@class CADisplay, GEOMapRegion, NSArray, NSString, VKAnimation, VKClassicGlobeCanvas, VKLabelMarker, VKMapCanvas, VKPolylineOverlayPainter;



@interface VKMapView : CALayer <VKInteractiveMapDelegate>

{

    long long _mapType;

    VKMapCanvas *_canvas;

    VKClassicGlobeCanvas *_globe;

    id <VKMapViewDelegate> _mapDelegate;

    _Bool _loaderOpen;

    NSString *_tileLoaderClientID;

    long long _mapDisplayStyle;

    VKAnimation *_mapDisplayStyleAnimation;

    VKAnimation *_edgeInsetAnimation;

    _Bool _isChangingMapType;

}



+ (id)installedStylesheetNames;

- (void)_createGlobe;

- (void)_initializeGlobe;

- (void)_setStyleTransitionProgress:(double)arg1 targetStyle:(long long)arg2 step:(long long)arg3;

- (double)_styleTransitionProgress;

- (void)addAnnotationMarker:(id)arg1 allowAnimation:(_Bool)arg2;

- (void)addExternalAnchor:(id)arg1;

- (void)addOverlay:(id)arg1;

- (void)addPersistentOverlay:(id)arg1;

- (void)addRasterOverlay:(id)arg1;

@property(nonatomic) _Bool allowDatelineWraparound;

@property(readonly, nonatomic) double altitude;

@property(retain, nonatomic) NSArray *alwaysVisibleTrafficIncidents;

- (void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(id)arg5;

- (id)annotationCoordinateTest;

- (id)annotationMarkerForSelectionAtPoint:(struct CGPoint)arg1 avoidCurrent:(_Bool)arg2;

@property(readonly, nonatomic) NSArray *annotationMarkers;

- (id)annotationRectTest;

@property(nonatomic) long long annotationTrackingZoomStyle;

- (id)attributionsForCurrentRegion;

- (_Bool)buildingFootprintsDisabled;

@property(readonly, nonatomic) _Bool canEnter3DMode;

@property(readonly, nonatomic) _Bool canShowAnimationForPlaceCard;

- (_Bool)canShowAnimationForSearchResultWithMapRegion:(id)arg1;

@property(readonly, nonatomic) _Bool canShowFlyover;

@property(nonatomic) CDStruct_071ac149 centerCoordinate;

- (void)clearScene;

- (void)closeLoaderConnection;

- (id)consoleString:(_Bool)arg1;

- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toCameraModelPointToLayer:(id)arg2;

- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;

- (struct CGPoint)convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;

- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromLayer:(id)arg2;

- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toMapPointFromLayer:(id)arg2;

- (id)currentCanvas;

- (double)currentZoomLevel;

- (_Bool)currentZoomLevelAllowsRotation;

- (void)dealloc;

@property(nonatomic) _Bool debugDrawContinuously;

@property(nonatomic) _Bool debugEnableMultisampling;

@property(readonly, nonatomic) float debugFramesPerSecond;

- (void)debugHighlightLabelAtPoint:(struct CGPoint)arg1;

@property(nonatomic) _Bool debugLayoutContinuously;

@property(nonatomic) _Bool debugPaintFrameRateGraph;

- (void)debugRunPerformanceTestWithOutputHeader:(id)arg1;

- (void)debugShowTourJump:(_Bool)arg1;

- (void)deselectAnnotationMarker:(id)arg1;

- (void)deselectLabelMarker;

- (id)detailedDescription;

- (void)didEnterBackground;

- (void)didStartPanningDeceleration;

@property(nonatomic) long long displayRate;

- (double)durationToAnimateToMapRegion:(id)arg1;

@property(nonatomic) _Bool dynamicMapModesEnabled;

@property(nonatomic) struct VKEdgeInsets edgeInsets;

@property(readonly, nonatomic) _Bool enableDebugLabelHighlighting;

- (void)enter3DMode;

- (void)exit3DMode;

@property(retain, nonatomic) VKPolylineOverlayPainter *focusedLabelsPolylinePainter;

- (void)forceLayout;

- (void)forceSceneLoad;

@property(nonatomic) struct VKEdgeInsets fullyOccludedEdgeInsets;

- (void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4;

- (_Bool)gridDisabled;

@property(retain, nonatomic) CADisplay *hostDisplay;

@property(nonatomic) _Bool iconsShouldAlignToPixels;

- (id)initWithGlobe:(_Bool)arg1 shouldRasterize:(_Bool)arg2 inBackground:(_Bool)arg3;

- (void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2;

- (void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2;

@property(readonly, nonatomic, getter=isAnimatingToTrackAnnotation) _Bool animatingToTrackAnnotation;

@property(readonly, nonatomic, getter=isFullyDrawn) _Bool fullyDrawn;

@property(readonly, nonatomic, getter=isFullyPitched) _Bool fullyPitched;

@property(nonatomic, getter=isGesturing) _Bool gesturing;

@property(nonatomic, getter=isLabelMarkerSelectionEnabled) _Bool labelMarkerSelectionEnabled;

@property(readonly, nonatomic) _Bool isMotionControlActive;

@property(nonatomic) _Bool isPitchable;

@property(readonly, nonatomic, getter=isPitched) _Bool pitched;

- (_Bool)isPointValidForGesturing:(struct CGPoint)arg1;

@property(readonly, nonatomic, getter=isShowingFlyover) _Bool showingFlyover;

- (_Bool)isShowingNoDataPlaceholders;

@property(nonatomic) struct VKEdgeInsets labelEdgeInsets;

- (id)labelMarkerForSelectionAtPoint:(struct CGPoint)arg1 selectableLabelsOnly:(_Bool)arg2;

@property(readonly, nonatomic) NSArray *labelMarkers;

@property(nonatomic) long long labelScaleFactor;

- (_Bool)labelsDisabled;

@property(nonatomic) _Bool localizeLabels;

- (void)map:(id)arg1 canEnter3DModeDidChange:(_Bool)arg2;

- (void)map:(id)arg1 canShowFlyoverDidChange:(_Bool)arg2;

- (void)map:(id)arg1 didAddAnnotationMarkers:(id)arg2;

- (void)map:(id)arg1 didAnimateInAnnotationMarkers:(id)arg2;

- (void)map:(id)arg1 didBecomePitched:(_Bool)arg2;

- (void)map:(id)arg1 didFinishAddingAnnotationMarkers:(id)arg2;

- (id)map:(id)arg1 painterForOverlay:(id)arg2;

- (id)map:(id)arg1 presentationForAnnotation:(id)arg2;

- (void)map:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;

- (void)map:(id)arg1 willAnimateInAnnotationMarkers:(id)arg2;

- (void)map:(id)arg1 willTransitionFrom:(long long)arg2 to:(long long)arg3 duration:(double)arg4;

@property(nonatomic) id <VKMapViewDelegate> mapDelegate; // @synthesize mapDelegate=_mapDelegate;

- (void)mapDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(_Bool)arg2;

- (void)mapDidBecomePartiallyDrawn:(id)arg1;

- (void)mapDidChangeVisibleRegion:(id)arg1;

- (void)mapDidDraw:(id)arg1;

- (void)mapDidFailLoadingTiles:(id)arg1 withError:(id)arg2;

- (void)mapDidFinishChangingMapDisplayStyle:(long long)arg1;

- (void)mapDidFinishLoadingTiles:(id)arg1;

- (void)mapDidStartLoadingTiles:(id)arg1;

- (void)mapDidStopRegionAnimation:(id)arg1 completed:(_Bool)arg2;

@property(nonatomic) long long mapDisplayStyle;

@property(retain, nonatomic) GEOMapRegion *mapRegion;

- (struct CGRect)mapRegionBounds;

@property(readonly, nonatomic) GEOMapRegion *mapRegionOfInterest;

@property(nonatomic) long long mapType;

- (void)mapWillStartRegionAnimation:(id)arg1;

@property(readonly, nonatomic) double maximumZoomLevel;

@property(readonly, nonatomic) double minimumZoomLevel;

@property(nonatomic) long long navigationShieldSize;

- (void)openLoaderConnection;

- (void)panWithOffset:(struct CGPoint)arg1 relativeToScreenPoint:(struct CGPoint)arg2 animated:(_Bool)arg3 duration:(double)arg4 completionHandler:(id)arg5;

@property(readonly, nonatomic) double pitch;

- (_Bool)polygonsDisabled;

- (void)preloadNavigationSceneAnimationResourcesForDisplayStyle:(long long)arg1;

- (void)preloadNavigationSceneResources;

- (void)preparePlaceCardAnimationForLocation:(CDStruct_c3b9c2ee)arg1 completion:(id)arg2;

@property(readonly, nonatomic) double presentationYaw;

- (void)puckAnimator:(id)arg1 updatedPosition:(CDStruct_b926a728 *)arg2;

- (void)puckAnimator:(id)arg1 updatedTargetPosition:(struct VKPoint)arg2;

- (void)puckAnimatorDidStop:(id)arg1;

- (_Bool)rastersDisabled;

- (_Bool)realisticLandDisabled;

- (_Bool)realisticRoadsDisabled;

- (void)removeAnnotationMarker:(id)arg1;

- (void)removeExternalAnchor:(id)arg1;

- (void)removeOverlay:(id)arg1;

- (void)removePersistentOverlay:(id)arg1;

- (void)removeRasterOverlay:(id)arg1;

@property(nonatomic) _Bool rendersInBackground;

- (void)resetContext;

- (_Bool)restoreViewportFromInfo:(id)arg1;

- (_Bool)roadClassDisabled:(int)arg1;

- (_Bool)roadsDisabled;

@property(retain, nonatomic) id <VKRoutePreloadSession> routePreloadSession;

- (void)runAnimation:(id)arg1;

- (id)secondaryCanvas;

- (void)selectAnnotationMarker:(id)arg1;

- (void)selectLabelMarker:(id)arg1;

@property(readonly, nonatomic) VKLabelMarker *selectedLabelMarker;

- (void)setAnnotationMarkerDeselectionCallback:(id)arg1;

- (void)setBounds:(struct CGRect)arg1;

- (void)setCanonicalSkyHeight:(double)arg1;

- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(id)arg6 completion:(void)arg7;

- (void)setCenterCoordinate:(CDStruct_071ac149)arg1 animated:(_Bool)arg2;

- (void)setContentsScale:(double)arg1;

- (void)setCurrentLocationText:(id)arg1;

- (void)setDesiredMapMode:(long long)arg1 immediate:(_Bool)arg2;

- (void)setDisableBuildingFootprints:(_Bool)arg1;

- (void)setDisableGrid:(_Bool)arg1;

- (void)setDisableLabels:(_Bool)arg1;

- (void)setDisablePolygons:(_Bool)arg1;

- (void)setDisableRasters:(_Bool)arg1;

- (void)setDisableRealisticLand:(_Bool)arg1;

- (void)setDisableRealisticRoads:(_Bool)arg1;

- (void)setDisableRoadClass:(_Bool)arg1 forRoadClass:(int)arg2;

- (void)setDisableRoads:(_Bool)arg1;

- (void)setEdgeInsets:(struct VKEdgeInsets)arg1 duration:(double)arg2 timingFunction:(id)arg3;

- (void)setEnabledBlackRoadLines:(_Bool)arg1;

- (void)setHidden:(_Bool)arg1;

- (void)setMapDisplayStyle:(long long)arg1 animated:(_Bool)arg2;

- (void)setMapRegion:(id)arg1 animated:(_Bool)arg2;

- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(_Bool)arg4;

- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(_Bool)arg4 completion:(id)arg5;

- (void)setNeedsDisplay;

- (void)setNeedsLayout;

- (void)setPuckHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3;

- (void)setRouteLineSplitAnnotation:(id)arg1;

- (void)setRouteUserOffset:(struct PolylineCoordinate)arg1;

@property(nonatomic) long long shieldIdiom;

@property(nonatomic) long long shieldSize;

- (void)setShouldLimitTrackingCameraHeight:(_Bool)arg1;

@property(nonatomic) _Bool shouldLoadFallbackTiles;

@property(nonatomic) _Bool shouldLoadMapMargin;

@property(nonatomic) _Bool showsBuildings;

@property(nonatomic) _Bool showsPointsOfInterest;

@property(nonatomic) _Bool staysCenteredDuringPinch;

@property(nonatomic) _Bool staysCenteredDuringRotation;

- (void)setStylesheet:(id)arg1;

- (void)setStylesheetName:(id)arg1;

- (void)setTargetDisplay:(long long)arg1;

- (void)setTracePlaybackSpeedMultiplier:(double)arg1;

@property(nonatomic) int trackingCameraPanStyle;

@property(nonatomic) double trackingZoomScale;

@property(nonatomic) _Bool trafficEnabled;

@property(nonatomic) double userZoomFocusStyleGroundspanMeters;

@property(nonatomic) double userZoomFocusStyleMaxGroundspanMeters;

@property(nonatomic) double userZoomFocusStyleMinGroundspanMeters;

- (void)setYaw:(double)arg1 animated:(_Bool)arg2;

- (_Bool)shouldHideOffscreenSelectedAnnotation;

- (void)showSearchResultAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 withMapRegion:(id)arg2;

- (void)startMotionControlWithProvider:(id)arg1;

- (void)startPanningAtPoint:(struct CGPoint)arg1;

- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;

- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;

- (void)startPlaceCardAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 andDistance:(double)arg2;

- (void)startRotatingWithFocusPoint:(struct CGPoint)arg1;

- (void)startTrackingAnnotation:(id)arg1 trackHeading:(_Bool)arg2 animated:(_Bool)arg3;

- (void)stopMotionControl;

- (void)stopPanningAtPoint:(struct CGPoint)arg1;

- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;

- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;

- (void)stopPlaceCardAnimation;

- (void)stopRotatingWithFocusPoint:(struct CGPoint)arg1;

- (void)stopScenicAnimation;

- (void)stopSnappingAnimations;

- (void)stopTracking;

- (void)stopTrackingAnnotation;

- (id)stylesheet;

- (id)stylesheetName;

- (_Bool)supportsMapType:(long long)arg1;

- (void)transitionToTracking:(_Bool)arg1 mapMode:(long long)arg2 pounceCompletionHandler:(id)arg3;

- (void)updateCameraContext:(id)arg1;

- (void)updatePanWithTranslation:(struct CGPoint)arg1;

- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;

- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;

- (void)updateRotationWithFocusPoint:(struct CGPoint)arg1 newValue:(double)arg2;

- (id)viewportInfo;

@property(readonly, nonatomic) NSArray *visibleTileSets;

- (void)willEnterForeground;

@property(readonly, nonatomic) double yaw;

- (void)zoom:(double)arg1 withFocusPoint:(struct CGPoint)arg2 completionHandler:(id)arg3;

- (void)zoomToLevel:(double)arg1 withFocusPoint:(struct CGPoint)arg2;



@end


