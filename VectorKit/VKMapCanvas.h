/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "VKScreenCanvas.h"


#import "VKInteractiveMap.h"

#import "VKMapModelDelegate.h"



@class GEOMapRegion, NSArray, VKAnchorWrapper, VKCamera, VKMapCameraController, VKMapModel, VKPolylineOverlayPainter, VKStylesheet;



__attribute__((visibility("hidden")))

@interface VKMapCanvas : VKScreenCanvas <VKMapModelDelegate, VKInteractiveMap>

{

    VKMapModel *_map;

    VKMapCameraController *_cameraController;

    id <VKInteractiveMapDelegate> _delegate;

    struct CGSize _lastCanvasSize;

    VKCamera *_defaultTrackingCamera;

    float _lastValidCanvasSizeZoomLevel;

    _Bool _hasLastValidCanvasSizeZoomLevel;

}



+ (_Bool)supportsMapType:(long long)arg1;

- (id).cxx_construct;

- (struct CGPoint)_centerScreenPoint;

- (void)_setStyleTransitionProgress:(double)arg1 targetStyle:(long long)arg2 step:(long long)arg3;

- (double)_styleTransitionProgress;

- (void)_updateViewTransform;

- (void)addAnnotationMarker:(id)arg1 allowAnimation:(_Bool)arg2;

- (void)addExternalAnchor:(id)arg1;

- (void)addOverlay:(id)arg1;

- (void)addPersistentOverlay:(id)arg1;

- (void)addRasterOverlay:(id)arg1;

@property(nonatomic) _Bool allowDatelineWraparound;

@property(readonly, nonatomic) double altitude;

@property(retain, nonatomic) NSArray *alwaysVisibleTrafficIncidents;

- (void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(id)arg5;

- (id)annotationCoordinateTest;

- (id)annotationMarkerDeselectionCallback;

- (id)annotationMarkerForSelectionAtPoint:(struct CGPoint)arg1 avoidCurrent:(_Bool)arg2;

- (id)annotationMarkers;

- (id)annotationRectTest;

@property(nonatomic) long long annotationTrackingZoomStyle;

- (id)attributionsForCurrentRegion;

- (void)cameraController:(id)arg1 canEnter3DModeDidChange:(_Bool)arg2;

- (void)cameraController:(id)arg1 didBecomePitched:(_Bool)arg2;

- (void)cameraController:(id)arg1 pouncingToCameraPosition:(struct VKPoint)arg2 orientation:(const CDStruct_aa5aacbc *)arg3;

- (id)cameraController:(id)arg1 presentationForAnnotation:(id)arg2;

- (void)cameraControllerDidChangeCameraState:(id)arg1;

- (void)cameraControllerDidStopRegionAnimation:(id)arg1 completed:(_Bool)arg2;

- (void)cameraControllerWillStartRegionAnimation:(id)arg1;

- (_Bool)canEnter3DMode;

@property(nonatomic) CDStruct_071ac149 centerCoordinate;

- (void)clearScene;

- (id)consoleString:(_Bool)arg1;

- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toCameraModelPointToLayer:(id)arg2;

- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;

- (struct CGPoint)convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToLayer:(id)arg2;

- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromLayer:(id)arg2;

- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toMapPointFromLayer:(id)arg2;

- (_Bool)currentSceneRequiresMSAA;

- (double)currentZoomLevel;

- (_Bool)currentZoomLevelAllowsRotation;

- (void)dealloc;

- (void)debugHighlightLabelAtPoint:(struct CGPoint)arg1;

@property(retain, nonatomic) VKCamera *defaultTrackingCamera; // @synthesize defaultTrackingCamera=_defaultTrackingCamera;

@property(nonatomic) id <VKInteractiveMapDelegate> delegate; // @synthesize delegate=_delegate;

- (void)deselectAnnotationMarker:(id)arg1;

- (void)deselectLabelMarker;

- (id)detailedDescription;

- (void)didPresent;

- (void)didReceiveMemoryWarning;

- (void)didStartPanningDeceleration;

- (void)drawWithTimestamp:(double)arg1;

- (double)durationToAnimateToMapRegion:(id)arg1;

@property(nonatomic) _Bool dynamicMapModesEnabled;

- (struct VKEdgeInsets)edgeInsets;

- (void)edgeInsetsDidEndAnimating;

- (void)edgeInsetsWillBeginAnimating;

- (void)enter3DMode;

- (void)exit3DMode;

@property(readonly, nonatomic) VKAnchorWrapper *externalAnchors;

@property(retain, nonatomic) VKPolylineOverlayPainter *focusedLabelsPolylinePainter;

- (void)forceSceneLoad;

- (void)goToTileX:(int)arg1 Y:(int)arg2 Z:(int)arg3 tileSize:(int)arg4;

- (id)initShouldRasterize:(_Bool)arg1 contentScale:(double)arg2 inBackground:(_Bool)arg3;

- (void)insertRasterOverlay:(id)arg1 aboveOverlay:(id)arg2;

- (void)insertRasterOverlay:(id)arg1 belowOverlay:(id)arg2;

@property(readonly, nonatomic, getter=isAnimatingToTrackAnnotation) _Bool animatingToTrackAnnotation;

@property(readonly, nonatomic, getter=isFullyDrawn) _Bool fullyDrawn;

@property(readonly, nonatomic, getter=isFullyPitched) _Bool fullyPitched;

@property(nonatomic) _Bool isPitchable;

@property(readonly, nonatomic, getter=isPitched) _Bool pitched;

- (_Bool)isPointValidForGesturing:(struct CGPoint)arg1;

- (_Bool)isShowingNoDataPlaceholders;

@property(readonly, nonatomic, getter=isTrackingHeading) _Bool trackingHeading;

- (id)labelMarkerForSelectionAtPoint:(struct CGPoint)arg1 selectableLabelsOnly:(_Bool)arg2;

@property(nonatomic) _Bool labelMarkerSelectionEnabled;

- (id)labelMarkers;

@property(nonatomic) long long labelScaleFactor;

@property(nonatomic) _Bool localizeLabels;

@property(readonly, nonatomic) VKMapModel *map; // @synthesize map=_map;

- (void)mapModel:(id)arg1 didAnimateInAnnotationMarkers:(id)arg2;

- (void)mapModel:(id)arg1 didFinishAddingAnnotationMarkers:(id)arg2;

- (void)mapModel:(id)arg1 needsPanByOffset:(struct CGPoint)arg2 relativeToScreenPoint:(struct CGPoint)arg3 animated:(_Bool)arg4 duration:(double)arg5 completionHandler:(id)arg6;

- (id)mapModel:(id)arg1 painterForOverlay:(id)arg2;

- (void)mapModel:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;

- (void)mapModel:(id)arg1 willAnimateInAnnotationMarkers:(id)arg2;

- (void)mapModel:(id)arg1 willTransitionFrom:(long long)arg2 to:(long long)arg3 duration:(double)arg4;

- (void)mapModelDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(_Bool)arg2;

- (void)mapModelDidBecomePartiallyDrawn:(id)arg1;

- (void)mapModelDidFailLoadingTiles:(id)arg1 withError:(id)arg2;

- (void)mapModelDidFinishLoadingTiles:(id)arg1;

- (void)mapModelDidStartLoadingTiles:(id)arg1;

- (_Bool)mapModelInNav:(id)arg1;

- (_Bool)mapModelInNavAtDefaultZoom:(id)arg1;

- (void)mapModelWillBecomFullyDrawn:(id)arg1;

- (double)mapModelZoomScale:(id)arg1;

@property(retain, nonatomic) GEOMapRegion *mapRegion;

@property(readonly, nonatomic) GEOMapRegion *mapRegionOfInterest;

@property(nonatomic) long long mapType;

@property(readonly, nonatomic) double maximumZoomLevel;

@property(readonly, nonatomic) double minimumZoomLevel;

- (id)navTileSource;

@property(nonatomic) long long navigationShieldSize;

- (id)overlays;

- (void)panWithOffset:(struct CGPoint)arg1 relativeToScreenPoint:(struct CGPoint)arg2 animated:(_Bool)arg3 duration:(double)arg4 completionHandler:(id)arg5;

- (id)persistentOverlays;

@property(readonly, nonatomic) double pitch;

- (void)preloadNavigationSceneAnimationResourcesForDisplayStyle:(long long)arg1;

- (void)preloadNavigationSceneResources;

@property(readonly, nonatomic) double presentationYaw;

- (void)puckAnimator:(id)arg1 updatedPosition:(CDStruct_b926a728 *)arg2;

- (void)puckAnimator:(id)arg1 updatedTargetPosition:(struct VKPoint)arg2;

- (void)puckAnimatorDidStop:(id)arg1;

- (void)removeAnnotationMarker:(id)arg1;

- (void)removeExternalAnchor:(id)arg1;

- (void)removeOverlay:(id)arg1;

- (void)removePersistentOverlay:(id)arg1;

- (void)removeRasterOverlay:(id)arg1;

- (void)requestStylesheetAnimation:(id)arg1 targetMapDisplayStyle:(long long)arg2 setupHandler:(id)arg3;

- (void)resetTileContainers;

- (_Bool)restoreViewportFromInfo:(id)arg1;

@property(nonatomic) id <VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation;

@property(retain, nonatomic) id <VKRoutePreloadSession> routePreloadSession;

- (struct VKPoint)screenPointForPoint:(struct CGPoint)arg1;

- (void)selectAnnotationMarker:(id)arg1;

- (void)selectLabelMarker:(id)arg1;

- (id)selectedAnnotationMarker;

- (id)selectedLabelMarker;

- (void)setAnnotationMarkerDeselectionCallback:(id)arg1;

- (void)setBounds:(struct CGRect)arg1;

- (void)setCanonicalSkyHeight:(double)arg1;

- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 timingCurve:(id)arg6 completion:(void)arg7;

- (void)setCenterCoordinate:(CDStruct_071ac149)arg1 animated:(_Bool)arg2;

- (void)setContentsScale:(double)arg1;

- (void)setCurrentLocationText:(id)arg1;

- (void)setDesiredMapMode:(long long)arg1 immediate:(_Bool)arg2;

- (void)setEdgeInsets:(struct VKEdgeInsets)arg1;

- (void)setHidden:(_Bool)arg1;

- (void)setMapRegion:(id)arg1 animated:(_Bool)arg2;

- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(_Bool)arg4;

- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(_Bool)arg4 completion:(id)arg5;

- (void)setPuckHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3;

- (void)setRouteUserOffset:(struct PolylineCoordinate)arg1;

@property(nonatomic) long long shieldIdiom;

@property(nonatomic) long long shieldSize;

- (void)setShouldLimitTrackingCameraHeight:(_Bool)arg1;

@property(nonatomic) _Bool shouldLoadFallbackTiles;

@property(nonatomic) _Bool shouldLoadMapMargin;

@property(nonatomic) _Bool showsBuildings;

@property(nonatomic) _Bool showsPointsOfInterest;

@property(nonatomic) _Bool staysCenteredDuringPinch;

@property(nonatomic) _Bool staysCenteredDuringRotation;

@property(retain, nonatomic) VKStylesheet *stylesheet;

- (void)setStylesheetName:(id)arg1;

- (void)setTargetDisplay:(long long)arg1;

- (void)setTracePlaybackSpeedMultiplier:(double)arg1;

@property(nonatomic) int trackingCameraPanStyle;

@property(nonatomic) double trackingZoomScale;

@property(nonatomic) _Bool trafficEnabled;

@property(nonatomic) double userZoomFocusStyleGroundspanMeters;

@property(nonatomic) double userZoomFocusStyleMaxGroundspanMeters;

@property(nonatomic) double userZoomFocusStyleMinGroundspanMeters;

- (void)setYaw:(double)arg1 animated:(_Bool)arg2;

- (_Bool)shouldHideOffscreenSelectedAnnotation;

- (void)startPanningAtPoint:(struct CGPoint)arg1;

- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;

- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;

- (void)startRotatingWithFocusPoint:(struct CGPoint)arg1;

- (void)startTrackingAnnotation:(id)arg1 trackHeading:(_Bool)arg2 animated:(_Bool)arg3;

- (void)stopPanningAtPoint:(struct CGPoint)arg1;

- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;

- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;

- (void)stopRegionAnimation;

- (void)stopRotatingWithFocusPoint:(struct CGPoint)arg1;

- (void)stopSnappingAnimations;

- (void)stopTracking;

- (void)stopTrackingAnnotation;

- (void)stylesheetAnimationDidEnd:(_Bool)arg1;

- (void)stylesheetAnimationDidProgress:(float)arg1;

- (void)stylesheetAnimationWillStartFromStyle:(long long)arg1 toStyle:(long long)arg2;

- (long long)targetDisplay;

@property(readonly, nonatomic) id <VKTrackableAnnotation> trackingAnnotation;

- (void)transferCamera:(id)arg1;

- (void)transitionToTracking:(_Bool)arg1 mapMode:(long long)arg2 pounceCompletionHandler:(id)arg3;

- (void)updateCameraContext:(id)arg1;

- (void)updateCameraForFrameResize;

- (void)updatePanWithTranslation:(struct CGPoint)arg1;

- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;

- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;

- (void)updateRotationWithFocusPoint:(struct CGPoint)arg1 newValue:(double)arg2;

- (id)viewportInfo;

@property(readonly, nonatomic) NSArray *visibleTileSets;

@property(readonly, nonatomic) double yaw;

- (void)zoom:(double)arg1 withFocusPoint:(struct CGPoint)arg2 completionHandler:(id)arg3;

- (void)zoomToLevel:(double)arg1 withFocusPoint:(struct CGPoint)arg2;



@end


