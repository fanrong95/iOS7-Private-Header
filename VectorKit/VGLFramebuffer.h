/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class VGLContext, VGLScreenCanvas, VGLTexture;



__attribute__((visibility("hidden")))

@interface VGLFramebuffer : NSObject

{

    VGLContext *_context;

    VGLScreenCanvas *_canvas;

    unsigned int _framebuffer;

    unsigned int _renderbuffer;

    unsigned int _depthbuffer;

    unsigned int _multisampleFramebuffer;

    unsigned int _multisampleRenderbuffer;

    unsigned int _multisampleDepthbuffer;

    int _width;

    int _height;

    _Bool _createdWithDepth;

    _Bool _createdWithStencil;

    _Bool _isPresentable;

    _Bool _multisampleModeCurrent;

    _Bool _multisampleModeNext;

    VGLTexture *_texture;

    _Bool _usingMagicFramebuffer;

    int _magicFramebufferToken;

}



- (void)_bindFramebuffers;

- (_Bool)_createMultisampleFramebufferWithDepth:(_Bool)arg1 stencil:(_Bool)arg2;

- (_Bool)_createResolveFramebuffer;

- (_Bool)_createSecondaryFramebufferWithDepth:(_Bool)arg1 stencil:(_Bool)arg2;

- (void)_deallocMultisampleFramebuffer;

- (void)_deallocResolveFramebuffer;

- (void)_deallocSecondaryFramebuffer;

@property(nonatomic) VGLScreenCanvas *canvas; // @synthesize canvas=_canvas;

@property(nonatomic) VGLContext *context; // @synthesize context=_context;

- (void)dealloc;

- (void)deleteFramebuffers;

- (void)deleteResolveFramebuffers;

- (void)deleteUnusedFramebuffers;

- (void)finalize;

@property(readonly, nonatomic) unsigned int framebuffer; // @synthesize framebuffer=_framebuffer;

@property(readonly, nonatomic) int height; // @synthesize height=_height;

- (id)initWithContext:(id)arg1 canvas:(id)arg2;

- (id)initWithContext:(id)arg1 canvas:(id)arg2 depth:(_Bool)arg3 stencil:(_Bool)arg4 multisampling:(_Bool)arg5;

- (id)initWithContext:(id)arg1 texture:(id)arg2 depth:(_Bool)arg3 stencil:(_Bool)arg4;

@property(readonly, nonatomic) _Bool isPresentable; // @synthesize isPresentable=_isPresentable;

- (void)makeTarget;

- (void)preloadMultisampleFramebuffer;

@property(nonatomic) _Bool useMultisampling;

@property(readonly, nonatomic) int width; // @synthesize width=_width;



@end


