/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "VKCameraController.h"


@class VKAnimation, VKCameraContext, VKMapModel;



__attribute__((visibility("hidden")))

@interface VKTrackingCameraController : VKCameraController

{

    id <VKTrackingCameraControllerDelegate> _trackingDelegate;

    int _viewStyle;

    int _focusStyle;

    VKAnimation *_animation;

    double _verticalGroundspan;

    double _verticalGroundspanScale;

    struct VKPoint _farthestPoi;

    CDStruct_b926a728 _puckPosition;

    struct VKPoint _puckTargetPosition;

    double _startZoomScale;

    double _endZoomScale;

    double _zoomScale;

    double _startPinchScale;

    VKMapModel *_mapModel;

    double _startTime;

    _Bool _animatingIn;

    double _startPitch;

    double _startCourse;

    double _startDistance;

    struct VKPoint _startPuckScreenPosition;

    id _completionHandler;

    double _puckOffset;

    struct VKPoint _previousReference;

    double _previousCourse;

    double _previousOffset;

    struct VKCircularBuffer<double> *_rotationRateBuffer;

    double _previousStepTime;

    VKAnimation *_tapZoomAnimation;

    double _tracePlaybackSpeedMultiplier;

    _Bool _receivedFirstUpdate;

    _Bool _puckAnimatorRunning;

    double _cruisePhi;

    double _cruiseHeight;

    double _cruisePhiOverride;

    double _cruiseHeightOverride;

    VKCameraContext *_lastCameraContext;

    _Bool _shouldLimitTopDownHeight;

    struct VKEdgeInsets _insets;

    _Bool _insetsAnimating;

    double _puckOffsetDelta;

    struct VKNavigationCameraModel _cameraModel;

    int _panStyle;

    struct State {

        State_3e0671f0 modelState;

        struct VKPoint puckPosition;

    } _panStartCameraState;

    Vec3Imp_f658403c _panCameraOffset;

    CDStruct_aa5aacbc _panCameraOrientation;

    struct {

        double x;

        double y;

        double z;

        double w;

    } _panCameraOrientationQuaternion;

    double _panReturnStartTime;

    struct CGPoint _startPanPoint;

    double _panCourseOffset;

    double _panPitchOffset;

    VKAnimation *_panAnimation;

    _Bool _panning;

    double _pitchOffset;

    VKAnimation *_pitchAnimation;

    _Bool _pitching;

    _Bool _zooming;

    double _userZoomFocusStyleZoomScale;

    double _userZoomFocusStyleMinZoomScale;

    double _userZoomFocusStyleMaxZoomScale;

    VKAnimation *_zoomScaleAnimation;

    VKAnimation *_horizontalOffsetAnimation;

    double _horizontalOffset;

}



- (id).cxx_construct;

- (void)_resumeAnimationIfNecessary;

- (void)_startTapZoomAnimationFrom:(double)arg1 to:(double)arg2 completionHandler:(id)arg3;

- (void)_step;

- (void)_updateCameraForStartAnimation:(double)arg1 position:(struct VKPoint)arg2 orientation:(const CDStruct_aa5aacbc *)arg3;

- (void)_updateCruiseHeightAndPhi;

- (void)_updateVerticalGroundspanForCameraContext:(id)arg1 reference:(struct VKPoint)arg2 focus:(struct VKPoint)arg3 offset:(double)arg4;

- (void)canvasFrameDidChange;

- (void)dealloc;

- (id)detailedDescription;

- (void)edgeInsetsDidEndAnimating;

- (void)edgeInsetsWillBeginAnimating;

- (id)init;

- (_Bool)isAtDefaultZoomScale;

- (_Bool)isGesturing;

@property(retain, nonatomic) VKMapModel *mapModel; // @synthesize mapModel=_mapModel;

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

- (void)pan:(struct CGPoint)arg1 worldDelta:(const Vec3Imp_f658403c *)arg2;

@property(nonatomic) int panStyle; // @synthesize panStyle=_panStyle;

- (void)pauseIfNeeded;

- (void)puckAnimator:(id)arg1 updatedPosition:(CDStruct_b926a728 *)arg2;

- (void)puckAnimator:(id)arg1 updatedTargetPosition:(struct VKPoint)arg2;

- (void)puckAnimatorDidStop:(id)arg1;

- (double)relevantZoomScale;

- (void)resumeIfNeeded;

- (void)setEdgeInsets:(struct VKEdgeInsets)arg1;

- (void)setGesturing:(_Bool)arg1;

- (void)setPuckHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3;

- (void)setRelevantZoomScale:(double)arg1;

@property(nonatomic) _Bool shouldLimitTopDownHeight; // @synthesize shouldLimitTopDownHeight=_shouldLimitTopDownHeight;

@property(nonatomic) double tracePlaybackSpeedMultiplier; // @synthesize tracePlaybackSpeedMultiplier=_tracePlaybackSpeedMultiplier;

@property(nonatomic) id <VKTrackingCameraControllerDelegate> trackingDelegate; // @synthesize trackingDelegate=_trackingDelegate;

@property(nonatomic) double userZoomFocusStyleGroundspanMeters;

@property(nonatomic) double userZoomFocusStyleMaxGroundspanMeters;

@property(nonatomic) double userZoomFocusStyleMinGroundspanMeters;

- (void)setUserZoomFocusStyleZoomScale:(double)arg1;

@property(nonatomic) double verticalGroundspanScale; // @synthesize verticalGroundspanScale=_verticalGroundspanScale;

@property(nonatomic) double zoomScale;

- (void)startPanning:(struct CGPoint)arg1;

- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;

- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;

- (void)startWithPounce:(_Bool)arg1 pounceCompletionHandler:(id)arg2;

- (void)stop;

- (void)stopPanning:(struct CGPoint)arg1;

- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;

- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;

- (void)updateCameraContext:(id)arg1;

- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;

- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;

- (void)zoom:(double)arg1 relativeToPoint:(struct CGPoint)arg2 completionHandler:(id)arg3;



@end


