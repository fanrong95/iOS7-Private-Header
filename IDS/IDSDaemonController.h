/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "IDSDaemonProtocol.h"



@class IDSDaemonListener, IMLocalObject, IMRemoteObject<IDSDaemonProtocol>, NSLock, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSProtocolChecker, NSSet, NSString;



@interface IDSDaemonController : NSObject <IDSDaemonProtocol>

{

    id _delegate;

    IMRemoteObject<IDSDaemonProtocol> *_remoteObject;

    IMLocalObject *_localObject;

    IDSDaemonListener *_daemonListener;

    NSProtocolChecker *_protocol;

    NSString *_listenerID;

    NSMutableDictionary *_listenerServices;

    NSSet *_services;

    NSSet *_cachedServices;

    NSObject<OS_dispatch_queue> *_servicesLockQueue;

    NSMutableDictionary *_listenerCommands;

    NSSet *_commands;

    NSSet *_cachedCommands;

    NSObject<OS_dispatch_queue> *_commandsLockQueue;

    NSMutableDictionary *_listenerCapabilities;

    unsigned int _cachedCapabilities;

    unsigned int _lastUpdateCaps;

    NSObject<OS_dispatch_queue> *_capLockQueue;

    NSLock *_connectionLock;

    NSObject<OS_dispatch_queue> *_listenerLockQueue;

    NSObject<OS_dispatch_queue> *_remoteDaemonLockQueue;

    NSObject<OS_dispatch_queue> *_remoteMessageQueue;

    NSObject<OS_dispatch_queue> *_localObjectLockQueue;

    struct __CFRunLoopSource *_runLoopSource;

    _Bool _hasCheckedForDaemon;

    _Bool _preventReconnect;

    _Bool _acquiringDaemonConnection;

    _Bool _autoReconnect;

    _Bool _hasBeenSuspended;

}



+ (_Bool)_applicationWillTerminate;

+ (void)_blockUntilSendQueueIsEmpty;

+ (void)_setApplicationWillTerminate;

+ (id)sharedInstance;

- (_Bool)__isLocalObjectValidOnQueue:(id)arg1;

- (_Bool)__isRemoteObjectValidOnQueue:(id)arg1;

- (_Bool)_acquiringDaemonConnection;

- (void)_agentDidLaunchNotification:(id)arg1;

@property(setter=_setAutoReconnect:) _Bool _autoReconnect; // @synthesize _autoReconnect;

- (void)_blockUntilSendQueueIsEmpty;

- (void)_connectToDaemonWithLaunch:(_Bool)arg1 services:(id)arg2 commands:(id)arg3 capabilities:(unsigned int)arg4;

- (void)_handleDaemonException:(id)arg1;

@property(retain, nonatomic, setter=_setListenerID:) NSString *_listenerID; // @synthesize _listenerID;

- (void)_listenerSetUpdated;

- (void)_localObjectCleanup;

- (_Bool)_makeConnectionWithLaunch:(_Bool)arg1 completionBlock:(id)arg2;

- (void)_noteSetupComplete;

@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *_remoteMessageQueue; // @synthesize _remoteMessageQueue;

- (id)_remoteObject;

- (void)_remoteObjectCleanup;

- (void)_setCapabilities:(unsigned int)arg1;

- (void)_setCommands:(id)arg1;

- (void)_setServices:(id)arg1;

- (_Bool)addListenerID:(id)arg1 services:(id)arg2;

- (_Bool)addListenerID:(id)arg1 services:(id)arg2 commands:(id)arg3;

- (unsigned int)capabilities;

- (unsigned int)capabilitiesForListenerID:(id)arg1;

- (id)commands;

- (id)commandsForListenerID:(id)arg1;

- (_Bool)connectToDaemon;

- (_Bool)connectToDaemonWithLaunch:(_Bool)arg1;

- (_Bool)connectToDaemonWithLaunch:(_Bool)arg1 services:(id)arg2 commands:(id)arg3 capabilities:(unsigned int)arg4;

- (void)dealloc;

@property(nonatomic) id delegate; // @synthesize delegate=_delegate;

- (void)disconnectFromDaemon;

- (void)disconnectFromDaemonWithForce:(_Bool)arg1;

- (void)forwardInvocation:(id)arg1;

- (_Bool)hasListenerForID:(id)arg1;

- (id)init;

- (_Bool)isConnected;

@property(readonly, nonatomic) _Bool isConnecting;

@property(readonly, nonatomic) IDSDaemonListener *listener; // @synthesize listener=_daemonListener;

- (id)localObject;

- (void)localObjectDiedNotification:(id)arg1;

- (_Bool)localObjectExists;

- (id)methodSignatureForSelector:(SEL)arg1;

- (void)remoteObjectDiedNotification:(id)arg1;

- (_Bool)remoteObjectExists;

- (_Bool)removeListenerID:(id)arg1;

- (id)services;

- (id)servicesForListenerID:(id)arg1;

- (_Bool)setCapabilities:(unsigned int)arg1 forListenerID:(id)arg2;

- (_Bool)setCommands:(id)arg1 forListenerID:(id)arg2;

- (_Bool)setServices:(id)arg1 forListenerID:(id)arg2;

- (void)systemApplicationDidEnterBackground;

- (void)systemApplicationDidResume;

- (void)systemApplicationDidSuspend;

- (void)systemApplicationWillEnterForeground;



@end


