/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSData, NSString;



@interface CUIThemeRendition : NSObject

{

    struct _renditionkeytoken stackKey[16];

    struct _renditionkeytoken *key;

    long long type;

    unsigned int subtype;

    unsigned int scale;

    struct {

        unsigned int isHeaderFlaggedFPO:1;

        unsigned int isExcludedFromContrastFilter:1;

        unsigned int reserved:30;

    } renditionFlags;

    long long artworkStatus;

    unsigned long long colorSpaceID;

    NSString *name;

    NSData *srcData;

    long long validLookGradation;

    double opacity;

    int blendMode;

}



+ (id)displayNameForRenditionType:(long long)arg1;

+ (id)filteredCSIDataFromBaseCSIData:(id)arg1;

+ (Class)renditionClassForRenditionType:(long long)arg1;

- (id)_initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;

- (id)_initWithCSIHeader:(const struct _csiheader *)arg1;

- (void)_initializeCompositingOptionsFromCSIData:(const struct _csiheader *)arg1;

- (void)_initializeRenditionKey:(const struct _renditionkeytoken *)arg1;

- (void)_initializeTypeIdentifiersWithLayout:(unsigned short)arg1;

- (long long)artworkStatus;

@property(nonatomic) int blendMode; // @synthesize blendMode;

- (unsigned long long)colorSpaceID;

- (void)dealloc;

- (id)description;

- (id)effectPreset;

- (id)gradient;

- (double)gradientDrawingAngle;

- (unsigned int)gradientStyle;

- (id)imageForSliceIndex:(long long)arg1;

- (id)initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2;

- (id)initWithCSIData:(id)arg1 forKey:(const struct _renditionkeytoken *)arg2 artworkStatus:(long long)arg3;

- (_Bool)isHeaderFlaggedFPO;

- (_Bool)isScaled;

- (_Bool)isTiled;

- (_Bool)isValidForLookGradation:(long long)arg1;

- (const struct _renditionkeytoken *)key;

- (id)maskForSliceIndex:(long long)arg1;

- (id)metrics;

- (id)name;

@property(nonatomic) double opacity; // @synthesize opacity;

- (double)scale;

- (id)sliceInformation;

- (unsigned int)subtype;

- (long long)type;

- (struct CGImage *)unslicedImage;

- (unsigned short)valueForTokenIdentifier:(unsigned short)arg1;



@end


