/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "UIAlertViewDelegate.h"

#import "UIGestureRecognizerDelegate.h"



@class EKCalendarDate, EKDayOccurrenceView, EKEvent, NSTimer, UILongPressGestureRecognizer;



@interface EKEventGestureController : NSObject <UIGestureRecognizerDelegate, UIAlertViewDelegate>

{

    UILongPressGestureRecognizer *_recognizer;

    EKDayOccurrenceView *_draggingView;

    EKEvent *_event;

    int _currentDragType;

    struct CGPoint _firstTouchPoint;

    double _firstTouchTime;

    struct CGPoint _latestTouchPoint;

    struct CGPoint _previousTouchPoint;

    double _previousTouchTime;

    double _previousTouchVelocity;

    struct CGPoint _touchOffset;

    int _touchOffsetDays;

    double _dateAtFirstTouchPoint;

    _Bool _isNewEvent;

    _Bool _isInCancelRegion;

    _Bool _isMultiDayTimedEvent;

    EKCalendarDate *_currentDay;

    _Bool _horizontalDragLocked;

    _Bool _dragLockDisabled;

    NSTimer *_scrollTimer;

    double _timeSinceEnteredPageMargin;

    double _firstContactOfDraggingViewTop;

    _Bool _hasStartedScrolling;

    int _consecutivePageTurnCount;

    _Bool _forcedStart;

    _Bool _needsCommit;

    id _recurrenceSheetCompletionHandler;

    _Bool _usesXDragOffsetInCancelRegion;

    _Bool _usesHorizontalDragLocking;

    _Bool _commitBlocked;

    id <EKEventGestureControllerUntimedDelegate> _untimedDelegate;

    id <EKEventGestureControllerDelegate> _delegate;

}



- (void).cxx_destruct;

- (double)_alignedYOriginForAllDayOccurrence:(id)arg1 atPoint:(struct CGPoint)arg2 floorAtAllDayRegionBottom:(_Bool)arg3;

- (void)_cancel;

- (double)_capOccurrenceViewYOrigin:(double)arg1;

- (void)_commit;

- (void)_commitUntimed;

- (double)_computeHeightForOccurrenceViewOfDuration:(double)arg1;

- (double)_computeHeightForOccurrenceViewOfDuration:(double)arg1 allDay:(_Bool)arg2;

- (struct CGPoint)_computeOriginAtTouchPoint:(struct CGPoint)arg1 forDate:(double)arg2 isAllDay:(_Bool)arg3 allowXOffset:(_Bool)arg4 allowFloorAtRegionBottom:(_Bool)arg5;

- (double)_computeWidthForOccurrenceView;

- (void)_createTemporaryView:(id)arg1;

- (_Bool)_flingOrCancelDraggingViewIfNeeded;

- (void)_installScrollTimer;

- (_Bool)_isPointInCancelRegion:(struct CGPoint)arg1;

- (void)_longPress:(id)arg1;

- (void)_removeScrollTimer;

- (void)_scrollTimerFired:(id)arg1;

- (void)_setTouchOffsetsFromPoint:(struct CGPoint)arg1;

- (void)_setUpAfterForcedStartFromPoint:(struct CGPoint)arg1;

- (void)_setUpAtPoint:(struct CGPoint)arg1;

- (void)_update;

- (void)_updateHorizontalDragLockForPoint:(struct CGPoint)arg1;

- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;

@property(nonatomic) _Bool commitBlocked; // @synthesize commitBlocked=_commitBlocked;

- (void)dealloc;

@property(nonatomic) __weak id <EKEventGestureControllerDelegate> delegate; // @synthesize delegate=_delegate;

@property(readonly, nonatomic) EKDayOccurrenceView *draggingView; // @synthesize draggingView=_draggingView;

- (void)endForcedStart;

@property(retain, nonatomic) EKEvent *event; // @synthesize event=_event;

@property(readonly, nonatomic) struct CGPoint firstTouchPoint; // @synthesize firstTouchPoint=_firstTouchPoint;

- (void)forceStartWithOccurrence:(id)arg1;

- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;

- (id)initWithView:(id)arg1;

- (void)invalidate;

- (_Bool)isDraggingOccurrence;

@property(readonly, nonatomic) struct CGPoint latestTouchPoint; // @synthesize latestTouchPoint=_latestTouchPoint;

- (void)promptUserForRecurrenceActionOnOccurrence:(id)arg1 whenFinished:(id)arg2;

- (void)removeDraggedOccurrence;

@property(nonatomic) __weak id <EKEventGestureControllerUntimedDelegate> untimedDelegate; // @synthesize untimedDelegate=_untimedDelegate;

@property(nonatomic) _Bool usesHorizontalDragLocking; // @synthesize usesHorizontalDragLocking=_usesHorizontalDragLocking;

@property(nonatomic) _Bool usesXDragOffsetInCancelRegion; // @synthesize usesXDragOffsetInCancelRegion=_usesXDragOffsetInCancelRegion;

@property(readonly, nonatomic) struct CGPoint touchOffset; // @synthesize touchOffset=_touchOffset;

- (void)updateDraggingOccurrence;

- (void)updateDraggingOccurrenceForced:(_Bool)arg1 animated:(_Bool)arg2;



@end


