/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "UIViewController.h"



@class EKCalendar, EKEventStore, EKSource, NSIndexPath, NSMutableArray, NSMutableDictionary, NSMutableSet, NSSet, UIRefreshControl, UITableView, _UIAccessDeniedView;



@interface EKCalendarChooser : UIViewController

{

    _Bool _disableCalendarEditing;

    _Bool _showsDeclinedEventsSetting;

    int _style;

    int _chooserMode;

    struct {

        unsigned int listIsFlat:1;

        unsigned int showAll:1;

        unsigned int showColors:1;

        unsigned int allSelected:1;

        unsigned int allowsRotation:1;

        unsigned int allowsEdit:1;

        unsigned int showsDoneButton:1;

        unsigned int showsCancelButton:1;

        unsigned int showsWritableCalendarsOnly:1;

        unsigned int showsRefreshButton:1;

        unsigned int allowsPullToRefresh:1;

    } _flags;

    NSMutableSet *_selectedCalendars;

    id <EKCalendarChooserDelegate> _delegate;

    unsigned long long _entityType;

    long long _lastAuthorizationStatus;

    EKEventStore *_eventStore;

    UITableView *_tableView;

    NSMutableArray *_groups;

    NSMutableDictionary *_storeGroupMap;

    NSMutableDictionary *_customGroupMap;

    NSIndexPath *_checkedRow;

    id <EKStyleProvider> _styleProvider;

    EKSource *_limitedToSource;

    _UIAccessDeniedView *_accessDeniedView;

    long long _refreshCounter;

    UIRefreshControl *_refreshControl;

}



- (void).cxx_destruct;

- (void)_applySelection;

- (void)_beginMaximumTimeElapsedTimeout;

- (void)_beginSyncCompletedTimeout;

- (_Bool)_calendarAvailableForEditing:(id)arg1;

- (_Bool)_canEnableRefresh;

- (void)_cancelMaximumTimeElapsedTimeout;

- (void)_cancelSyncCompletedTimeout;

- (long long)_declinedEventsSwitchSection;

- (void)_eventStoreChanged:(id)arg1;

- (id)_filterCalendars:(id)arg1;

- (id)_groupForCustomGroupType:(int)arg1;

- (id)_groupForSource:(id)arg1;

- (id)_indexPathForCalendar:(id)arg1 source:(id)arg2;

- (void)_insertStoreIntoByGroupArray:(id)arg1;

- (_Bool)_isEllipsisCellForGroup:(id)arg1 rowIndex:(long long)arg2;

- (id)_loadCalendars;

- (int)_numSelectedGroups;

- (void)_populateGroupsForCalendars:(id)arg1;

- (void)_pulledToRefresh:(id)arg1;

- (void)_refreshControlMaximumVisibleTimeElapsed;

- (void)_restoreSelection:(id)arg1 newCalendars:(id)arg2;

- (id)_saveSelection;

- (void)_selectAllCalendarsAndStores:(_Bool)arg1;

- (void)_selectCalendar:(id)arg1 selected:(_Bool)arg2;

- (void)_selectGroup:(id)arg1 selected:(_Bool)arg2;

- (void)_setCalendars:(id)arg1;

- (_Bool)_shouldShowGroupNameInSection:(long long)arg1;

- (id)_stringForSharedCalendar:(id)arg1;

- (void)_syncCompletedGracePeriodExpired;

- (void)_syncDidEnd;

- (void)_syncDidStart;

- (_Bool)_tableShouldDisplayAllCalendarButtons;

- (_Bool)_tableShouldDisplayAllCalendarsSection;

- (_Bool)_tableShouldDisplayAllCellForGroup:(id)arg1;

- (_Bool)_tableShouldDisplayNewCalendarCellForGroup:(id)arg1;

@property(retain, nonatomic) _UIAccessDeniedView *accessDeniedView; // @synthesize accessDeniedView=_accessDeniedView;

@property(nonatomic) _Bool allowsEdit;

@property(nonatomic) _Bool allowsPullToRefresh;

@property(nonatomic) _Bool allowsRotation;

- (void)calendarEditor:(id)arg1 didCompleteWithAction:(int)arg2;

- (void)cancel:(id)arg1;

@property(retain, nonatomic) NSIndexPath *checkedRow; // @synthesize checkedRow=_checkedRow;

@property(nonatomic) int chooserMode; // @synthesize chooserMode=_chooserMode;

@property(retain, nonatomic) NSMutableDictionary *customGroupMap; // @synthesize customGroupMap=_customGroupMap;

- (void)dealloc;

- (void)declinedEventsSwitchChanged:(id)arg1;

@property(nonatomic) __weak id <EKCalendarChooserDelegate> delegate; // @synthesize delegate=_delegate;

@property(nonatomic) _Bool disableCalendarEditing; // @synthesize disableCalendarEditing=_disableCalendarEditing;

- (void)done:(id)arg1;

@property(nonatomic) unsigned long long entityType; // @synthesize entityType=_entityType;

@property(retain, nonatomic) EKEventStore *eventStore; // @synthesize eventStore=_eventStore;

@property(nonatomic) CDStruct_52e1c6c6 flags; // @synthesize flags=_flags;

@property(retain, nonatomic) NSMutableArray *groups; // @synthesize groups=_groups;

- (id)initWithSelectionStyle:(int)arg1 displayStyle:(int)arg2 entityType:(unsigned long long)arg3 eventStore:(id)arg4;

- (id)initWithSelectionStyle:(int)arg1 displayStyle:(int)arg2 entityType:(unsigned long long)arg3 eventStore:(id)arg4 limitedToSource:(id)arg5;

- (id)initWithSelectionStyle:(int)arg1 displayStyle:(int)arg2 eventStore:(id)arg3;

@property(nonatomic) long long lastAuthorizationStatus; // @synthesize lastAuthorizationStatus=_lastAuthorizationStatus;

@property(retain, nonatomic) EKSource *limitedToSource; // @synthesize limitedToSource=_limitedToSource;

- (void)loadView;

- (double)marginForTableView:(id)arg1;

- (long long)numberOfSectionsInTableView:(id)arg1;

- (struct CGSize)preferredContentSize;

- (void)refresh:(id)arg1;

@property(retain, nonatomic) UIRefreshControl *refreshControl; // @synthesize refreshControl=_refreshControl;

@property(nonatomic) long long refreshCounter; // @synthesize refreshCounter=_refreshCounter;

@property(retain, nonatomic) EKCalendar *selectedCalendar;

@property(retain, nonatomic) NSMutableSet *selectedCalendarSet; // @synthesize selectedCalendarSet=_selectedCalendars;

@property(copy, nonatomic) NSSet *selectedCalendars;

@property(nonatomic) int selectionStyle; // @synthesize selectionStyle=_style;

- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;

@property(nonatomic) _Bool showsCancelButton;

@property(nonatomic) _Bool showsDeclinedEventsSetting; // @synthesize showsDeclinedEventsSetting=_showsDeclinedEventsSetting;

@property(nonatomic) _Bool showsDoneButton;

@property(nonatomic) _Bool showsRefreshButton;

- (void)setShowsWritableCalendarsOnly:(_Bool)arg1;

@property(retain, nonatomic) NSMutableDictionary *storeGroupMap; // @synthesize storeGroupMap=_storeGroupMap;

@property(retain, nonatomic) id <EKStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;

@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;

- (_Bool)showsWritableCalendarsOnly;

- (unsigned long long)supportedInterfaceOrientations;

- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;

- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;

- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;

- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;

- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;

- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;

- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;

- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;

- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;

- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;

- (void)viewDidLoad;

- (void)viewWillAppear:(_Bool)arg1;



@end


