/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "CalendarEventLoaderDelegate.h"



@class CalendarEventLoader, EKCalendarDate, EKEvent, EKEventStore, NSArray, NSCalendar, NSLock, NSSet, NSString, _EKNotificationMonitor;



@interface CalendarModel : NSObject <CalendarEventLoaderDelegate>

{

    EKEventStore *_eventStore;

    CalendarEventLoader *_eventLoader;

    NSLock *_filterLock;

    NSArray *_visibleCalendars;

    long long _readWriteCalendarCount;

    long long _invitationBearingStoresExist;

    _EKNotificationMonitor *_notificationMonitor;

    id <OccurrenceCacheDataSourceProtocol> _occurrenceCacheDataSource;

    long long _cachedFakeTodayIndex;

    NSSet *_selectedCalendars;

    NSString *_searchString;

    NSCalendar *_calendar;

    EKCalendarDate *_selectedDate;

    unsigned long long _firstVisibleSecond;

    EKEvent *_selectedOccurrence;

}



- (void).cxx_destruct;

- (void)_eventStoreChanged:(id)arg1;

- (void)_invalidateCachedOccurrences;

- (void)_localeChanged:(id)arg1;

- (void)_notificationCountExpired:(id)arg1;

- (id)_notificationMonitor;

- (void)_notificationsExpired:(id)arg1;

- (void)_occurrenceCacheChanged;

- (void)_processReloadForCacheOnly:(_Bool)arg1 includingCalendars:(_Bool)arg2 checkCalendarsValid:(_Bool)arg3;

- (void)_reloadIfTodayDetermined;

- (void)_searchFoundDateToScrollTo:(id)arg1;

- (void)_searchResultsAvailable:(id)arg1;

- (void)_significantTimeChange:(id)arg1;

- (void)_systemWake;

- (void)_timeZoneChanged:(id)arg1;

- (double)_tomorrow;

- (void)_tzSupportTodayRolledOver;

- (void)addOccurrenceAwaitingDeletion:(id)arg1;

- (void)addOccurrenceAwaitingRefresh:(id)arg1;

- (id)allNotifications;

- (unsigned long long)allNotificationsCount;

- (long long)cachedFakeTodayIndex;

- (id)cachedOccurrenceAtIndexPath:(id)arg1;

- (_Bool)cachedOccurrencesAreBeingGenerated;

- (_Bool)cachedOccurrencesAreLoaded;

@property(copy, nonatomic) NSCalendar *calendar; // @synthesize calendar=_calendar;

- (void)calendarEventLoader:(id)arg1 occurrencesDidUpdateBetweenStart:(double)arg2 end:(double)arg3;

- (id)closestOccurrenceToTomorrowForEventUID:(int)arg1;

- (id)dateForCachedOccurrencesInSection:(long long)arg1;

- (void)dealloc;

- (id)defaultCalendarForNewEvents;

- (void)ensureCalendarVisibleWithId:(id)arg1;

@property(readonly, nonatomic) EKEventStore *eventStore; // @synthesize eventStore=_eventStore;

- (void)fetchCachedDaysInBackgroundStartingFromSection:(long long)arg1;

@property(nonatomic) unsigned long long firstVisibleSecond; // @synthesize firstVisibleSecond=_firstVisibleSecond;

- (id)init;

- (_Bool)invitationBearingStoresExistForEvents;

- (_Bool)isCalendarVisibleWithID:(id)arg1;

- (long long)numberOfCachedOccurrencesInSection:(long long)arg1;

- (long long)numberOfDaysWithCachedOccurrences;

- (id)occurrencesForDay:(id)arg1 waitForLoad:(_Bool)arg2;

- (id)occurrencesForStartDate:(id)arg1 endDate:(id)arg2 preSorted:(_Bool)arg3 waitForLoad:(_Bool)arg4;

- (id)occurrencesForStartDay:(id)arg1 endDay:(id)arg2 preSorted:(_Bool)arg3 waitForLoad:(_Bool)arg4;

- (void)prepareForAppSuspend;

@property(readonly, nonatomic) long long readWriteCalendarCount;

- (id)recentNotifications;

- (void)refreshAccountListIfNeeded:(_Bool)arg1;

- (void)refreshCalendarDataIfNeeded:(_Bool)arg1;

@property(retain, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;

- (_Bool)searchingOccurrences;

- (long long)sectionForCachedOccurrencesOnDate:(id)arg1;

- (long long)sectionForCachedOccurrencesOnDate:(id)arg1 sectionExistsForDay:(_Bool *)arg2;

@property(retain, nonatomic) NSSet *selectedCalendars; // @synthesize selectedCalendars=_selectedCalendars;

@property(copy, nonatomic) EKCalendarDate *selectedDate; // @synthesize selectedDate=_selectedDate;

- (id)selectedDateOccurrences:(_Bool)arg1 loadIsComplete:(_Bool *)arg2;

@property(readonly, nonatomic) EKCalendarDate *selectedDay;

@property(retain, nonatomic) EKEvent *selectedOccurrence; // @synthesize selectedOccurrence=_selectedOccurrence;

- (_Bool)selectedOccurrenceIsSearchMatch;

- (void)setComponentForExpandingPadding:(unsigned long long)arg1;

- (void)setComponentForExpandingRequests:(unsigned long long)arg1;

- (void)setDesiredPaddingDays:(unsigned int)arg1;

- (void)setMaxCachedDays:(unsigned int)arg1;

- (void)setPreferredReloadStartDate:(id)arg1 endDate:(id)arg2;

- (void)updateAfterAppResume;

@property(readonly, nonatomic) long long visibleCalendarCount;



@end


