/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "MSCupidStateMachine.h"


#import "MSReauthorizationProtocolDelegate.h"

#import "MSSubscribeStorageProtocolDelegate.h"

#import "MSSubscribeStreamsProtocolDelegate.h"

#import "MSSubscriber.h"



@class MSMediaStreamDaemon, MSObjectQueue, MSReauthorizationProtocol, MSSubscribeStreamsProtocol, NSMutableArray, NSMutableDictionary;



@interface MSSubscriber : MSCupidStateMachine <MSSubscriber, MSSubscribeStreamsProtocolDelegate, MSSubscribeStorageProtocolDelegate, MSReauthorizationProtocolDelegate>

{

    id <MSSubscriberDelegate> _delegate;

    MSMediaStreamDaemon *_daemon;

    _Bool _checkOneMoreTime;

    int _state;

    MSSubscribeStreamsProtocol *_protocol;

    NSMutableDictionary *_newSubscriptionsByStreamID;

    int _retrievalState;

    id <MSSubscribeStorageProtocol> _storageProtocol;

    MSReauthorizationProtocol *_reauthProtocol;

    MSObjectQueue *_retrievalQueue;

    NSMutableArray *_assetsBeingRetrieved;

    long long _targetRetrievalByteCount;

    int _retrievalBatchSize;

    long long _maxErrorCount;

}



+ (id)_clearInstantiatedSubscribersByPersonID;

+ (id)_descriptionForRetrievalState:(int)arg1;

+ (id)_descriptionForState:(int)arg1;

+ (void)_setMasterNextActivityDate:(id)arg1 forPersonID:(id)arg2;

+ (id)existingSubscriberForPersonID:(id)arg1;

+ (void)forgetPersonID:(id)arg1;

+ (_Bool)isInRetryState;

+ (id)nextActivityDate;

+ (id)nextActivityDateForPersonID:(id)arg1;

+ (id)personIDsWithOutstandingActivities;

+ (void)stopAllActivities;

+ (id)subscriberForPersonID:(id)arg1;

- (void).cxx_destruct;

- (void)_abort;

- (void)_changeRetrievalStateTo:(int)arg1;

- (void)_changeStateTo:(int)arg1;

- (void)_checkForNewAssetCollections;

- (void)_didFinishRetrievingSubscriptionUpdate;

- (void)_didReceiveAuthenticationError:(id)arg1;

- (void)_finishedRetrievingAsset:(id)arg1;

- (void)_forget;

- (_Bool)_hasOutstandingPoll;

- (_Bool)_isAllowedToDownload;

- (_Bool)_isInRetryState;

- (void)_reauthorizeAssets;

- (void)_refreshServerSideConfigurationParameters;

- (void)_retrieveAssets;

- (void)_retrieveNextAssets;

- (void)_serverSideConfigurationDidChange:(id)arg1;

- (void)_setHasOutstandingPoll:(_Bool)arg1;

- (void)_setSubscriptionsByStreamID:(id)arg1;

- (void)_stopOutSubscriberState:(int *)arg1 outRetrievalState:(int *)arg2;

- (id)_subscriptionsByStreamID;

- (void)_updateMasterManifest;

- (void)abort;

- (void)checkForNewAssetCollections;

- (void)checkForOutstandingActivities;

@property(nonatomic) MSMediaStreamDaemon *daemon; // @synthesize daemon=_daemon;

- (void)deactivate;

- (void)dealloc;

@property(nonatomic) id <MSSubscriberDelegate> delegate; // @synthesize delegate=_delegate;

- (id)initWithPersonID:(id)arg1 baseURL:(id)arg2;

- (id)ownSubscribedStream;

- (void)reauthorizationProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;

- (void)reauthorizationProtocol:(id)arg1 reauthorizedAssets:(id)arg2 rejectedAssets:(id)arg3 error:(id)arg4;

- (void)resetSync;

@property(nonatomic) int retrievalBatchSize; // @synthesize retrievalBatchSize=_retrievalBatchSize;

- (void)retrieveAssets:(id)arg1;

@property(nonatomic) long long targetRetrievalByteCount; // @synthesize targetRetrievalByteCount=_targetRetrievalByteCount;

- (void)stop;

- (void)subscribeStorageProtocol:(id)arg1 didFinishRetrievingAsset:(id)arg2 error:(id)arg3;

- (void)subscribeStorageProtocolDidFinishRetrievingAllAssets:(id)arg1;

- (void)subscribeStreamsProtocol:(id)arg1 didFindDisappearedSubscriptionForPersonID:(id)arg2;

- (void)subscribeStreamsProtocol:(id)arg1 didFindShareState:(id)arg2;

- (void)subscribeStreamsProtocol:(id)arg1 didFindTemporarilyUnavailableSubscriptionForPersonID:(id)arg2;

- (void)subscribeStreamsProtocol:(id)arg1 didFinishError:(id)arg2;

- (void)subscribeStreamsProtocol:(id)arg1 didFinishReceivingUpdatesForPersonID:(id)arg2 ctag:(id)arg3;

- (void)subscribeStreamsProtocol:(id)arg1 didReceiveAssetCollections:(id)arg2 forPersonID:(id)arg3;

- (void)subscribeStreamsProtocol:(id)arg1 didReceiveAuthenticationError:(id)arg2;

- (void)subscribeStreamsProtocol:(id)arg1 willReceiveUpdatesForPersonID:(id)arg2 wasReset:(_Bool)arg3 metadata:(id)arg4;

- (id)subscribedStreams;



@end


