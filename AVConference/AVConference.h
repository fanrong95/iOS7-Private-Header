/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class AVConferenceXPCClient, CALayer, NSDictionary, NSObject<AVConferenceDelegate>, NSTimer;



@interface AVConference : NSObject

{

    id weakAVConference;

    AVConferenceXPCClient *connection;

    id opaqueConf;

    _Bool useServer;

    _Bool runningInServer;

    NSObject<AVConferenceDelegate> *delegate;

    NSDictionary *serverBag;

    CALayer *remoteLayerFront;

    CALayer *remoteLayerBack;

    CALayer *remoteSubLayerFront;

    CALayer *remoteSubLayerBack;

    _Bool shouldDisplayVideoInfoLayer;

    _Bool shouldDisplayVideoInfoLayer_;

    _Bool shouldDisplayNetworkQualityGraph_;

    NSTimer *networkQualityUpdateTimer_;

    CALayer *networkQualityGraphLayer_;

}



+ (short)addressPointerFromBlob:(id)arg1;

+ (unsigned int)doBlockingConnectionCheck;

+ (unsigned int)doBlockingConnectionCheck:(_Bool)arg1;

+ (id)externalAddressForSelfConnectionBlob:(id)arg1;

+ (void)refreshLoggingParameters;

+ (void)setAudioSessionProperties:(id)arg1;

+ (void)startAudioSession;

+ (void)stopAudioSession;

- (void)addGKSCallEvent:(id)arg1 sessionID:(id)arg2;

- (id)callMetadataForCallID:(long long)arg1;

- (id)convertBlobtoNewBlob:(id)arg1;

- (id)convertBlobtoOldBlob:(id)arg1;

- (id)currentAudioInputDevice;

- (void)dealloc;

@property NSObject<AVConferenceDelegate> *delegate; // @synthesize delegate;

- (void)deregisterBlocksForVCNotifications;

- (unsigned int)doBlockingConnectionCheck;

- (int)getConferenceOperatingMode;

- (_Bool)getIsAudioPaused:(_Bool *)arg1 callID:(long long)arg2 error:(id *)arg3;

- (_Bool)getIsVideoPaused:(_Bool *)arg1 callID:(long long)arg2 error:(id *)arg3;

- (void)handleGKSConnectivitySettingsUpdate:(id)arg1;

- (id)init;

- (long long)initializeNewCall;

@property(readonly) float inputMeterLevel;

- (void)inviteDictionaryForCallID:(long long)arg1 remoteInviteDictionary:(id)arg2 nonCellularCandidateTimeout:(double)arg3 block:(id)arg4 queue:(void)arg5;

@property(nonatomic, getter=isInputMeteringEnabled) _Bool inputMeteringEnabled;

@property(nonatomic, getter=isMicrophoneMuted) _Bool microphoneMuted;

@property(nonatomic, getter=isOutputMeteringEnabled) _Bool outputMeteringEnabled;

@property(getter=isSpeakerPhoneEnabled) _Bool enableSpeakerPhone;

@property(getter=isUsingViceroyBlobFormat) _Bool useViceroyBlobFormat;

- (long long)lastActiveCallID;

- (void)listenForNotifications;

- (double)localBitrateForCallID:(long long)arg1;

@property(readonly) int localFrameHeight;

@property(readonly) int localFrameWidth;

- (double)localFramerateForCallID:(long long)arg1;

- (double)localPacketLossRateForCallID:(long long)arg1;

- (id)localScreenAttributesForVideoAttributes:(id)arg1;

@property(readonly) unsigned int natType;

- (float)networkQuality;

- (double)networkQualityForCallID:(long long)arg1;

@property(retain) CALayer *networkQualityGraphLayer; // @synthesize networkQualityGraphLayer=networkQualityGraphLayer_;

@property(retain) NSTimer *networkQualityUpdateTimer; // @synthesize networkQualityUpdateTimer=networkQualityUpdateTimer_;

- (id)newRandomParticipantID;

@property(readonly) float outputMeterLevel;

- (void)processCancelRelayRequest:(long long)arg1 cancelDict:(id)arg2 didOriginateRequest:(_Bool)arg3;

- (void)processRelayRequestResponse:(long long)arg1 responseDict:(id)arg2 didOriginateRequest:(_Bool)arg3;

- (void)processRelayUpdate:(long long)arg1 updateDict:(id)arg2 didOriginateRequest:(_Bool)arg3;

- (void)processRemoteIPChange:(id)arg1 callID:(long long)arg2;

- (void)receivedRealTimeData:(id)arg1 fromParticipantID:(id)arg2;

- (void)registerBlocksForVCNotifications;

- (double)remoteBitrateForCallID:(long long)arg1;

- (void)remoteCancelledCallID:(long long)arg1;

- (int)remoteFrameHeightForCallID:(long long)arg1;

- (int)remoteFrameWidthForCallID:(long long)arg1;

- (double)remoteFramerateForCallID:(long long)arg1;

- (double)remotePacketLossRateForCallID:(long long)arg1;

- (void *)remoteVideoBackLayer;

- (void *)remoteVideoLayer;

@property(nonatomic) _Bool requiresWifi;

- (double)roundTripTimeForCallID:(long long)arg1;

- (void)sendARPLData:(id)arg1 toCallID:(long long)arg2;

- (void)sendProtobuf:(id)arg1 withType:(long long)arg2 forCallID:(long long)arg3;

- (void)serverDied;

- (void)serverReconnected;

- (_Bool)setActive:(_Bool)arg1;

- (_Bool)setAudioInputDevice:(id)arg1;

- (void)setCallReport:(long long)arg1 withReport:(id)arg2;

- (void)setConferenceOperatingMode:(int)arg1;

- (void)setLastActiveCallID:(long long)arg1;

- (void)setLocalScreenAttributes:(id)arg1;

- (_Bool)setPauseAudio:(_Bool)arg1 callID:(long long)arg2 error:(id *)arg3;

- (_Bool)setPauseVideo:(_Bool)arg1 callID:(long long)arg2 error:(id *)arg3;

- (void)setPeerCN:(id)arg1 callID:(long long)arg2;

- (void)setRemoteVideoBackLayer:(void *)arg1;

- (void)setRemoteVideoLayer:(void *)arg1;

- (void)setRemoteVideoLayerContentsRect:(struct CGRect)arg1 camera:(int)arg2;

- (_Bool)setServerInfo:(id)arg1;

- (void)setSessionID:(id)arg1 callID:(long long)arg2;

- (void)setSetSessionID:(id)arg1 forCallID:(long long)arg2;

@property _Bool shouldDisplayNetworkQualityGraph; // @synthesize shouldDisplayNetworkQualityGraph=shouldDisplayNetworkQualityGraph_;

@property _Bool shouldDisplayVideoInfoLayer; // @synthesize shouldDisplayVideoInfoLayer=shouldDisplayVideoInfoLayer_;

- (_Bool)startConnectionWithCallID:(long long)arg1 oldCallID:(long long)arg2 usingInviteData:(id)arg3 isCaller:(_Bool)arg4 relayResponseDict:(id)arg5 didOriginateRelayRequest:(_Bool)arg6 capabilities:(id)arg7 error:(id *)arg8;

- (_Bool)startConnectionWithCallID:(long long)arg1 usingInviteData:(id)arg2 isCaller:(_Bool)arg3 relayResponseDict:(id)arg4 didOriginateRelayRequest:(_Bool)arg5 capabilities:(id)arg6 error:(id *)arg7;

- (void)startNetworkQualityUpdateTimer;

- (id)statsForCallID:(long long)arg1;

- (void)stopCallID:(long long)arg1;

- (void)stopListeningForNotifications;

- (void)stopNetworkQualityUpdateTimer;

- (void)updateCapabilities:(id)arg1;

- (void)updateGKSConnectivitySettings;

- (_Bool)updateNetworkQualityGraph;

- (void)videoConference:(id)arg1 cancelRelayRequest:(unsigned int)arg2 requestDict:(id)arg3;

- (void)videoConference:(id)arg1 didChangeLocalVariablesForCallID:(unsigned int)arg2;

- (void)videoConference:(id)arg1 didReceiveARPLData:(id)arg2 forCallID:(unsigned int)arg3;

- (void)videoConference:(id)arg1 didReceiveFirstRemoteFrameForCallID:(unsigned int)arg2;

- (void)videoConference:(id)arg1 didRemoteScreenAttributesChange:(id)arg2 forCallID:(unsigned int)arg3;

- (void)videoConference:(id)arg1 didRemoteVideoAttributesChange:(id)arg2 forCallID:(unsigned int)arg3;

- (void)videoConference:(id)arg1 didStartSession:(_Bool)arg2 withCallID:(unsigned int)arg3 error:(id)arg4;

- (void)videoConference:(id)arg1 didStartSession:(_Bool)arg2 withCallID:(unsigned int)arg3 withUserInfo:(id)arg4 error:(id)arg5;

- (void)videoConference:(id)arg1 didStopWithCallID:(unsigned int)arg2 error:(id)arg3;

- (void)videoConference:(id)arg1 didStopWithCallID:(unsigned int)arg2 error:(id)arg3 callMetadata:(id)arg4;

- (void)videoConference:(id)arg1 inititiateRelayRequest:(unsigned int)arg2 requestDict:(id)arg3;

- (void)videoConference:(id)arg1 localIPChange:(id)arg2 withCallID:(unsigned int)arg3;

- (void)videoConference:(id)arg1 receivedNoRemotePacketsForTime:(double)arg2 callID:(unsigned int)arg3;

- (void)videoConference:(id)arg1 remoteAudioPaused:(_Bool)arg2 callID:(unsigned int)arg3;

- (void)videoConference:(id)arg1 remoteMediaStalled:(_Bool)arg2 callID:(unsigned int)arg3;

- (void)videoConference:(id)arg1 remoteVideoPaused:(_Bool)arg2 callID:(unsigned int)arg3;

- (void)videoConference:(id)arg1 sendRelayUpdate:(unsigned int)arg2 updateDict:(id)arg3;

- (void)videoConference:(id)arg1 updateInputMeterLevel:(float)arg2;

- (void)videoConference:(id)arg1 updateOutputMeterLevel:(float)arg2;

- (void)videoConference:(id)arg1 videoQualityNotificationForCallID:(unsigned int)arg2 isDegraded:(_Bool)arg3 isRemote:(_Bool)arg4;

- (void)videoConference:(id)arg1 withCallID:(unsigned int)arg2 networkHint:(_Bool)arg3;

- (void)warmupForCall;



@end


