/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "GKNATObserverDelegate.h"

#import "VCCallSessionDelegate.h"



@class AVAudioManager, GKNATObserver, NSArray, NSDictionary, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSObject<VideoConferenceChannelQualityDelegate>, NSObject<VideoConferenceDelegate>, NSObject<VideoConferenceRealTimeChannel>, NSObject<VideoConferenceSpeakingDelegate>, NSString, VCCallSession, VCVideoRule, VideoConferenceManager;



@interface VideoConference : NSObject <VCCallSessionDelegate, GKNATObserverDelegate>

{

    NSObject<VideoConferenceDelegate> *delegate;

    VideoConferenceManager *manager;

    AVAudioManager *audioManager;

    struct _opaque_pthread_rwlock_t {

        long long __sig;

        char __opaque[192];

    } stateLock;

    NSMutableDictionary *sessionDict;

    NSArray *sessionArray;

    _Bool outputMeteringEnabled;

    _Bool inputMeteringEnabled;

    float outputMeterLevel;

    float inputMeterLevel;

    _Bool microphoneMuted;

    NSObject<VideoConferenceRealTimeChannel> *rtChannel;

    NSObject<OS_dispatch_queue> *audioManagerQueue;

    void *remoteVideoLayer;

    void *remoteVideoBackLayer;

    int remoteVideoSlot;

    int remoteVideoSlotBack;

    struct tagHANDLE *hVR;

    struct tagHANDLE *hVT;

    _Bool isRecvVideo;

    double dAudioHostTime;

    struct _opaque_pthread_mutex_t xRemoteLayer;

    struct _opaque_pthread_mutex_t xAudioTS;

    unsigned int dwAudioTS;

    _Bool forceNoICE;

    _Bool useViceroyBlobFormat;

    int chatMode;

    _Bool isFocus;

    NSString *currentFocus;

    VCCallSession *currentFocusSession;

    _Bool hasMic;

    float conferenceVolume;

    NSArray *mutedPeers;

    NSArray *connectedPeers;

    unsigned int talkingPeersLimit;

    unsigned char speakingArray[16];

    NSObject<VideoConferenceSpeakingDelegate> *speakingDelegate;

    NSObject<VideoConferenceChannelQualityDelegate> *qualityDelegate;

    float longTerm;

    float shortTerm;

    _Bool isTalking;

    unsigned int talkTime;

    int packetsPerBundle;

    unsigned int recvRTPTimeStamp;

    _Bool disableVAD;

    _Bool isAttemptingRelay;

    _Bool requiresWifi;

    unsigned int preferredCodec;

    int upstreamBandwidth;

    int downstreamBandwidth;

    _Bool useAFRC;

    _Bool isGKVoiceChat;

    _Bool isUsingSuppression;

    _Bool shouldTimeoutPackets;

    unsigned char requestedCameraType;

    _Bool useCompressedConnectionData;

    NSDictionary *natTypeDictionary;

    struct _opaque_pthread_mutex_t natMutex;

    struct _opaque_pthread_cond_t natCond;

    unsigned int lastSentAudioSampleTime;

    double lastReceivedAudioTimestamp;

    int audioTimeStampDelta;

    GKNATObserver *natObserver;

    unsigned int mostRecentStartedCall;

    unsigned int lastActiveCall;

    _Bool bweOperatingModeInitialized;

    _Bool useNewBWEMode;

    _Bool useActiveProbingSenderLog;

    _Bool useFakeLargeFrameMode;

    _Bool shouldPrioritizeParticipantIDForSIPInvite;

    _Bool shouldResumeAudio;

    _Bool shouldResumeVideo;

    unsigned int timeStampUpdateCounter;

    NSObject<OS_dispatch_queue> *delegateNotificationQueue;

    int conferenceOperatingMode;

    _Bool isValid;

    int localFrameWidth;

    int localFrameHeight;

    VCVideoRule *conferenceCaptureRule;

}



- (void)NATTypeDictionaryUpdated:(id)arg1;

- (void)avConferencePreviewDidStopCapture;

- (void)avConferencePreviewError:(id)arg1;

- (void)calculateMixingArrays:(unsigned int *)arg1 talkingMask:(unsigned int)arg2;

- (unsigned int)calculateTalkingMaskAtTimeStamp:(unsigned int)arg1 samples:(char *)arg2 numBytes:(int)arg3 numSamples:(int)arg4;

- (unsigned int)callIDForOpenSessionWithParticipantID:(id)arg1;

- (id)callMetadataForCallID:(unsigned int)arg1;

- (int)captureAsFocus:(char *)arg1 numBytes:(int)arg2 numSamples:(int)arg3 timeStamp:(unsigned int)arg4 timeStampDelta:(int)arg5 averagePower:(unsigned char)arg6;

- (int)captureAsFocusClient:(char *)arg1 numBytes:(int)arg2 numSamples:(int)arg3 timeStamp:(unsigned int)arg4 averagePower:(unsigned char)arg5;

- (int)captureMeshMode:(char *)arg1 numBytes:(int)arg2 numSamples:(int)arg3 timeStamp:(unsigned int)arg4 bufferedSamples:(int)arg5 hostTime:(double)arg6;

@property(nonatomic) int chatMode; // @synthesize chatMode;

- (void)cleanupManager;

- (void)cleanupProc:(id)arg1;

- (void)cleanupQueues;

- (void)cleanupSession:(id)arg1 didRemoteCancel:(_Bool)arg2;

- (void)cleanupSession:(id)arg1 withDelay:(unsigned long long)arg2;

@property(readonly, nonatomic) VCVideoRule *conferenceCaptureRule; // @synthesize conferenceCaptureRule;

- (int)conferenceOperatingMode;

@property float conferenceVolume;

- (void)connectionBlobForParticipantID:(id)arg1 callID:(unsigned int)arg2 block:(id)arg3 queue:(void)arg4 caller:(id)arg5;

- (id)connectionBlobForParticipantID:(id)arg1 callID:(unsigned int *)arg2 error:(id *)arg3;

- (unsigned int)connectionResultCallbackForCallID:(unsigned int)arg1 result:(struct tagCONNRESULT *)arg2 didReceiveICEPacket:(_Bool)arg3 didUseRelay:(_Bool)arg4 secretKey:(struct __CFData *)arg5 skeResult:(int)arg6;

- (void)createVideoImageQueues;

@property(copy, nonatomic) NSString *currentFocus; // @synthesize currentFocus;

- (void)dealloc;

- (void)defaultCleanupSession:(id)arg1;

@property(nonatomic) NSObject<VideoConferenceDelegate> *delegate; // @synthesize delegate;

- (void)didChangeLocalVariablesForSession:(id)arg1;

- (_Bool)didDetectBandwidth:(_Bool)arg1 upstreamBandwidth:(int)arg2 downstreamBandwidth:(int)arg3;

@property _Bool disableVAD; // @synthesize disableVAD;

@property int downstreamBandwidth; // @synthesize downstreamBandwidth;

- (void)forceNoICE:(_Bool)arg1;

- (_Bool)getIsAudioPaused:(_Bool *)arg1 callID:(unsigned int)arg2 error:(id *)arg3;

- (_Bool)getIsVideoPaused:(_Bool *)arg1 callID:(unsigned int)arg2 error:(id *)arg3;

- (void)getNSError:(id *)arg1 code:(long long)arg2 detailedCode:(long long)arg3 filePath:(id)arg4 description:(id)arg5 reason:(id)arg6;

- (void)getNSError:(id *)arg1 code:(long long)arg2 detailedCode:(long long)arg3 returnCode:(long long)arg4 filePath:(id)arg5 description:(id)arg6 reason:(id)arg7;

- (void)handleCellTechChange:(int)arg1 cellularMaxPktLen:(unsigned short)arg2;

@property _Bool hasMic;

- (_Bool)hasSessionWaitingForSIPInvite;

- (id)init;

- (unsigned int)initializeNewCall;

- (_Bool)initiateResolutionChangeToWidth:(int)arg1 height:(int)arg2 rate:(int)arg3;

@property(readonly, nonatomic) float inputMeterLevel;

- (void)inviteDataForParticipantID:(id)arg1 callID:(unsigned int)arg2 remoteInviteData:(id)arg3 nonCellularCandidateTimeout:(unsigned long long)arg4 block:(id)arg5 queue:(void)arg6 caller:(id)arg7;

- (id)inviteDataForParticipantID:(id)arg1 callID:(unsigned int *)arg2 remoteInviteData:(id)arg3 nonCellularCandidateTimeout:(double)arg4 error:(id *)arg5;

@property(nonatomic) _Bool isFocus; // @synthesize isFocus;

@property(nonatomic) _Bool isGKVoiceChat; // @synthesize isGKVoiceChat;

@property(nonatomic, getter=isInputMeteringEnabled) _Bool inputMeteringEnabled;

@property(nonatomic, getter=isMicrophoneMuted) _Bool microphoneMuted;

@property(nonatomic, getter=isOutputMeteringEnabled) _Bool outputMeteringEnabled;

@property(getter=isSpeakerPhoneEnabled) _Bool enableSpeakerPhone;

@property(nonatomic) _Bool isUsingSuppression; // @synthesize isUsingSuppression;

@property _Bool isValid; // @synthesize isValid;

@property unsigned int lastActiveCall; // @synthesize lastActiveCall;

- (double)localBitrateForCallID:(unsigned int)arg1;

@property(readonly) int localFrameHeight; // @synthesize localFrameHeight;

@property(readonly) int localFrameWidth; // @synthesize localFrameWidth;

- (double)localFramerateForCallID:(unsigned int)arg1;

- (double)localPacketLossRateForCallID:(unsigned int)arg1;

- (id)loopbackSessionWaitingForSIPInvite;

- (void)markUnfinishedSessions;

- (_Bool)matchesCallID:(unsigned int)arg1;

- (_Bool)matchesIncomingConnectionResult:(struct tagCONNRESULT *)arg1;

- (_Bool)matchesOpenSessionForParticipantID:(id)arg1;

- (_Bool)matchesParticipantID:(id)arg1;

- (int)natType;

- (int)natTypeForCallSessions:(const char *)arg1;

- (double)networkQualityForCallID:(unsigned int)arg1;

- (id)newSession;

- (void)notifyDelegateOfLocalVariablesChange;

- (_Bool)onCaptureFrame:(struct __CVBuffer *)arg1 frameTime:(CDStruct_198678f7)arg2 cameraStatusBits:(unsigned char)arg3;

- (_Bool)onCaptureSound:(char *)arg1 numBytes:(int)arg2 numSamples:(int)arg3 timeStamp:(unsigned int)arg4 timeStampDelta:(int)arg5 bufferedSamples:(int)arg6 hostTime:(double)arg7 averagePower:(float)arg8 voiceActivity:(unsigned int)arg9;

- (_Bool)onPlaySound:(char *)arg1 numBytes:(int)arg2 numSamples:(int)arg3 timeStamp:(unsigned int)arg4 averagePower:(float)arg5;

- (id)openSessionForParticipant:(id)arg1;

@property(readonly, nonatomic) float outputMeterLevel;

- (double)packetLossRateForCallID:(unsigned int)arg1;

@property(nonatomic) int packetsPerBundle; // @synthesize packetsPerBundle;

- (unsigned char)powerFloatToInt:(float)arg1;

- (float)powerIntToFloat:(unsigned char)arg1;

@property(nonatomic) unsigned int preferredCodec; // @synthesize preferredCodec;

- (void)processRelayRequestResponse:(unsigned int)arg1 responseDict:(id)arg2 didOriginateRequest:(_Bool)arg3;

- (void)processRelayUpdate:(unsigned int)arg1 updateDict:(id)arg2 didOriginateRequest:(_Bool)arg3;

- (void)processRemoteIPChange:(id)arg1 callID:(unsigned int)arg2;

- (unsigned int)pruneQuietestPeers:(unsigned int)arg1 talking:(unsigned int)arg2 mask:(unsigned int)arg3 meters:(char *)arg4;

- (int)pullDecodedAsFocus:(char *)arg1 timestamp:(unsigned int)arg2 numBytes:(int)arg3 numSamples:(int)arg4;

- (int)pullDecodedAsFocusClient:(char *)arg1 timestamp:(unsigned int)arg2 numBytes:(int)arg3 numSamples:(int)arg4;

- (int)pullDecodedMeshMode:(char *)arg1 timestamp:(unsigned int)arg2 numBytes:(int)arg3 numSamples:(int)arg4;

@property NSObject<VideoConferenceChannelQualityDelegate> *qualityDelegate;

- (void)rdlock;

- (void)receivedRealTimeData:(id)arg1 fromParticipantID:(id)arg2;

- (_Bool)recvSamplesForSession:(id)arg1 samples:(char *)arg2 numBytes:(int)arg3 numSamples:(int)arg4 storeTimestamp:(unsigned int)arg5;

- (void)remoteAudioDidPause:(_Bool)arg1 callID:(unsigned int)arg2;

- (double)remoteBitrateForCallID:(unsigned int)arg1;

- (void)remoteCancelledCallID:(unsigned int)arg1;

- (struct CGSize)remoteFrameSizeForCallID:(unsigned int)arg1;

- (double)remoteFramerateForCallID:(unsigned int)arg1;

- (double)remotePacketLossRateForCallID:(unsigned int)arg1;

@property(nonatomic) void *remoteVideoBackLayer; // @synthesize remoteVideoBackLayer;

- (void)remoteVideoDidPause:(_Bool)arg1 callID:(unsigned int)arg2;

@property(nonatomic) void *remoteVideoLayer; // @synthesize remoteVideoLayer;

- (int)remoteVideoSlot:(_Bool)arg1;

@property(nonatomic) _Bool requiresWifi; // @synthesize requiresWifi;

- (double)roundTripTimeForCallID:(unsigned int)arg1;

@property(setter=setRTChannel:) NSObject<VideoConferenceRealTimeChannel> *rtChannel; // @synthesize rtChannel;

- (void)sendARPLData:(id)arg1 toCallID:(unsigned int)arg2;

- (void)session:(id)arg1 cancelRelayRequest:(id)arg2;

- (void)session:(id)arg1 didChangeRemoteScreenAttributes:(id)arg2;

- (void)session:(id)arg1 didChangeVideoRule:(id)arg2;

- (void)session:(id)arg1 didReceiveARPLData:(id)arg2 fromCallID:(unsigned int)arg3;

- (void)session:(id)arg1 didSeeThermalChange:(double)arg2;

- (void)session:(id)arg1 didStart:(_Bool)arg2 connectionType:(unsigned int)arg3 localUseCell:(unsigned int)arg4 remoteUseCell:(unsigned int)arg5 error:(id)arg6;

- (void)session:(id)arg1 didStopWithDelay:(long long)arg2 error:(id)arg3;

- (void)session:(id)arg1 didStopWithError:(id)arg2;

- (void)session:(id)arg1 inititiateRelayRequest:(id)arg2;

- (void)session:(id)arg1 packMeters:(char *)arg2 withLength:(char *)arg3;

- (void)session:(id)arg1 receivedNoPacketsForSeconds:(double)arg2;

- (_Bool)session:(id)arg1 receivedRemoteFrame:(struct __CVBuffer *)arg2 atTime:(CDStruct_198678f7)arg3 withScreenAttributes:(id)arg4 videoAttributes:(id)arg5 isFirstFrame:(_Bool)arg6;

- (void)session:(id)arg1 remoteMediaStalled:(_Bool)arg2;

- (void)session:(id)arg1 sendIPChangeRequest:(id)arg2 withCallID:(unsigned int)arg3;

- (void)session:(id)arg1 sendRelayResponse:(id)arg2;

- (_Bool)session:(id)arg1 startVideoIO:(id *)arg2 captureRule:(id)arg3 isUnpausing:(_Bool)arg4;

- (void)session:(id)arg1 withCallID:(unsigned int)arg2 networkHint:(_Bool)arg3;

- (void)session:(id)arg1 withCallID:(unsigned int)arg2 videoIsDegraded:(_Bool)arg3 isRemote:(_Bool)arg4;

- (id)sessionForIncomingConnectionResult:(struct tagCONNRESULT *)arg1;

- (id)sessionForIncomingParticipantID:(id)arg1;

- (id)sessionForParticipantID:(id)arg1;

- (_Bool)setActive:(_Bool)arg1;

- (void)setBWEOptions:(_Bool)arg1 UseNewBWEMode:(_Bool)arg2 FakeLargeFrameMode:(_Bool)arg3 ProbingSenderLog:(_Bool)arg4;

- (void)setCallReport:(unsigned int)arg1 withReport:(id)arg2;

- (void)setCallReportProtobuf:(unsigned int)arg1 withProtobufData:(id)arg2 forMetricID:(long long)arg3;

- (void)setConferenceOperatingMode:(int)arg1;

- (_Bool)setPauseAudio:(_Bool)arg1;

- (_Bool)setPauseAudio:(_Bool)arg1 callID:(unsigned int)arg2 error:(id *)arg3;

- (_Bool)setPauseVideo:(_Bool)arg1;

- (_Bool)setPauseVideo:(_Bool)arg1 callID:(unsigned int)arg2 error:(id *)arg3;

- (void)setPeerCN:(id)arg1 callID:(unsigned int)arg2;

- (void)setSendAudio:(_Bool)arg1 forCallID:(unsigned int)arg2;

- (void)setSessionID:(id)arg1 callID:(unsigned int)arg2;

@property(nonatomic) _Bool shouldPrioritizeParticipantIDForSIPInvite; // @synthesize shouldPrioritizeParticipantIDForSIPInvite;

@property _Bool shouldTimeoutPackets; // @synthesize shouldTimeoutPackets;

@property NSObject<VideoConferenceSpeakingDelegate> *speakingDelegate; // @synthesize speakingDelegate;

@property unsigned int talkingPeersLimit; // @synthesize talkingPeersLimit;

@property int upstreamBandwidth; // @synthesize upstreamBandwidth;

@property(nonatomic) _Bool useCompressedConnectionData; // @synthesize useCompressedConnectionData;

@property(nonatomic) _Bool useViceroyBlobFormat; // @synthesize useViceroyBlobFormat;

- (_Bool)shouldSendAudioForCallID:(unsigned int)arg1;

- (int)sipCallbackNotification:(int)arg1 callID:(unsigned int)arg2 msgIn:(const char *)arg3 msgOut:(char *)arg4 optional:(void *)arg5 confIndex:(int *)arg6;

- (_Bool)startConnectionWithParticipantID:(id)arg1 callID:(unsigned int)arg2 oldCallID:(unsigned int)arg3 usingInviteData:(id)arg4 isCaller:(_Bool)arg5 relayResponseDict:(id)arg6 didOriginateRelayRequest:(_Bool)arg7 capabilities:(id)arg8 error:(id *)arg9;

- (_Bool)startConnectionWithParticipantID:(id)arg1 callID:(unsigned int)arg2 usingInviteData:(id)arg3 isCaller:(_Bool)arg4 capabilities:(id)arg5 error:(id *)arg6;

- (_Bool)startConnectionWithParticipantID:(id)arg1 callID:(unsigned int)arg2 usingInviteData:(id)arg3 isCaller:(_Bool)arg4 relayResponseDict:(id)arg5 didOriginateRelayRequest:(_Bool)arg6 capabilities:(id)arg7 error:(id *)arg8;

- (int)stateForCallID:(unsigned int)arg1;

- (id)statsForCallID:(unsigned int)arg1;

- (void)stopAllCalls:(id)arg1;

- (void)stopCallID:(unsigned int)arg1;

- (void)stopCallID:(unsigned int)arg1 didRemoteCancel:(_Bool)arg2 error:(id)arg3;

- (_Bool)stopVideoIO:(_Bool)arg1 error:(id *)arg2;

- (void)threadSafeCleanupSession:(id)arg1;

- (int)tryrdlock;

- (void)unlock;

- (void)updateMeter:(unsigned char)arg1 forParticipant:(id)arg2 atIndex:(unsigned int)arg3;

- (void)updateMeters:(unsigned short)arg1;

- (_Bool)updateSpeaking:(unsigned int)arg1 timeStamp:(unsigned int)arg2;

- (void)updatedConnectedPeers:(id)arg1;

- (void)updatedMutedPeers:(id)arg1 forParticipantID:(id)arg2;

- (void)warmupForCall:(int)arg1;

- (void)wrlock;



@end


