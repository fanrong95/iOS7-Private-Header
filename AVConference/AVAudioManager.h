/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class AVAudioDevice, NSDictionary, NSMutableArray, NSObject<OS_dispatch_queue>;



__attribute__((visibility("hidden")))

@interface AVAudioManager : NSObject

{

    int direction;

    int audioRefCount;

    int connectionRefCount;

    int internalBlockSize;

    int hardwareSampleRate;

    struct AudioStreamBasicDescription vpioFormat;

    _Bool usingFloat;

    _Bool isGKVoiceChat;

    _Bool enableSpeakerPhone;

    _Bool isUsingSuppression;

    _Bool isTetheredDisplayMode;

    _Bool shouldSetupAudioSession;

    int clientPID;

    NSDictionary *backMicSource;

    NSDictionary *frontMicSource;

    struct _opaque_pthread_mutex_t audioLock;

    NSObject<OS_dispatch_queue> *cmSessionQueue;

    NSObject<OS_dispatch_queue> *inputDeviceQueue;

    struct tagHANDLE *hAUIO;

    AVAudioDevice *targetInputDevice;

    int inferredOperatingMode;

    unsigned int currentVPOperatingMode;

    _Bool currentAudioRecordingMode;

    int currentSampleRate;

    int currentMinSamplesPerFrame;

    _Bool currentReceiverStatus;

    struct AudioEventQueue_t *eventQ;

    NSMutableArray *spkrConfList;

    NSMutableArray *micConfList;

    _Bool micInUse;

    _Bool spkrInUse;

}



+ (id)defaultAVAudioManager;

- (void)AUIOSetup:(struct VoiceIOFarEndVersionInfo *)arg1 minSamplesPerFrame:(int)arg2 allowAudioRecording:(_Bool)arg3 ignoreRefCount:(_Bool)arg4 operatingMode:(int)arg5 completionHandler:(id)arg6;

- (void)AUIOTeardown:(_Bool)arg1;

- (void)addConference:(id)arg1;

- (void)audioSessionClientDied:(int)arg1;

- (void)cleanupAUIOSetupWithResult:(int)arg1 completionHandler:(id)arg2;

@property(nonatomic) int clientPID; // @synthesize clientPID;

- (id)currentInputDevice;

- (void)enableMetering:(_Bool)arg1 isInputMeter:(_Bool)arg2;

- (_Bool)forceBufferFrames:(int *)arg1;

- (_Bool)forceSampleRate:(double *)arg1;

- (void)getVpioFormat:(struct AudioStreamBasicDescription *)arg1;

@property(readonly, nonatomic) int inferredOperatingMode; // @synthesize inferredOperatingMode;

- (id)init;

@property(nonatomic) _Bool isGKVoiceChat; // @synthesize isGKVoiceChat;

@property(getter=isSpeakerPhoneEnabled) _Bool enableSpeakerPhone;

@property(nonatomic) _Bool isUsingSuppression; // @synthesize isUsingSuppression;

- (void)onCaptureSound:(char *)arg1 numBytes:(int)arg2 numSamples:(int)arg3 timeStamp:(unsigned int)arg4 timeStampDelta:(int)arg5 bufferedSamples:(int)arg6 hostTime:(double)arg7 averagePower:(float)arg8 voiceActivity:(unsigned int)arg9;

- (void)onPlaySound:(char *)arg1 numBytes:(int)arg2 numSamples:(int)arg3 timeStamp:(unsigned int)arg4 averagePower:(float)arg5;

- (void)processEventQueue;

- (_Bool)projectionModeEnabledState;

- (void)removeConference:(id)arg1;

- (void)resetAudioSessionProperties;

- (void)setAudioSessionParameters:(id)arg1;

- (void)setAudioSessionProperties;

- (void)setBlockSize:(_Bool)arg1;

- (_Bool)setCurrentInputDevice:(id)arg1;

- (void)setDirection:(int)arg1;

- (void)setMicrophoneMuted:(_Bool)arg1;

- (void)setSampleRate;

- (void)setSamplesPerFrame:(int)arg1;

@property _Bool shouldSetupAudioSession;

@property(retain) AVAudioDevice *targetInputDevice; // @synthesize targetInputDevice;

- (void)setupAudioNotifications;

- (unsigned long long)setupAudioSession;

- (void)setupVPBlockFormat;

- (void)startAudioIOWithFarEndVersionInfo:(struct VoiceIOFarEndVersionInfo *)arg1 minSamplesPerFrame:(int)arg2 internalFormat:(struct AudioStreamBasicDescription)arg3 allowAudioRecording:(_Bool)arg4 operatingMode:(int)arg5 completionHandler:(id)arg6;

- (unsigned long long)startAudioSessionWithCompletionHandler:(id)arg1 dispatchQueue:(void)arg2;

- (void)stopAudioIO;

- (void)stopAudioSession:(unsigned long long)arg1;

- (void)tearDownAudioIO:(_Bool)arg1;

- (void)tearDownAudioSession:(unsigned long long)arg1 forceTearDown:(_Bool)arg2;

@property(readonly, nonatomic) _Bool usingFloat; // @synthesize usingFloat;



@end


