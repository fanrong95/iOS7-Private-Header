/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class CLHeading, CLLocation, NSSet, NSString;



@interface CLLocationManager : NSObject

{

    id _internal;

}



+ (int)_authorizationStatus;

+ (int)_authorizationStatusForBundleIdentifier:(id)arg1 bundle:(id)arg2;

+ (int)_regionMonitoringAuthorizationStatusForBundleIdentifier:(id)arg1 bundle:(id)arg2;

+ (unsigned long long)activeLocationServiceTypesForLocationDictionary:(id)arg1;

+ (_Bool)advertiseAsBeacon:(id)arg1 withPower:(id)arg2;

+ (int)authorizationStatus;

+ (int)authorizationStatusForBundle:(id)arg1;

+ (int)authorizationStatusForBundleIdentifier:(id)arg1;

+ (_Bool)bundleSupported:(id)arg1;

+ (id)dateLocationLastUsedForLocationDictionary:(id)arg1;

+ (_Bool)deferredLocationUpdatesAvailable;

+ (_Bool)dumpLogsWithMessage:(id)arg1;

+ (unsigned long long)entityClassesForLocationDictionary:(id)arg1;

+ (_Bool)hasUsedBackgroundLocationServices:(id)arg1;

+ (_Bool)headingAvailable;

+ (_Bool)isEntityAuthorizedForLocationDictionary:(id)arg1;

+ (_Bool)isLocationActiveForLocationDictionary:(id)arg1;

+ (_Bool)isMonitoringAvailableForClass:(Class)arg1;

+ (_Bool)isRangingAvailable;

+ (_Bool)isStatusBarIconEnabledForLocationEntityClass:(unsigned long long)arg1;

+ (_Bool)locationServicesEnabled;

+ (_Bool)locationServicesEnabled:(_Bool)arg1;

+ (_Bool)mapCorrectionAvailable;

+ (unsigned long long)primaryEntityClassForLocationDictionary:(id)arg1;

+ (int)regionMonitoringAuthorizationStatusForBundle:(id)arg1;

+ (int)regionMonitoringAuthorizationStatusForBundleIdentifier:(id)arg1;

+ (_Bool)regionMonitoringAvailable;

+ (_Bool)regionMonitoringEnabled;

+ (void)setAuthorizationStatus:(_Bool)arg1 forBundle:(id)arg2;

+ (void)setAuthorizationStatus:(_Bool)arg1 forBundleIdentifier:(id)arg2;

+ (void)setDefaultEffectiveBundle:(id)arg1;

+ (void)setDefaultEffectiveBundleIdentifier:(id)arg1;

+ (void)setEntityAuthorized:(_Bool)arg1 forLocationDictionary:(id)arg2;

+ (void)setLocationServicesEnabled:(_Bool)arg1;

+ (void)setStatusBarIconEnabled:(_Bool)arg1 forLocationEntityClass:(unsigned long long)arg2;

+ (id)sharedManager;

+ (_Bool)shutdownDaemon;

+ (_Bool)significantLocationChangeMonitoringAvailable;

@property(nonatomic) long long activityType;

- (void)allowDeferredLocationUpdatesUntilTraveled:(double)arg1 timeout:(double)arg2;

- (id)appsUsingLocation;

- (id)appsUsingLocationWithDetails;

@property(readonly, nonatomic) double bestAccuracy;

- (void)dealloc;

@property(nonatomic) id <CLLocationManagerDelegate> delegate;

@property(nonatomic) double desiredAccuracy;

- (void)disallowDeferredLocationUpdates;

- (void)dismissHeadingCalibrationDisplay;

@property(nonatomic) double distanceFilter;

@property(readonly, nonatomic) double expectedGpsUpdateInterval;

@property(readonly, nonatomic) CLHeading *heading;

@property(readonly, nonatomic) _Bool headingAvailable;

@property(nonatomic) double headingFilter;

@property(nonatomic) int headingOrientation;

- (void)historicLocationsFromDate:(id)arg1 forInterval:(double)arg2;

- (id)init;

- (id)initWithEffectiveBundle:(id)arg1;

- (id)initWithEffectiveBundleIdentifier:(id)arg1;

- (id)initWithEffectiveBundleIdentifier:(id)arg1 bundle:(id)arg2;

@property(readonly, nonatomic) struct __CLClient *internalClient;

@property(nonatomic, getter=isLocationServicesPreferencesDialogEnabled) _Bool locationServicesPreferencesDialogEnabled;

@property(nonatomic, getter=isPersistentMonitoringEnabled) _Bool persistentMonitoringEnabled;

@property(readonly, nonatomic) CLLocation *location;

@property(readonly, nonatomic) _Bool locationServicesApproved;

@property(readonly, nonatomic) _Bool locationServicesAvailable;

@property(readonly, nonatomic) _Bool locationServicesEnabled;

@property(readonly, nonatomic) double maximumRegionMonitoringDistance;

@property(readonly, nonatomic) NSSet *monitoredRegions;

- (void)onClientEvent:(int)arg1 supportInfo:(id)arg2;

- (void)onClientEventAuthStatus:(id)arg1;

- (void)onClientEventAutopauseStatus:(id)arg1;

- (void)onClientEventBatch:(id)arg1;

- (void)onClientEventError:(id)arg1;

- (void)onClientEventHeading:(id)arg1;

- (void)onClientEventHeadingCalibration:(id)arg1;

- (void)onClientEventHistoricLocation:(id)arg1;

- (void)onClientEventInterrupted:(id)arg1;

- (void)onClientEventLocation:(id)arg1;

- (void)onClientEventLocationUnavailable:(id)arg1;

- (void)onClientEventRanging:(id)arg1;

- (void)onClientEventRangingError:(id)arg1;

- (void)onClientEventRegion:(id)arg1;

- (void)onClientEventRegionError:(id)arg1;

- (void)onClientEventRegionResponseDelayed:(id)arg1;

- (void)onClientEventRegionSetupCompleted:(id)arg1;

- (void)onClientEventRegionState:(id)arg1;

- (void)onDidBecomeActive:(id)arg1;

- (void)pauseLocationUpdates:(_Bool)arg1;

@property(nonatomic) _Bool pausesLocationUpdatesAutomatically;

@property(nonatomic) _Bool privateMode;

@property(copy, nonatomic) NSString *purpose;

@property(readonly, nonatomic) NSSet *rangedRegions;

- (void)registerAsLocationClient;

- (void)requestStateForRegion:(id)arg1;

- (void)resetApps;

- (void)resumeLocationUpdates;

@property(nonatomic) _Bool supportInfo;

- (void)startAppStatusUpdates;

- (void)startMonitoringForRegion:(id)arg1;

- (void)startMonitoringForRegion:(id)arg1 desiredAccuracy:(double)arg2;

- (void)startMonitoringSignificantLocationChanges;

- (void)startRangingBeaconsInRegion:(id)arg1;

- (void)startTechStatusUpdates;

- (void)startUpdatingHeading;

- (void)startUpdatingLocation;

- (void)startUpdatingLocationWithPrompt;

- (void)stopAppStatusUpdates;

- (void)stopMonitoringForRegion:(id)arg1;

- (void)stopMonitoringSignificantLocationChanges;

- (void)stopRangingBeaconsInRegion:(id)arg1;

- (void)stopTechStatusUpdates;

- (void)stopUpdatingHeading;

- (void)stopUpdatingLocation;

- (id)technologiesInUse;



@end


