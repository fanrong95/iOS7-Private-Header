/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "NSCopying.h"



__attribute__((visibility("hidden")))

@interface TSUColor : NSObject <NSCopying>

{

    struct CGColor *mCGColor;

}



+ (id)blackColor;

+ (id)blueColor;

+ (id)brownColor;

+ (id)clearColor;

+ (id)colorWithBGR:(unsigned int)arg1;

+ (id)colorWithBGRValue:(long long)arg1;

+ (id)colorWithBinaryRed:(int)arg1 green:(int)arg2 blue:(int)arg3;

+ (id)colorWithBinaryRed:(int)arg1 green:(int)arg2 blue:(int)arg3 alpha:(int)arg4;

+ (id)colorWithCGColor:(struct CGColor *)arg1;

+ (id)colorWithCalibratedHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;

+ (id)colorWithCalibratedRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;

+ (id)colorWithCsColour:(const struct CsColour *)arg1;

+ (id)colorWithDeviceRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;

+ (id)colorWithEshColor:(const struct EshColor *)arg1;

+ (id)colorWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;

+ (id)colorWithPatternImage:(id)arg1;

+ (id)colorWithRGBBytes:(unsigned char)arg1:(unsigned char)arg2:(unsigned char)arg3;

+ (id)colorWithRGBValue:(long long)arg1;

+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;

+ (id)colorWithSystemColorID:(int)arg1;

+ (id)colorWithUIColor:(id)arg1;

+ (id)colorWithWhite:(double)arg1 alpha:(double)arg2;

+ (id)cyanColor;

+ (id)grayColor;

+ (id)greenColor;

+ (id)lightGrayColor;

+ (id)magentaColor;

+ (id)orangeColor;

+ (id)purpleColor;

+ (id)randomColor;

+ (id)redColor;

+ (id)stringForColor:(id)arg1;

+ (id)stringForSystemColorID:(int)arg1;

+ (id)whiteColor;

+ (id)yellowColor;

@property(readonly) struct CGColor *CGColor; // @synthesize CGColor=mCGColor;

- (id)UIColor;

- (double)alphaComponent;

- (id)blendedColorWithFraction:(double)arg1 ofColor:(id)arg2;

- (double)blueComponent;

- (struct CGColor *)cgColorRef;

- (id)colorWithAlphaComponent:(double)arg1;

- (id)colorWithShadeValue:(double)arg1;

- (id)colorWithTintValue:(double)arg1;

- (id)copy;

- (id)copyWithZone:(struct _NSZone *)arg1;

- (struct CsColour)csColour;

- (void)dealloc;

- (struct EshColor)eshColor;

- (void)getRGBBytes:(char *)arg1:(char *)arg2:(char *)arg3;

- (void)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;

- (id)grayscaleColor;

- (double)greenComponent;

- (unsigned long long)hash;

- (id)initWithCGColor:(struct CGColor *)arg1;

- (id)initWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;

- (id)initWithPatternImage:(id)arg1;

- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;

- (id)initWithUIColor:(id)arg1;

- (id)initWithWhite:(double)arg1 alpha:(double)arg2;

- (id)invertedColor;

- (_Bool)isBlack;

- (_Bool)isEqual:(id)arg1;

- (_Bool)isEqualToColor:(id)arg1;

- (_Bool)isOpaque;

- (double)luminance;

- (id)newBlendedColorWithFraction:(double)arg1 ofColor:(id)arg2;

- (id)newSolidColoredBitmap:(struct CGSize)arg1;

- (double)p_rgbComponentWithIndex:(unsigned char)arg1;

- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;

- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;

- (double)redComponent;

- (void)set;

- (id)solidColoredPngImage;

- (unsigned int)toBGR;

- (CDStruct_a06f635e)ttColor;



@end


