/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSObject<OS_dispatch_queue>, NSObject<OS_xpc_object>;



@interface PLGatekeeperClient : NSObject

{

    NSObject<OS_dispatch_queue> *_serialReplyQueue;

    NSObject<OS_xpc_object> *connection;

}



+ (id)securityPolicyErrorForMissingEntitlement:(id)arg1;

+ (id)sharedInstance;

- (void)addAssetWithURL:(id)arg1 toAlbumWithUUID:(id)arg2 handler:(id)arg3;

- (void)addGroupWithName:(id)arg1 handler:(id)arg2;

- (void)analyzeAllMoments;

- (void)analyzeInvalidMomentsAndDupesIfNeeded;

- (void)analyzeMoment:(id)arg1;

- (void)analyzeMomentList:(id)arg1;

- (unsigned long long)attemptToPurgeSharedAssetsSpace:(unsigned long long)arg1;

- (void)automaticallyDeleteEmptyAlbum:(id)arg1;

- (void)batchSaveAssetsWithJobDictionaries:(id)arg1 handler:(id)arg2;

- (void)cleanupForStoreDemoMode;

- (void)cleanupModelAfteriTunesRestore;

- (void)clearAllBulletinsWithLastClearedRecordID:(unsigned long long)arg1;

- (void)clearChangeStore;

@property(nonatomic) NSObject<OS_xpc_object> *connection; // @synthesize connection;

- (void)createPhotoLibraryDatabase;

- (void)createPhotostreamAlbumWithStreamID:(id)arg1;

- (void)dataMigrationWillFinish;

- (void)deleteAssetWithURL:(id)arg1 handler:(id)arg2;

- (id)deviceSpecificReplyQueue;

- (void)downloadAsset:(id)arg1 requestThumbnail:(_Bool)arg2 shouldPrioritize:(_Bool)arg3 shouldExtendTimer:(_Bool)arg4;

- (id)emailAddressForKey:(int)arg1;

- (void)enablePhotostreamsWithStreamID:(id)arg1;

- (long long)estimatedOutputFileLengthForVideoURL:(id)arg1 fallbackFilePath:(id)arg2 exportPreset:(id)arg3 exportProperties:(id)arg4;

- (int)fileDescriptorForAssetURL:(id)arg1;

- (id)fileURLForAssetURL:(id)arg1 withAdjustments:(_Bool)arg2;

- (id)fileURLForNewAssetWithType:(unsigned int)arg1 extension:(id)arg2;

- (void)finalizeOTARestoreRecreatingAlbums:(_Bool)arg1;

- (long long)getCurrentApplicationBadgeCount;

- (id)getCurrentBulletins;

- (int)getCurrentModelVersion;

- (void)getLibrarySizes:(id)arg1;

- (void)getPhotosAndVideosCountWithHandler:(id)arg1;

- (id)getThumbnailImageDataForBulletinWithRecordID:(unsigned long long)arg1;

- (_Bool)hasCompletedMomentAnalysis;

- (_Bool)hasCompletedRestorePostProcessing;

- (id)imageDataForAsset:(id)arg1 format:(int)arg2;

- (void)importFileSystemAssetsWaitingForReply:(_Bool)arg1;

- (id)init;

- (int)keyForEmailAddress:(id)arg1;

- (void)launchAssetsd;

- (void)notifyAboutTerminationDueToUncaughtException:(id)arg1;

- (id)personInfoDictionaryForPersonID:(id)arg1;

- (unsigned long long)purgeableSharedAssetsSpace;

- (void)rebuildAllThumbnails;

- (void)rebuildCloudFeed;

- (void)rebuildMomentLists;

- (void)rebuildMomentsIncremental:(_Bool)arg1;

- (void)recalculateCachedAlbumCounts;

- (void)recoverFromCrashIfNeeded;

- (void)repairPotentialModelCorruption;

- (void)repairSingletonObjects;

@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *replyQueue;

- (void)requestAccessWithHandler:(id)arg1;

- (void)requestImageDataForAsset:(id)arg1 format:(int)arg2 handler:(id)arg3;

- (void)resetDupesAnalysis;

- (void)saveAssetWithJobDictionary:(id)arg1 handler:(id)arg2 imageSurface:(void)arg3 previewImageSurface:(void *)arg4;

- (unsigned long long)secondsNeededToCleanupModelAfteriTunesRestore;

- (void)sendDaemonJob:(id)arg1 replyHandler:(id)arg2;

- (id)sendQueue;

- (void)setExternalUsageIntent:(unsigned long long)arg1 forAssetWithURL:(id)arg2 handler:(id)arg3;

- (void)setLargePreviewImageForAssetWithURL:(id)arg1 imageData:(id)arg2 properties:(id)arg3 handler:(id)arg4;

- (void)setPersonInfoDictionary:(id)arg1 forPersonID:(id)arg2;

- (void)updateCameraPreviewWellImage:(id)arg1;

- (void)updateModelAfterOTARestore;

- (void)updateRestoredAssetWithUUID:(id)arg1 paths:(id)arg2;

- (void)updateSharedAlbumsCachedServerConfigurationLimits;

- (void)updateThumbnailsForPhotos:(id)arg1 waitForReply:(_Bool)arg2 assignNewIndex:(_Bool)arg3 forceRefresh:(_Bool)arg4;

- (id)videoMetadataAtPath:(id)arg1;

- (void)waitUntilConnectionSendsAllMessages;

- (void)writeDataInBackground:(id)arg1 toFileURL:(id)arg2;



@end


