/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class ACAccount, NSDictionary, NSMutableDictionary, NSString;



@interface MFAccount : NSObject

{

    ACAccount *_persistentAccount;

    int _persistentAccountLock;

    NSMutableDictionary *_unsavedAccountProperties;

    NSString *_sourceApplicationBundleIdentifier;

}



+ (id)_accountClass;

+ (id)_basicPropertyForKey:(id)arg1 persistentAccount:(id)arg2;

+ (id)_newPersistentAccount;

+ (_Bool)_setBasicProperty:(id)arg1 forKey:(id)arg2 persistentAccount:(id)arg3;

+ (id)accountPropertiesValueForKey:(id)arg1 value:(id)arg2;

+ (id)accountTypeIdentifier;

+ (id)accountTypeString;

+ (id)accountWithPersistentAccount:(id)arg1;

+ (id)accountWithProperties:(id)arg1;

+ (id)authSchemesForAccountClass;

+ (unsigned int)defaultPortNumber;

+ (unsigned int)defaultSecurePortNumber;

+ (id)displayedAccountTypeString;

+ (id)displayedShortAccountTypeString;

+ (id)existingAccountForUniqueID:(id)arg1;

+ (id)hostname;

+ (_Bool)isCommonPortNumber:(unsigned int)arg1;

+ (_Bool)isPredefinedAccountType;

+ (_Bool)isSSLEditable;

+ (void *)legacyKeychainProtocol;

+ (id)myFullName;

+ (id)newAccountWithDictionary:(id)arg1;

+ (id)predefinedValueForKey:(id)arg1;

+ (id)propertiesWhichRequireValidation;

+ (id)saslProfileName;

+ (id)supportedDataclasses;

+ (_Bool)usesSSL;

- (_Bool)_boolForAccountInfoKey:(id)arg1 defaultValue:(_Bool)arg2;

- (_Bool)_connectAndAuthenticate:(id)arg1;

- (id)_credential;

- (id)_credentialCreateIfNecessary:(_Bool)arg1;

- (id)_credentialCreateIfNecessary:(_Bool)arg1 error:(id *)arg2;

- (id)_newConnection;

- (id)_objectForAccountInfoKey:(id)arg1;

- (id)_password;

- (id)_passwordWithError:(id *)arg1;

- (void)_queueAccountInfoDidChange;

- (void)_setAccountProperties:(id)arg1;

- (_Bool)_shouldTryDirectSSLConnectionOnPort:(unsigned int)arg1;

- (id)accountClass;

@property(readonly) ACAccount *accountForRenewingCredentials;

- (void)accountInfoDidChange;

- (id)accountPropertyForKey:(id)arg1;

- (_Bool)allowsTrustPrompt;

- (id)alternateConnectionSettings;

- (void)applySettingsAsDefault:(id)arg1;

- (id)authenticatedConnection;

- (_Bool)canGoOffline;

- (id)certUIService;

- (id)clientCertificates;

- (Class)connectionClass;

- (struct __CFString *)connectionServiceType;

- (id)copyDiagnosticInformation;

- (id)copyWithZone:(struct _NSZone *)arg1;

- (unsigned long long)credentialAccessibility;

- (id)credentialItemForKey:(id)arg1;

- (id)credentialItemForKey:(id)arg1 error:(id *)arg2;

- (id)customDescriptionForError:(id)arg1 authScheme:(id)arg2 defaultDescription:(id)arg3;

- (id)customTitleForAuthenticationError:(id)arg1 authScheme:(id)arg2 defaultTitle:(id)arg3;

- (id)customTitleForError:(id)arg1 authScheme:(id)arg2 defaultTitle:(id)arg3;

- (void)dealloc;

- (id)defaultConnectionSettings;

- (unsigned int)defaultPortNumber;

- (unsigned int)defaultSecurePortNumber;

@property(retain, nonatomic) NSString *displayName;

- (id)domain;

- (_Bool)enableAccount;

- (id)enabledDataclasses;

- (_Bool)fetchTokensIfNecessary:(id *)arg1;

@property(retain, nonatomic) NSString *hostname;

@property(readonly) NSString *identifier;

- (id)inaccessiblePasswordErrorWithTitle:(id)arg1;

- (id)init;

- (id)initWithPersistentAccount:(id)arg1;

- (id)initWithProperties:(id)arg1;

- (id)insecureConnectionSettings;

- (_Bool)isActive;

- (_Bool)isEnabledForDataclass:(id)arg1;

@property(readonly) NSString *managedTag;

- (id)missingPasswordErrorWithTitle:(id)arg1;

- (id)nameForMailboxUid:(id)arg1;

@property(readonly) ACAccount *parentAccount;

@property(readonly) NSString *parentAccountIdentifier;

- (id)password;

@property(readonly) ACAccount *persistentAccount;

- (void)persistentAccountDidChange:(id)arg1 previousAccount:(id)arg2;

- (unsigned int)portNumber;

- (id)preferredAuthScheme;

- (_Bool)promptUserForPasswordWithTitle:(id)arg1 message:(id)arg2 completionHandler:(id)arg3;

- (_Bool)promptUserForWebLoginWithURL:(id)arg1 shouldConfirm:(_Bool)arg2 completionHandler:(id)arg3;

@property(readonly) NSDictionary *properties;

- (void)releaseAllConnections;

- (void)releaseAllForcedConnections;

- (void)removeAccountPropertyForKey:(id)arg1;

- (void)removePersistentAccount;

- (void)removeValueInAccountPropertiesForKey:(id)arg1;

- (void)reportAuthenticationError:(id)arg1 authScheme:(id)arg2;

- (_Bool)requiresAuthentication;

- (void)savePersistentAccount;

- (id)secureConnectionSettings;

- (id)secureServiceName;

- (id)serviceName;

- (void)setAccountProperty:(id)arg1 forKey:(id)arg2;

- (void)setActive:(_Bool)arg1;

- (void)setClientCertificates:(id)arg1;

- (void)setCredentialItem:(id)arg1 forKey:(id)arg2;

- (_Bool)setCredentialItem:(id)arg1 forKey:(id)arg2 error:(id *)arg3;

- (void)setDomain:(id)arg1;

- (void)setPassword:(id)arg1;

- (void)setPersistentAccount:(id)arg1;

- (void)setPortNumber:(unsigned int)arg1;

- (void)setPreferredAuthScheme:(id)arg1;

@property(copy, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;

- (void)setTryDirectSSL:(_Bool)arg1;

@property(retain, nonatomic) NSString *username;

- (void)setUsesSSL:(_Bool)arg1;

- (void)setValueInAccountProperties:(id)arg1 forKey:(id)arg2;

- (_Bool)shouldDisplayHostnameInErrorMessages;

- (_Bool)shouldEnableAfterError:(id)arg1;

@property(readonly) NSString *syncStoreIdentifier;

@property(readonly) NSString *type;

@property(readonly) NSString *uniqueId;

- (_Bool)usesSSL;

- (void)validateConnections;

- (id)valueInAccountPropertiesForKey:(id)arg1;



@end


