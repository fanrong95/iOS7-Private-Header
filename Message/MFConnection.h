/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSArray, NSData, NSMutableString, NSString, _MFSocket;



@interface MFConnection : NSObject

{

    id <MFSASLSecurityLayer> _securityLayer;

    _MFSocket *_socket;

    double _lastUsedTime;

    char *_buffer;

    long long _bufferRemainingBytes;

    unsigned long long _bufferStart;

    unsigned long long _bufferLength;

    unsigned long long _desiredBufferLength;

    struct z_stream_s *_deflater;

    struct z_stream_s *_inflater;

    char *_zbuffer;

    NSData *_logData;

    unsigned int _dontLogReads;

    unsigned int _readBytesNotLogged;

    NSMutableString *_readBytesToLog;

    unsigned int _isFetching:1;

    unsigned int _allowFallbacks:1;

    unsigned int _compressionEnabled:1;

    unsigned long long _bytesWritten;

    unsigned long long _bytesRead;

}



+ (void)flushLog;

+ (void)initialize;

+ (id)logActivityOnHosts;

+ (id)logActivityOnPorts;

+ (_Bool)logAllSocketActivity;

+ (void)logBytes:(const char *)arg1 length:(int)arg2;

+ (id)logClasses;

+ (void)readLoggingDefaults;

+ (void)setLogActivityOnHosts:(id)arg1;

+ (void)setLogActivityOnPorts:(id)arg1;

+ (void)setLogAllSocketActivity:(_Bool)arg1;

+ (void)setLogClasses:(id)arg1;

+ (_Bool)shouldTryFallbacksAfterError:(id)arg1;

- (void)_setupNetworkLogging;

- (_Bool)authenticateUsingAccount:(id)arg1;

- (_Bool)authenticateUsingAccount:(id)arg1 authenticator:(id)arg2;

@property(readonly, nonatomic) NSArray *authenticationMechanisms;

@property(readonly, nonatomic) unsigned long long bytesRead; // @synthesize bytesRead=_bytesRead;

@property(readonly, nonatomic) unsigned long long bytesWritten; // @synthesize bytesWritten=_bytesWritten;

@property(readonly, nonatomic) NSArray *capabilities;

- (_Bool)connectUsingAccount:(id)arg1;

- (_Bool)connectUsingFallbacksForAccount:(id)arg1;

- (_Bool)connectUsingSettings:(id)arg1;

- (void)dealloc;

- (id)description;

- (void)disconnect;

- (void)enableExcessiveKeepaliveDetection:(_Bool)arg1;

- (void)enableReadLogging:(_Bool)arg1;

- (void)enableThroughputMonitoring:(_Bool)arg1;

@property(readonly, nonatomic) _Bool hasBytesAvailable;

@property(readonly, nonatomic) _Bool isCellularConnection;

@property(nonatomic) _Bool isFetching;

@property(readonly, nonatomic) _Bool isValid;

@property(readonly, nonatomic) double lastUsedTime;

- (void)logReadChars:(const char *)arg1 length:(unsigned long long)arg2;

@property(readonly, nonatomic) _Bool loginDisabled;

- (_Bool)readBytesIntoData:(id)arg1 desiredLength:(unsigned long long)arg2;

- (_Bool)readLineIntoData:(id)arg1;

@property(readonly, nonatomic) NSString *securityProtocol;

- (void)setAllowsFallbacks:(_Bool)arg1;

- (void)setDesiredReadBufferLength:(unsigned long long)arg1;

- (_Bool)startCompression;

- (_Bool)startTLSForAccount:(id)arg1;

@property(readonly, nonatomic) _Bool usesOpportunisticSockets;

- (_Bool)writeBytes:(const char *)arg1 length:(unsigned long long)arg2 dontLogBytesInRange:(struct _NSRange)arg3;

- (_Bool)writeData:(id)arg1;

- (_Bool)writeData:(id)arg1 dontLogBytesInRange:(struct _NSRange)arg2;



@end


