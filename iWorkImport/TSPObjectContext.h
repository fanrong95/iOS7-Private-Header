/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "TSPDocumentResourceDownloader.h"

#import "TSPFileCoordinatorDelegate.h"

#import "TSPLazyReferenceDelegate.h"

#import "TSPObjectDelegate.h"

#import "TSPPassphraseConsumer.h"

#import "TSPSupportDirectoryDelegate.h"



@class NSData, NSMapTable, NSMutableArray, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSRecursiveLock, NSString, NSURL, NSUUID, SFUCryptoKey, TSPComponentManager, TSPDataManager, TSPDocumentProperties, TSPDocumentResourceDataProvider, TSPDocumentResourceManager, TSPDocumentSaveOperationState, TSPObject, TSPObjectContainer, TSPPackageWriteCoordinator, TSPSupportManager, TSUTemporaryDirectory;



__attribute__((visibility("hidden")))

@interface TSPObjectContext : NSObject <TSPFileCoordinatorDelegate, TSPObjectDelegate, TSPLazyReferenceDelegate, TSPSupportDirectoryDelegate, TSPDocumentResourceDownloader, TSPPassphraseConsumer>

{

    long long _lastObjectIdentifier;

    long long _modifyObjectToken;

    int _modifyObjectCount;

    unsigned int _mode;

    SFUCryptoKey *_decryptionKey;

    NSURL *_documentURL;

    NSURL *_supportURL;

    TSPDocumentProperties *_documentProperties;

    NSMapTable *_objects;

    NSObject<OS_dispatch_queue> *_objectsQueue;

    NSObject<OS_dispatch_queue> *_writeQueue;

    NSRecursiveLock *_readLock;

    NSObject<OS_dispatch_queue> *_documentStateQueue;

    NSObject<OS_dispatch_queue> *_loadObserversQueue;

    NSObject<OS_dispatch_queue> *_runLoadObserversQueue;

    NSObject<OS_dispatch_queue> *_documentResourceDataProviderQueue;

    TSPDocumentResourceDataProvider *_documentResourceDataProvider;

    TSPDocumentSaveOperationState *_saveOperationState;

    TSPPackageWriteCoordinator *_packageWriteCoordinator;

    NSMutableArray *_pasteboardWriteCoordinators;

    _Bool _isWaitingForEndSave;

    NSObject<OS_dispatch_group> *_pendingEndSaveGroup;

    NSObject<OS_dispatch_group> *_outstandingReadsGroup;

    NSObject<OS_dispatch_queue> *_temporaryDirectoryQueue;

    TSUTemporaryDirectory *_temporaryDirectory;

    struct hash_map<const long long, NSMutableArray *, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *>>> _loadObservers;

    TSPObject *_supportObject;

    TSPPackageWriteCoordinator *_supportWriteCoordinator;

    NSString *_savedPassphrase;

    _Bool _shouldSavePassphrase;

    _Bool _isDocumentModified;

    _Bool _isSupportModified;

    _Bool _isPasswordProtected;

    NSString *_documentPasswordHint;

    TSPObject *_documentObject;

    id <TSPObjectContextDelegate> _delegate;

    TSPDocumentResourceDataProvider *_gilligan_documentResourceDataProvider;

    TSPDocumentResourceManager *_documentResourceManager;

    TSPComponentManager *_componentManager;

    TSPDataManager *_dataManager;

    TSPSupportManager *_supportManager;

    id <TSPPackage> _documentPackage;

    id <TSPPackage> _supportPackage;

    TSPObjectContainer *_documentObjectContainer;

    TSPObjectContainer *_supportObjectContainer;

    NSData *_passwordVerifier;

}



+ (_Bool)canCreateInstanceFromURL:(id)arg1;

+ (void)garbageCollectDocumentSupportWithKnownDocumentUUIDs:(id)arg1 delegate:(id)arg2;

+ (_Bool)isNativeFormatURL:(id)arg1;

+ (_Bool)isPassphraseRequiredToInitWithURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3 passphrase:(id *)arg4;

+ (_Bool)isTangierEditingFormatURL:(id)arg1;

+ (void)removeDefaultSupportDirectory;

+ (id)requestDownloadingDocumentResourcesForURL:(id)arg1 decryptionKey:(id)arg2;

+ (_Bool)requestDownloadingDocumentResourcesForURL:(id)arg1 decryptionKey:(id)arg2 usingDataProvider:(id)arg3;

+ (id)supportBundleURLForUUID:(id)arg1 delegate:(id)arg2;

+ (id)supportURLForDocumentURL:(id)arg1 coordinateRead:(_Bool)arg2 delegate:(id)arg3 error:(id *)arg4;

+ (id)updateDocumentUUIDForDocumentURL:(id)arg1 preserveOriginalDocumentSupport:(_Bool)arg2 coordinateWrite:(_Bool)arg3 filePresenter:(id)arg4 delegate:(id)arg5 error:(id *)arg6;

+ (void)waitForPendingEndSaveGroup:(id)arg1;

- (id).cxx_construct;

- (void).cxx_destruct;

- (void)addLoadObserver:(id)arg1 action:(SEL)arg2 forLazyReference:(id)arg3;

- (void)addLoadObserver:(id)arg1 action:(SEL)arg2 forObjectIdentifier:(long long)arg3 objectOrNil:(id)arg4;

- (id)addLoadedObjectsAndEnqueueNotifications:(id)arg1;

- (_Bool)areExternalReferencesSupported;

- (_Bool)areExternalReferencesToDataAllowedAtURL:(id)arg1;

@property(readonly, nonatomic) _Bool areNewExternalReferencesToDataAllowed;

- (void)beginAssertOnModify;

- (void)beginIgnoringCachedObjectEviction;

- (id)beginPasteboardWrite;

- (void)beginSaveToURL:(id)arg1 updateType:(unsigned long long)arg2;

- (void)beginSaveToURL:(id)arg1 updateType:(unsigned long long)arg2 documentUUID:(id)arg3;

- (void)beginWriteOperation;

- (void)beginWriteWithOriginalURL:(id)arg1;

- (void)beginWriteWithOriginalURL:(id)arg1 relativeURLForExternalData:(id)arg2;

- (void)cancelDownloads;

- (void)checkforDataWarningsWithPackageURL:(id)arg1;

- (void)cleanUpAfterSuccessfulWrite;

- (void)close;

@property(readonly, nonatomic) TSPComponentManager *componentManager; // @synthesize componentManager=_componentManager;

- (_Bool)containsDataConformingToUTI:(id)arg1;

@property(readonly, nonatomic) TSPObjectContext *context;

@property(readonly, nonatomic) TSPDataManager *dataManager; // @synthesize dataManager=_dataManager;

- (id)dataOrNilForIdentifier:(long long)arg1;

- (id)dataWithContentsOfPackagePath:(id)arg1;

- (void)dealloc;

@property(readonly, nonatomic) SFUCryptoKey *decryptionKey;

@property(nonatomic) __weak id <TSPObjectContextDelegate> delegate; // @synthesize delegate=_delegate;

- (_Bool)didFinishSuccessfullyReadingObjects:(id)arg1 finalizeHandlerQueue:(id)arg2;

- (void)didFinishUsingDocumentResourceDataProvider:(id)arg1 withSuccess:(_Bool)arg2;

- (void)didMoveSupportToURL:(id)arg1;

- (void)didMoveToURL:(id)arg1;

- (void)didReadDocumentObject:(id)arg1;

@property(readonly, nonatomic) _Bool documentHasCurrentFileFormatVersion;

@property(readonly, nonatomic) TSPObject *documentObject; // @synthesize documentObject=_documentObject;

@property(retain, nonatomic) TSPObjectContainer *documentObjectContainer; // @synthesize documentObjectContainer=_documentObjectContainer;

@property(readonly, nonatomic) id <TSPPackage> documentPackage; // @synthesize documentPackage=_documentPackage;

@property(copy, nonatomic) NSString *documentPasswordHint; // @synthesize documentPasswordHint=_documentPasswordHint;

@property(readonly, nonatomic) TSPDocumentProperties *documentProperties; // @synthesize documentProperties=_documentProperties;

@property(readonly, nonatomic) TSPDocumentResourceManager *documentResourceManager; // @synthesize documentResourceManager=_documentResourceManager;

- (id)documentRoot;

@property(readonly, nonatomic) NSURL *documentURL;

@property(readonly, nonatomic) NSUUID *documentUUID;

- (id)downloadWithDelegate:(id)arg1 description:(id)arg2;

- (void)endAssertOnModify;

- (void)endIgnoringCachedObjectEviction;

- (void)endPasteboardWriteWithCoordinator:(id)arg1;

- (void)endSaveWithSuccess:(_Bool)arg1;

- (void)endWriteOperation;

- (void)endWriteWithSuccess:(_Bool)arg1;

- (void)enumerateDocumentResourcesUsingBlock:(id)arg1;

@property(readonly, nonatomic) long long estimatedDownloadSize;

@property(retain, nonatomic) TSPDocumentResourceDataProvider *gilligan_documentResourceDataProvider; // @synthesize gilligan_documentResourceDataProvider=_gilligan_documentResourceDataProvider;

@property(readonly, nonatomic) _Bool ignoreDocumentResourcesWhileReading;

@property(readonly, nonatomic) _Bool ignoreDocumentSupport;

@property(readonly, nonatomic) _Bool ignoreUnknownContentWhileReading;

@property(readonly, nonatomic) _Bool ignoreVersionCheckingWhileReading;

- (long long)incrementLastObjectIdentifier:(long long)arg1;

- (id)init;

- (id)initForQuickLookWithURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3 passphrase:(id)arg4;

- (id)initForSpotlightWithURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;

- (id)initWithDelegate:(id)arg1;

- (id)initWithDelegate:(id)arg1 documentResourceManager:(id)arg2;

- (id)initWithURL:(id)arg1 delegate:(id)arg2 documentResourceManager:(id)arg3 mode:(unsigned int)arg4 error:(id *)arg5 passphrase:(id)arg6;

- (id)initWithURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;

- (id)initWithURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3 passphrase:(id)arg4;

- (id)initWithURL:(id)arg1 delegate:(id)arg2 mode:(unsigned int)arg3 error:(id *)arg4 passphrase:(id)arg5;

@property(nonatomic) _Bool isDocumentModified; // @synthesize isDocumentModified=_isDocumentModified;

@property(readonly, nonatomic) _Bool isDocumentSupportTemporary;

@property(readonly, nonatomic) _Bool isEstimatedDownloadSizePrecise;

@property(nonatomic) _Bool isPasswordProtected; // @synthesize isPasswordProtected=_isPasswordProtected;

@property(nonatomic) _Bool isSupportModified; // @synthesize isSupportModified=_isSupportModified;

@property(readonly, nonatomic) NSData *keychainGenericItem;

@property(nonatomic) long long lastObjectIdentifier;

- (long long)modifyObjectTokenForNewObject;

@property(readonly, nonatomic) _Bool needsDownload;

- (id)newDocumentResourceDataProvider;

- (long long)newObjectIdentifier;

- (id)objectForIdentifier:(long long)arg1;

- (id)p_popSavedPassphrase;

@property(readonly, nonatomic) NSString *passphraseHint;

@property(retain, nonatomic) NSData *passwordVerifier; // @synthesize passwordVerifier=_passwordVerifier;

- (id)peekNextVersionUUID;

- (void)performReadOperation:(id)arg1;

- (void)performReadOperationOnKnownObjects:(id)arg1;

- (void)performReadUsingAccessor:(id)arg1;

- (void)performReadUsingAccessorImpl:(id)arg1;

- (void)prepareForDocumentReplacement;

- (void)prepareForDocumentReplacementWithSuccess:(_Bool)arg1 forSafeSave:(_Bool)arg2;

- (_Bool)readComponent:(id)arg1 isWeakReference:(_Bool)arg2 rootObject:(id *)arg3 documentPackage:(id)arg4 supportPackage:(id)arg5 error:(id *)arg6;

- (_Bool)readComponent:(id)arg1 isWeakReference:(_Bool)arg2 rootObject:(id *)arg3 error:(id *)arg4;

- (_Bool)readDocumentObjectFromDatabasePackageURL:(id)arg1 error:(id *)arg2;

- (_Bool)readDocumentObjectFromPackageURL:(id)arg1 error:(id *)arg2;

- (_Bool)readLazyReference:(id)arg1 object:(id *)arg2 error:(id *)arg3;

- (_Bool)readObjectForIdentifier:(long long)arg1 isWeakReference:(_Bool)arg2 rootObjectComponent:(id)arg3 object:(id *)arg4 error:(id *)arg5;

- (id)readObjectIfNeededForIdentifier:(long long)arg1 isWeakReference:(_Bool)arg2 componentIdentifier:(long long)arg3;

- (void)readSupportObjectWithDocumentResourceDataProvider:(id)arg1 areExternalDataReferencesAllowed:(_Bool)arg2;

- (_Bool)readWithReadCoordinator:(id)arg1 finalizeHandlerQueue:(id)arg2 rootObject:(id *)arg3 error:(id *)arg4 readCompletion:(id)arg5;

- (void)removePassphraseVerifierAndHintFromDocumentURL:(id)arg1;

- (void)replaceDocumentObject:(id)arg1;

- (void)resumeLoadingModifiedFlushedComponents;

- (void)runObjectNotificationsInQueue:(id)arg1;

- (_Bool)saveToURL:(id)arg1 encryptionKey:(id)arg2 originalURL:(id)arg3 documentUUID:(id)arg4 error:(id *)arg5;

- (_Bool)saveToURL:(id)arg1 encryptionKey:(id)arg2 originalURL:(id)arg3 error:(id *)arg4;

@property(readonly, nonatomic) NSString *service;

- (void)setDocumentObject:(id)arg1;

- (_Bool)setPassphrase:(id)arg1;

@property(retain, nonatomic) TSPObject *supportObject;

@property(retain, nonatomic) TSPObjectContainer *supportObjectContainer; // @synthesize supportObjectContainer=_supportObjectContainer;

- (void)setSupportObjectImpl:(id)arg1;

- (id)supportDirectoryURL;

@property(readonly, nonatomic) TSPSupportManager *supportManager; // @synthesize supportManager=_supportManager;

@property(readonly, nonatomic) id <TSPPackage> supportPackage; // @synthesize supportPackage=_supportPackage;

- (void)suspendLoadingModifiedFlushedComponentsAndWait;

- (id)temporaryDirectory;

- (_Bool)updateDocumentUUIDPreserveOriginalDocumentSupport:(_Bool)arg1 error:(id *)arg2;

- (long long)updateModifyObjectToken;

@property(readonly, nonatomic) NSUUID *versionUUID;

- (void)waitForSaveToFinishIfNeeded;

- (_Bool)willDocumentRequirePasswordWithURL:(id)arg1 error:(id *)arg2;

- (void)willModifyObject:(id)arg1 duringReadOperation:(_Bool)arg2;

- (_Bool)writeToURL:(id)arg1 encryptionKey:(id)arg2 error:(id *)arg3;

- (_Bool)writeToURL:(id)arg1 originalPackage:(id)arg2 supportURL:(id)arg3 originalSupportPackage:(id)arg4 encryptionKey:(id)arg5 error:(id *)arg6;



@end


