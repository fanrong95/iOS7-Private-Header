/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSHashTable, NSMapTable, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSString, TSPArchiverManager, TSPComponent, TSPObject;



__attribute__((visibility("hidden")))

@interface TSPComponentWriter : NSObject

{

    TSPComponent *_component;

    NSString *_locator;

    TSPObject *_rootObject;

    id <TSPComponentWriterDelegate> _delegate;

    long long _mode;

    unsigned char _packageIdentifier;

    id <TSPComponentWriteChannel> _writeChannel;

    TSPArchiverManager *_archiverManager;

    NSObject<OS_dispatch_queue> *_globalConcurrentQueue;

    NSObject<OS_dispatch_semaphore> *_delegateSemaphore;

    NSHashTable *_archivedObjects;

    NSMapTable *_archivedObjectsDictionary;

    struct vector<TSP::ObjectStackEntry, std::__1::allocator<TSP::ObjectStackEntry>> _objectStack;

    NSObject<OS_dispatch_group> *_writeGroup;

    NSObject<OS_dispatch_queue> *_writeQueue;

    NSHashTable *_weakReferences;

    NSHashTable *_lazyReferences;

    NSHashTable *_dataReferences;

    unsigned long long _readVersion;

    unsigned long long _writeVersion;

    NSHashTable *_analyzedCommandToModelReferences;

    NSHashTable *_commandToModelReferences;

    NSHashTable *_newCommandToModelReferences;

    NSHashTable *_indirectCommandToModelExternalReferences;

    NSHashTable *_externalReferences;

    struct {

        unsigned int success:1;

        unsigned int isErrorRecoverable:1;

        unsigned int delegateRespondsToNeedsDocumentRecovery:1;

        unsigned int delegateRespondsToLocatorForClaimingComponent:1;

        unsigned int delegateRespondsToObjectBelongsToLinkedComponent:1;

        unsigned int delegateRespondsToExternalPackageDidWriteObject:1;

        unsigned int delegateRespondsToShouldDelayWritingObject:1;

    } _flags;

}



- (id).cxx_construct;

- (void).cxx_destruct;

- (void)addCommandToModelReferences:(id)arg1 parentObject:(id)arg2;

- (void)analyzeCommandToModelReference:(id)arg1 isAnalyzingExternalComponent:(_Bool)arg2 archiver:(id)arg3 completion:(id)arg4;

- (_Bool)canSkipArchivingStronglyReferencedObject:(id)arg1 fromComponentRootObject:(id)arg2;

- (id)commandToModelReferencesToWrite;

@property(readonly, nonatomic) TSPComponent *component; // @synthesize component=_component;

- (id)init;

- (id)initWithComponent:(id)arg1 locator:(id)arg2 rootObject:(id)arg3 delegate:(id)arg4 mode:(long long)arg5 packageIdentifier:(unsigned char)arg6 writeChannel:(id)arg7 archiverManager:(id)arg8;

- (_Bool)isObjectExternal:(id)arg1 parentObject:(id)arg2 validateAmbiguousObjectOwnership:(_Bool)arg3 claimingComponent:(id *)arg4 isOwnedByDifferentPackage:(_Bool *)arg5;

- (_Bool)isObjectExternalBecauseItAlreadyBelongsToAnotherComponent:(id)arg1 parentObject:(id)arg2 claimingComponent:(id *)arg3 claimingPackageIdentifier:(unsigned char *)arg4 claimingComponentWillBeLinked:(_Bool *)arg5;

@property(readonly, nonatomic) unsigned long long readVersion; // @synthesize readVersion=_readVersion;

- (_Bool)shouldAnalyzeCommandToModelReference:(id)arg1 isAnalyzingExternalComponent:(_Bool)arg2;

- (_Bool)shouldDelayWritingObject:(id)arg1;

- (_Bool)shouldWriteObject:(id)arg1;

- (void)validateAmbiguousObjectOwnershipForObject:(id)arg1 parentObject:(id)arg2 claimingComponent:(id)arg3 claimingPackageIdentifier:(unsigned char)arg4 claimingComponentWillBeLinked:(_Bool)arg5;

- (void)validateExplicitComponentOwnershipForObject:(id)arg1 parentObject:(id)arg2;

- (_Bool)validateObjectContextForObject:(id)arg1;

- (void)writeArchiver:(id)arg1;

- (void)writeObject:(id)arg1 archiver:(id)arg2 parentObject:(id)arg3 completion:(id)arg4;

- (void)writeObjects:(id)arg1 parentObject:(id)arg2 isCommandToModelReference:(_Bool)arg3 isAnalyzingExternalComponent:(_Bool)arg4 completion:(id)arg5;

@property(readonly, nonatomic) unsigned long long writeVersion; // @synthesize writeVersion=_writeVersion;

- (void)writeWithCompletionQueue:(id)arg1 completion:(id)arg2;



@end


