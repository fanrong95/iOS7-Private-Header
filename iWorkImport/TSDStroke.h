/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "NSCopying.h"

#import "NSMutableCopying.h"

#import "TSDMixing.h"

#import "TSDPathPainter.h"

#import "TSSThemeAsset.h"



@class TSDStrokePattern, TSUColor;



__attribute__((visibility("hidden")))

@interface TSDStroke : NSObject <TSSThemeAsset, TSDPathPainter, TSDMixing, NSCopying, NSMutableCopying>

{

    TSUColor *mColor;

    double mWidth;

    double mActualWidth;

    int mCap;

    int mJoin;

    TSDStrokePattern *mPattern;

    double mMiterLimit;

}



+ (_Bool)canMixWithNilObjects;

+ (id)emptyStroke;

+ (id)instanceWithArchive:(const struct StrokeArchive *)arg1 unarchiver:(id)arg2;

+ (Class)mutableClass;

+ (id)p_newEmptyStroke;

+ (id)p_newStroke;

+ (id)stroke;

+ (id)strokeWithColor:(id)arg1 width:(double)arg2;

+ (id)strokeWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5;

- (void)aaDefeatedPaintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5;

@property(nonatomic) double actualWidth; // @synthesize actualWidth=mActualWidth;

- (void)applyInteriorWrapPropertiesToContext:(struct CGContext *)arg1 insideStroke:(_Bool)arg2;

- (void)applyToCAShapeLayer:(id)arg1 insideStroke:(_Bool)arg2 withScale:(double)arg3;

- (void)applyToCAShapeLayer:(id)arg1 withScale:(double)arg2;

- (void)applyToContext:(struct CGContext *)arg1;

- (void)applyToContext:(struct CGContext *)arg1 insideStroke:(_Bool)arg2;

- (void)applyToRepCALayer:(id)arg1 withScale:(double)arg2;

- (struct CGRect)boundsForLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 transform:(struct CGAffineTransform)arg5;

- (struct CGRect)boundsForPath:(id)arg1;

- (_Bool)canApplyDirectlyToRepCALayer;

- (_Bool)canApplyToCAShapeLayer;

@property(nonatomic) int cap; // @synthesize cap=mCap;

@property(retain, nonatomic) TSUColor *color; // @synthesize color=mColor;

- (id)colorForCGContext:(struct CGContext *)arg1;

- (id)copyWithZone:(struct _NSZone *)arg1;

@property(readonly, nonatomic) double dashSpacing;

- (void)dealloc;

- (id)description;

@property(readonly, nonatomic) _Bool dontClearBackground;

- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;

- (_Bool)drawsInOneStep;

@property(readonly, nonatomic) _Bool drawsOutsideStrokeBounds;

@property(readonly, nonatomic) _Bool empty;

- (unsigned long long)hash;

- (id)init;

- (id)initWithArchive:(const struct StrokeArchive *)arg1 unarchiver:(id)arg2;

- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5;

- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(double)arg6;

@property(readonly, nonatomic) _Bool isDash;

- (_Bool)isEqual:(id)arg1;

- (_Bool)isEqualToStroke:(id)arg1;

@property(readonly, nonatomic) _Bool isFrame;

@property(readonly, nonatomic) _Bool isNearlyWhite;

@property(readonly, nonatomic) _Bool isNullStroke;

@property(readonly, nonatomic) _Bool isRoundDash;

- (_Bool)isThemeEquivalent:(id)arg1;

@property(nonatomic) int join; // @synthesize join=mJoin;

- (double)lineEndInsetAdjustment;

- (SEL)mapThemeAssetSelector;

@property(nonatomic) double miterLimit; // @synthesize miterLimit=mMiterLimit;

- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;

- (long long)mixingTypeWithObject:(id)arg1;

- (id)mutableCopyWithZone:(struct _NSZone *)arg1;

- (_Bool)needsToExtendJoinsForBoundsCalculation;

@property(readonly, nonatomic) struct _TSDStrokeOutsets outsets;

- (void)p_setPatternPropertiesFromStroke:(id)arg1;

- (void)p_setPropertiesFromStroke:(id)arg1;

- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5;

- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5 useFastDrawing:(_Bool)arg6;

- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;

- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3;

- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4;

- (void)paintPathWithNormalClip:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3;

- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;

- (void)paintRect:(struct CGRect)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3;

- (id)pathForLineEnd:(id)arg1 wrapPath:(_Bool)arg2 atPoint:(struct CGPoint)arg3 atAngle:(double)arg4 withScale:(double)arg5;

@property(retain, nonatomic) TSDStrokePattern *pattern; // @synthesize pattern=mPattern;

- (_Bool)prefersToApplyToCAShapeLayerDuringManipulation;

- (void)saveToArchive:(struct StrokeArchive *)arg1 archiver:(id)arg2;

@property(nonatomic) double width; // @synthesize width=mWidth;

- (_Bool)shouldAntialiasDefeat;

@property(readonly, nonatomic) _Bool shouldRender;

@property(readonly, nonatomic) _Bool solid;

- (id)strokeByTransformingByTransform:(struct CGAffineTransform)arg1;

- (id)strokeLineEnd:(id)arg1;

@property(readonly, nonatomic) double suggestedMinimumLineWidth;

@property(readonly, nonatomic) _Bool supportsColor;

@property(readonly, nonatomic) _Bool supportsLineOptions;

@property(readonly, nonatomic) _Bool supportsPattern;

@property(readonly, nonatomic) _Bool supportsWidth;



@end


