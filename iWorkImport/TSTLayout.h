/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "TSWPTextHostLayout.h"


#import "TSKSearchTarget.h"

#import "TSWPColumnMetrics.h"

#import "TSWPLayoutParent.h"

#import "TSWPStorageObserver.h"



@class TSTEditingState, TSTLayoutHint, TSTLayoutSpaceBundle, TSTMasterLayout, TSTTableInfo, TSTTableModel, TSWPLayout, TSWPPadding;



__attribute__((visibility("hidden")))

@interface TSTLayout : TSWPTextHostLayout <TSKSearchTarget, TSWPColumnMetrics, TSWPLayoutParent, TSWPStorageObserver>

{

    TSTMasterLayout *mMasterLayout;

    TSTLayoutHint *mLayoutHint;

    struct CGRect mCanvasVisibleRect;

    struct CGRect mPreviousVisibleStrokeFrame;

    _Bool mProcessChangesFiltering;

    _Bool mTabsVisible;

    _Bool mTableNameVisibilityIsValid;

    _Bool mTableNameVisible;

    _Bool mNewCanvasRevealedHorizontally;

    _Bool mNewCanvasRevealedVertically;

    _Bool mLayoutDirectionIsLeftToRight;

    TSTLayoutSpaceBundle *mSpaceBundle;

    struct {

        double tableNameHeight;

        struct CGSize scaleToFitParent;

        struct CGSize scaleToFitEnclosingTextColumn;

    } mCached;

    struct CGRect mRenderingFrameForLayoutGeometryFromInfo;

    TSWPLayout *mContainedTextEditingLayout;

    struct UIEdgeInsets mCachedPaddingForEditingCell;

    struct CGRect mComputedEditingCellContentFrame;

    int mCachedVerticalAlignmentForEditingCell;

    struct CGSize mTableSizeWithoutStrokes;

    struct CGSize mStrokeDelta;

    struct CGSize mCapturedStrokeFrameSizeForInline;

    CDStruct_5f1f7aa9 mEditingSpillingTextRange;

    int mContainedTextEditorParagraphAlignment;

    _Bool mContainedTextEditorTextWraps;

    _Bool mContainedTextEditorSpills;

    struct CGSize mSpillingTextSize;

    int mCoordinatesChangedMaskForChrome;

}



- (id).cxx_construct;

- (id)additionalGuides;

@property(readonly, nonatomic) struct CGSize adjustedInsets;

- (struct CGRect)alignmentFrame;

- (struct CGRect)alignmentFrameForProvidingGuidesInRoot;

@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;

- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;

- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;

- (void)beginResize;

- (void)bezierPathsForCellRegion:(id)arg1 transform:(struct CGAffineTransform)arg2 viewScale:(double)arg3 inset:(double)arg4 block:(id)arg5;

- (struct CGPoint)calculatePointFromSearchReference:(id)arg1;

- (_Bool)canAspectRatioLockBeChangedByUser;

- (_Bool)canRotateChildLayout:(id)arg1;

- (struct CGPoint)capturedInfoPositionForAttachment;

- (id)childSearchTargets;

- (id)children;

@property(readonly, nonatomic) unsigned long long columnCount;

@property(readonly, nonatomic) _Bool columnsAreLeftToRight;

- (id)computeLayoutGeometry;

@property(readonly, nonatomic) struct CGRect computedEditingCellContentFrame;

@property(retain, nonatomic) TSWPLayout *containedTextEditingLayout; // @synthesize containedTextEditingLayout=mContainedTextEditingLayout;

- (void)dealloc;

- (id)dependentLayouts;

- (id)dependentsOfTextLayout:(id)arg1;

@property(readonly, nonatomic) CDStruct_5f1f7aa9 editingSpillingTextRange; // @synthesize editingSpillingTextRange=mEditingSpillingTextRange;

@property(readonly, nonatomic) TSTEditingState *editingState;

- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;

- (_Bool)inFindReplaceMode;

- (_Bool)inPrintPreviewMode;

- (struct CGPoint)infoGeometryPositionForCurrentAttachedLayoutGeometry;

- (id)initWithInfo:(id)arg1;

- (id)initWithInfo:(id)arg1 layoutHint:(id)arg2;

- (id)initialInfoGeometry;

- (struct CGSize)initialTextSize;

- (void)invalidate;

- (void)invalidateForAutosizingTextLayout:(id)arg1;

- (void)invalidateSize;

- (void)invalidateTableNameVisibility;

- (_Bool)isBeingManipulated;

- (_Bool)isZoomedEditing;

@property(readonly, nonatomic) _Bool layoutDirectionIsLeftToRight; // @synthesize layoutDirectionIsLeftToRight=mLayoutDirectionIsLeftToRight;

- (id)layoutGeometryFromInfo;

@property(retain, nonatomic) TSTLayoutHint *layoutHint; // @synthesize layoutHint=mLayoutHint;

@property(readonly, nonatomic) TSWPPadding *layoutMargins;

- (void)layoutSearchForAnnotationWithHitBlock:(id)arg1;

- (void)layoutSearchForSpellingErrorsWithHitBlock:(id)arg1 stop:(void)arg2;

- (void)layoutSearchForString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(id)arg3;

- (struct CGRect)maskRectForTextLayout:(id)arg1;

@property(nonatomic) TSTMasterLayout *masterLayout; // @synthesize masterLayout=mMasterLayout;

- (double)maxAutoGrowWidthForTextLayout:(id)arg1;

- (struct CGSize)minimumSize;

- (int)naturalAlignmentForTextLayout:(id)arg1;

@property(nonatomic) _Bool newCanvasRevealedHorizontally; // @synthesize newCanvasRevealedHorizontally=mNewCanvasRevealedHorizontally;

@property(nonatomic) _Bool newCanvasRevealedVertically; // @synthesize newCanvasRevealedVertically=mNewCanvasRevealedVertically;

- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;

- (void)offsetGeometryBy:(struct CGPoint)arg1;

- (_Bool)orderedBefore:(id)arg1;

- (struct CGRect)p_computeSpillingTextFrameForLayout:(id)arg1 textSize:(struct CGSize)arg2 editingSpillRange:(CDStruct_5f1f7aa9 *)arg3;

- (int)p_defaultAlignmentForTableWritingDirection;

- (_Bool)p_getLayoutDirectionLeftToRight;

- (_Bool)p_layoutWhollyContainsGridRange:(CDStruct_58eae27c)arg1;

- (int)p_naturalAlignmentForCellID:(CDStruct_0441cfb5)arg1;

- (void)p_processChange:(id)arg1 forChangeSource:(id)arg2 actions:(id)arg3;

- (void)p_processChangeActions:(id)arg1;

- (struct CGSize)p_rangeUpAndLeftOfIntersectionRangeOfGridRange:(CDStruct_58eae27c)arg1;

- (void)p_updateCachedStyleInformationFromCellID:(CDStruct_0441cfb5)arg1;

@property(readonly, nonatomic) struct UIEdgeInsets paddingForEditingCell; // @synthesize paddingForEditingCell=mCachedPaddingForEditingCell;

- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;

- (void)processChanges:(id)arg1;

@property(nonatomic) _Bool processChangesFiltering; // @synthesize processChangesFiltering=mProcessChangesFiltering;

- (int)reapCoordinatesChangedMaskForChrome;

- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;

- (struct CGRect)rectForSelection:(id)arg1;

- (void)removeContainedTextEditingLayout;

- (Class)repClassForTextLayout:(id)arg1;

- (_Bool)resizeMayChangeAspectRatio;

@property(nonatomic) struct CGSize scaleToFit;

- (void)setNeedsDisplay;

- (void)setNeedsDisplayInRect:(struct CGRect)arg1;

@property(retain, nonatomic) TSTLayoutSpaceBundle *spaceBundle; // @synthesize spaceBundle=mSpaceBundle;

- (void)setupContainedTextEditingLayout:(CDStruct_0441cfb5)arg1;

@property(readonly, nonatomic) _Bool shrinkTextToFit;

- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;

- (_Bool)supportsRotation;

@property(readonly, nonatomic) TSTTableInfo *tableInfo;

@property(readonly, nonatomic) TSTTableModel *tableModel;

- (void)takeSizeFromTracker:(id)arg1;

- (_Bool)textIsVertical;

- (void)updateChildrenFromInfo;

- (void)validate;

- (void)validateTableNameVisibility;

- (int)verticalAlignmentForTextLayout:(id)arg1;

- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;

- (void)willBeAddedToLayoutController:(id)arg1;

- (void)willBeRemovedFromLayoutController:(id)arg1;

- (int)wrapFitType;



// Remaining properties

@property(readonly, nonatomic) double textScaleFactor;



@end


