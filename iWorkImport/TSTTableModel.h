/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "TSPObject.h"


@class NSArray, NSString, TSCECalculationEngine, TSCECellCoordinateVector, TSCEOwnerFormulaMap, TSDFill, TSDStroke, TSKDocumentRoot, TSTCell, TSTCellDictionary, TSTCellStyle, TSTConditionalStyleFormulaOwner, TSTHiddenStateFormulaOwner, TSTTableDataStore, TSTTableFilterSet, TSTTableStyle, TSWPParagraphStyle, TSWPShapeStyle, TSWPStorage;



__attribute__((visibility("hidden")))

@interface TSTTableModel : TSPObject

{

    TSTTableDataStore *mDataStore;

    struct __CFUUID *mTableID;

    struct __CFUUID *mFromTableID;

    unsigned short mNumberOfRows;

    unsigned short mNumberOfColumns;

    unsigned short mNumberOfHeaderRows;

    unsigned short mNumberOfHeaderColumns;

    unsigned short mNumberOfFooterRows;

    _Bool mHeaderRowsFrozen;

    _Bool mHeaderColumnsFrozen;

    unsigned short mNumberOfHiddenRows;

    unsigned short mNumberOfHiddenColumns;

    unsigned short mNumberOfUserHiddenRows;

    unsigned short mNumberOfUserHiddenColumns;

    unsigned short mNumberOfFilteredRows;

    double mDefaultRowHeight;

    double mDefaultColumnWidth;

    NSString *mTableName;

    _Bool mTableNameEnabled;

    double mTableNameHeight;

    _Bool mTableNameBorderEnabled;

    _Bool mRepeatingHeaderRowsEnabled;

    _Bool mRepeatingHeaderColumnsEnabled;

    TSTHiddenStateFormulaOwner *mHiddenStateFormulaOwnerForRows;

    TSTHiddenStateFormulaOwner *mHiddenStateFormulaOwnerForColumns;

    unsigned long long mPresetIndex;

    _Bool mStyleApplyClearsAll;

    struct {

        TSTTableStyle *tableStyle;

        TSTCellStyle *bodyCellStyle;

        TSTCellStyle *headerRowCellStyle;

        TSTCellStyle *headerColumnCellStyle;

        TSTCellStyle *footerRowCellStyle;

        TSWPParagraphStyle *bodyTextStyle;

        TSWPParagraphStyle *headerRowTextStyle;

        TSWPParagraphStyle *headerColumnTextStyle;

        TSWPParagraphStyle *footerRowTextStyle;

        TSWPParagraphStyle *tableNameStyle;

        TSWPShapeStyle *tableNameShapeStyle;

    } mStyles;

    struct _TSTDefaultCellBlock mDefaultCells;

    TSCEOwnerFormulaMap *mFormulasForUndo;

    TSCECalculationEngine *mCalcEngine;

    TSTCellDictionary *mCellsPendingWrite;

    struct _opaque_pthread_mutex_t mCellsToInvalidateAfterRecalcLock;

    TSCECellCoordinateVector *mCellsToInvalidateAfterRecalc;

    TSCECellCoordinateVector *mCellsToInvalidateNonoverflowingAfterRecalc;

    TSTConditionalStyleFormulaOwner *mConditionalStyleFormulaOwner;

    TSWPStorage *mDeprecatedProvider;

    _Bool mWasUnarchivedFromAProvidedTable;

    TSTTableFilterSet *mFilterSet;

    TSCEOwnerFormulaMap *_formulasForUndo;

}



+ (CDStruct_5f1f7aa9)cellRangeForTableArea:(int)arg1 givenTableSize:(CDStruct_d65e47c4)arg2 numberOfHeaderRows:(unsigned short)arg3 numberOfFooterRows:(unsigned short)arg4 numberOfHeaderColumns:(unsigned short)arg5;

+ (void)load;

+ (struct __CFDictionary *)newIDMapForPastedTablesInDrawables:(id)arg1 calculationEngine:(id)arg2;

+ (int)tableAreaForCellID:(CDStruct_0441cfb5)arg1 inTableWithHeaderColumns:(unsigned short)arg2 headerRows:(unsigned short)arg3 footerRows:(unsigned short)arg4 totalRows:(unsigned short)arg5;

+ (id)unnamedTableString;

- (id).cxx_construct;

- (id)addRules:(id)arg1 atRuleIndices:(id)arg2 inFilter:(unsigned long long)arg3 isNew:(_Bool)arg4;

- (id)addRules:(id)arg1 inFilter:(unsigned long long)arg2;

- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;

- (id)allRichTextPayloadStorages;

@property(readonly, nonatomic) TSDFill *backgroundFill;

- (void)bakeFormulas;

- (id)bandedFillObject;

@property(readonly, nonatomic) TSTCellStyle *bodyCellStyle;

- (CDStruct_5f1f7aa9)bodyColumnRange;

@property(readonly, nonatomic) TSDStroke *bodyColumnStroke;

@property(readonly, nonatomic) TSDFill *bodyFill;

- (CDStruct_5f1f7aa9)bodyRange;

- (CDStruct_5f1f7aa9)bodyRowRange;

@property(readonly, nonatomic) TSDStroke *bodyRowStroke;

@property(readonly, nonatomic) TSWPParagraphStyle *bodyTextStyle;

@property(readonly, nonatomic) TSDStroke *borderStrokeEvenIfNotVisible;

@property(nonatomic) TSCECalculationEngine *calcEngine; // @synthesize calcEngine=mCalcEngine;

- (CDStruct_5f1f7aa9)cellRangeForTableArea:(int)arg1;

- (id)cellRegionWithConditionalStyleMatchingCell:(CDStruct_0441cfb5)arg1;

- (_Bool)cellWasModifiedInCurrentRecalcCycle:(CDStruct_0441cfb5)arg1;

@property(readonly, nonatomic) TSTCellDictionary *cellsPendingWrite; // @synthesize cellsPendingWrite=mCellsPendingWrite;

@property(readonly, nonatomic) TSCECellCoordinateVector *cellsToInvalidateAfterRecalc; // @synthesize cellsToInvalidateAfterRecalc=mCellsToInvalidateAfterRecalc;

@property(readonly, nonatomic) TSCECellCoordinateVector *cellsToInvalidateNonoverflowingAfterRecalc; // @synthesize cellsToInvalidateNonoverflowingAfterRecalc=mCellsToInvalidateNonoverflowingAfterRecalc;

- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(_Bool)arg2;

- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(_Bool)arg2 needsNewName:(_Bool)arg3;

- (id)columnNameForCellID:(CDStruct_0441cfb5)arg1 cellRangeContainingName:(CDStruct_5f1f7aa9 *)arg2 restrictToBodyRange:(_Bool)arg3;

@property NSArray *columnWidths;

@property(nonatomic) TSTConditionalStyleFormulaOwner *conditionalStyleFormulaOwner;

- (void)copyPasteboardCustomFormatsToDocumentAndUpdateCellsInRegion:(id)arg1;

- (id)dataStore;

- (void)dealloc;

@property(readonly, nonatomic) TSTCell *defaultBodyCell;

- (int)defaultCell:(id)arg1 forTableArea:(int)arg2;

- (id)defaultCellForTableArea:(int)arg1;

- (id)defaultCellStyleForTableArea:(int)arg1;

@property(readonly, nonatomic) TSTCell *defaultFooterRowCell;

@property(readonly, nonatomic) TSTCell *defaultHeaderColumnCell;

@property(readonly, nonatomic) TSTCell *defaultHeaderRowCell;

- (void)defaultStrokesForCellID:(CDStruct_0441cfb5)arg1 inTableWithHeaderColumns:(unsigned short)arg2 headerRows:(unsigned short)arg3 footerRows:(unsigned short)arg4 totalColumns:(unsigned short)arg5 totalRows:(unsigned short)arg6 tableArea:(int)arg7 outTopStroke:(id *)arg8 outLeftStroke:(id *)arg9 outBottomStroke:(id *)arg10 outRightStroke:(id *)arg11;

- (void)defaultStrokesForCellID:(CDStruct_0441cfb5)arg1 outTopStroke:(id *)arg2 outLeftStroke:(id *)arg3 outBottomStroke:(id *)arg4 outRightStroke:(id *)arg5;

- (id)defaultTextStyleForTableArea:(int)arg1;

- (void)dirtyFilterState;

@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;

- (id)documentStylesheet;

- (id)duplicateFilterSet;

- (void)enableFilter:(_Bool)arg1 atIndex:(unsigned long long)arg2;

- (void)enableFilterSet:(_Bool)arg1;

- (void)enableRule:(_Bool)arg1 atIndex:(unsigned long long)arg2 inFilterIndex:(unsigned long long)arg3;

@property(copy, nonatomic) TSTTableFilterSet *filterSet;

- (void)filterSetUpdated;

@property(readonly, nonatomic) TSDStroke *footerRowBodyColumnStroke;

@property(readonly, nonatomic) TSDStroke *footerRowBodyRowStroke;

@property(readonly, nonatomic) TSDStroke *footerRowBorderStroke;

@property(readonly, nonatomic) TSTCellStyle *footerRowCellStyle;

- (CDStruct_5f1f7aa9)footerRowRange;

@property(readonly, nonatomic) TSDStroke *footerRowSeparatorStroke;

@property(readonly, nonatomic) TSWPParagraphStyle *footerRowTextStyle;

@property(readonly, nonatomic) TSDFill *footerRowsFill;

@property(retain, nonatomic) TSCEOwnerFormulaMap *formulasForUndo; // @synthesize formulasForUndo=_formulasForUndo;

@property(readonly, nonatomic) struct __CFUUID *fromTableID;

- (_Bool)hasActiveFilters;

@property(readonly, nonatomic) _Bool hasAlternatingRows;

- (_Bool)hasFormulas;

- (_Bool)hasMergeRanges;

@property(readonly, nonatomic) _Bool hasTableBorder;

@property(readonly, nonatomic) TSDStroke *headerColumnBodyColumnStroke;

@property(readonly, nonatomic) TSDStroke *headerColumnBodyRowStroke;

@property(readonly, nonatomic) TSDStroke *headerColumnBorderStroke;

@property(readonly, nonatomic) TSTCellStyle *headerColumnCellStyle;

- (CDStruct_5f1f7aa9)headerColumnRange;

@property(readonly, nonatomic) TSDStroke *headerColumnSeparatorStroke;

@property(readonly, nonatomic) TSWPParagraphStyle *headerColumnTextStyle;

@property(readonly, nonatomic) TSDFill *headerColumnsFill;

@property(nonatomic) _Bool headerColumnsFrozen;

@property(readonly, nonatomic) TSDStroke *headerRowBodyColumnStroke;

@property(readonly, nonatomic) TSDStroke *headerRowBodyRowStroke;

@property(readonly, nonatomic) TSDStroke *headerRowBorderStroke;

@property(readonly, nonatomic) TSTCellStyle *headerRowCellStyle;

- (CDStruct_5f1f7aa9)headerRowRange;

@property(readonly, nonatomic) TSDStroke *headerRowSeparatorStroke;

@property(readonly, nonatomic) TSWPParagraphStyle *headerRowTextStyle;

@property(readonly, nonatomic) TSDFill *headerRowsFill;

@property(nonatomic) _Bool headerRowsFrozen;

@property(readonly, nonatomic) TSTHiddenStateFormulaOwner *hiddenStateFormulaOwnerForColumns;

@property(readonly, nonatomic) TSTHiddenStateFormulaOwner *hiddenStateFormulaOwnerForRows;

- (int)hidingStateForColumn:(unsigned char)arg1;

- (int)hidingStateForRow:(unsigned short)arg1;

- (id)init;

- (id)initFromUnarchiver:(id)arg1;

- (id)initWithContext:(id)arg1 fromSourceModel:(id)arg2 region:(id)arg3 tableInfo:(id)arg4;

- (id)initWithContext:(id)arg1 rows:(unsigned short)arg2 columns:(unsigned short)arg3 styles:(id)arg4 tableInfo:(id)arg5;

- (_Bool)isColumnHidden:(unsigned char)arg1 forAction:(int)arg2;

- (_Bool)isRowHidden:(unsigned short)arg1 forAction:(int)arg2;

- (void)mapTableStylesToStylesheet:(id)arg1 withMapper:(id)arg2;

- (id)mergedGridIndicesForDirection:(int)arg1;

- (CDStruct_5f1f7aa9)minPopulatedCellRange;

- (void)moveCalcEngineReferencesFromSourceTable:(struct __CFUUID *)arg1 sourceRange:(CDStruct_5f1f7aa9)arg2 sourceOffset:(CDStruct_79c71658)arg3;

- (void)mutateFormulaFiltersUsingBlock:(id)arg1;

- (_Bool)needsFilterFormulaRewriteForImport;

@property(nonatomic) unsigned short numberOfColumns;

@property(nonatomic) unsigned short numberOfFooterRows;

@property(nonatomic) unsigned short numberOfHeaderColumns;

@property(nonatomic) unsigned short numberOfHeaderRows;

@property(readonly, nonatomic) unsigned short numberOfHiddenColumns; // @synthesize numberOfHiddenColumns=mNumberOfHiddenColumns;

@property(readonly, nonatomic) unsigned short numberOfHiddenRows; // @synthesize numberOfHiddenRows=mNumberOfHiddenRows;

@property(nonatomic) unsigned short numberOfRows;

@property(readonly, nonatomic) unsigned short numberOfUserHiddenColumns; // @synthesize numberOfUserHiddenColumns=mNumberOfUserHiddenColumns;

@property(readonly, nonatomic) unsigned short numberOfUserHiddenRows; // @synthesize numberOfUserHiddenRows=mNumberOfUserHiddenRows;

@property(readonly, nonatomic) unsigned short numberOfVisibleBodyColumns;

@property(readonly, nonatomic) unsigned short numberOfVisibleBodyRows;

- (void)p_clearDataListEntriesInRange:(CDStruct_5f1f7aa9)arg1 ignoreSizeChecks:(_Bool)arg2;

- (void)p_fetchCellHoldingReadLock:(void *)arg1 returnCode:(void *)arg2;

- (void)p_releaseExistingDefaultStyles;

- (void)p_scaleStrokeFromProperty:(int)arg1 style:(id)arg2 pmap:(id)arg3 scale:(double)arg4;

- (void)p_scaleStrokesOnCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2 transformedObjects:(id)arg3 scale:(double)arg4;

@property(readonly, nonatomic) TSDStroke *parentBorderStroke;

@property(nonatomic) unsigned long long presetIndex;

- (void)private_validateMergeCellsPedantically;

- (CDStruct_5f1f7aa9)range;

- (CDStruct_5744d895)referenceToHiddenStateFromColumn:(unsigned char)arg1 toColumn:(unsigned char)arg2;

- (CDStruct_5744d895)referenceToHiddenStateFromRow:(unsigned short)arg1 toRow:(unsigned short)arg2;

- (void)registerAllFormulasWithCalculationEngine:(id)arg1;

- (void)remapTableIDsInFormulasWithMap:(struct __CFDictionary *)arg1 calcEngine:(id)arg2;

- (id)removeFilterRules:(id)arg1;

- (id)removeRulesWithIndices:(id)arg1 inFilter:(unsigned long long)arg2;

@property(nonatomic) _Bool repeatingHeaderColumnsEnabled;

@property(nonatomic) _Bool repeatingHeaderRowsEnabled;

- (id)replaceRule:(id)arg1 atRuleIndex:(unsigned long long)arg2 inFilter:(unsigned long long)arg3;

- (void)resetStyles:(id)arg1;

@property NSArray *rowHeights;

- (id)rowNameForCellID:(CDStruct_0441cfb5)arg1 cellRangeContainingName:(CDStruct_5f1f7aa9 *)arg2 restrictToBodyRange:(_Bool)arg3;

- (void)saveToArchiver:(id)arg1;

- (void)setBodyCellStyle:(id)arg1;

- (void)setBodyTextStyle:(id)arg1;

- (void)setDrawableIsBeingCopied:(_Bool)arg1;

- (void)setFilterRulesAtAbsoluteIndices:(id)arg1 enabled:(_Bool)arg2;

- (void)setFilterSetType:(int)arg1;

- (void)setFooterRowCellStyle:(id)arg1;

- (void)setFooterRowTextStyle:(id)arg1;

- (void)setHeaderColumnCellStyle:(id)arg1;

- (void)setHeaderColumnTextStyle:(id)arg1;

- (void)setHeaderRowCellStyle:(id)arg1;

- (void)setHeaderRowTextStyle:(id)arg1;

- (void)setHeight:(double)arg1 ofRow:(unsigned short)arg2;

- (void)setNeedsFilterFormulaRewriteForImport:(_Bool)arg1;

- (void)setStorageParentToInfo:(id)arg1;

@property(nonatomic) _Bool styleApplyClearsAll;

- (void)setTableID:(struct __CFUUID *)arg1;

@property(retain, nonatomic) NSString *tableName;

@property(nonatomic) _Bool tableNameBorderEnabled;

@property(nonatomic) _Bool tableNameEnabled;

@property(nonatomic) double tableNameHeight;

- (void)setTableNameShapeStyle:(id)arg1;

- (void)setTableNameStyle:(id)arg1;

- (void)setTableStyle:(id)arg1;

@property(nonatomic) _Bool wasUnarchivedFromAProvidedTable; // @synthesize wasUnarchivedFromAProvidedTable=mWasUnarchivedFromAProvidedTable;

- (void)setWidth:(double)arg1 ofColumn:(unsigned char)arg2;

- (void)setupDefaultCells;

- (int)tableAreaForCellID:(CDStruct_0441cfb5)arg1;

@property(readonly, nonatomic) struct __CFUUID *tableID;

@property(readonly, nonatomic) TSDStroke *tableNameBorderStroke;

@property(readonly, nonatomic) TSWPShapeStyle *tableNameShapeStyle;

@property(readonly, nonatomic) TSWPParagraphStyle *tableNameStyle;

@property(readonly, nonatomic) TSTTableStyle *tableStyle;

- (void)transformStrokes:(struct CGAffineTransform)arg1 transformedObjects:(id)arg2 inBounds:(struct CGRect)arg3;

- (void)upgradeFromPreUFF;

- (_Bool)useBandedFill;

- (void)validate;

- (void)validateStyles;



@end


