/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "KNBuildRenderer.h"


#import "TSKAVPlayerControllerDelegate.h"



@class CALayer, NSObject<NSCopying>, TSKAVPlayerController;



__attribute__((visibility("hidden")))

@interface KNMovieRenderer : KNBuildRenderer <TSKAVPlayerControllerDelegate>

{

    TSKAVPlayerController *mPlayerController;

    CALayer *mVideoLayer;

    double mStartTime;

    double mPlaybackAtStartTimePauseTime;

    double mPlaybackAtStartTimePauseOffset;

    KNBuildRenderer *mBuildInRenderer;

    id <TSDMovieHUDViewController> mViewController;

    struct CGRect mFrameInContainerView;

    id mMovieStartCallbackTarget;

    SEL mMovieStartCallbackSelector;

    unsigned int mHasMoviePlaybackStarted:1;

    unsigned int mNeedsToSendMovieStartCallback:1;

    unsigned int mNeedsToSendBuildEndCallback:1;

    unsigned int mIsObservingVideoLayerReadyForDisplay:1;

    unsigned int mNeedsPlaybackAtStartTime:1;

    unsigned int mHasPendingTogglePlayingControl:1;

    unsigned int mPendingTogglePlayingControlStartsPlaying:1;

    unsigned int mShouldMoviePlaybackEndOnCompletion:1;

    unsigned int mWasMoviePlayingBeforeAnimationPause:1;

}



+ (id)movieInfoForMovieTimelineMovieIdentifier:(id)arg1;

+ (id)movieTimelineMovieIdentifierForMovieInfo:(id)arg1;

- (_Bool)addAnimationsAtLayerTime:(double)arg1;

- (void)animateAfterDelay:(double)arg1;

- (void)applyMovieControl:(long long)arg1;

@property(nonatomic) KNBuildRenderer *buildInRenderer; // @synthesize buildInRenderer=mBuildInRenderer;

- (void)dealloc;

- (void)forceRemoveAnimations;

@property(readonly, nonatomic) _Bool hasMoviePlaybackStarted;

- (id)initWithInfo:(id)arg1 build:(id)arg2 stageIndex:(long long)arg3 session:(id)arg4 model:(id)arg5 animatedSlideView:(id)arg6;

- (void)interruptAndReset;

@property(readonly, nonatomic) NSObject<NSCopying> *movieTimelineMovieIdentifier;

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;

@property(readonly, nonatomic) CALayer *offscreenVideoLayer;

- (void)p_applyActionEffect:(id)arg1;

- (void)p_cancelPlaybackAtStartTime;

- (struct CGImage *)p_copyCurrentVideoFrameImage;

- (void)p_didEndMoviePlayback;

- (void)p_didStartMoviePlayback;

- (void)p_playbackDidFailWithError:(id)arg1;

- (void)p_schedulePlaybackAtStartTime;

- (void)p_setupPlayerController;

- (void)p_setupReflectionAndMaskingOnMovieTexture:(id)arg1 strokeTexture:(id)arg2 reflectionTexture:(id)arg3;

- (void)p_setupVideoLayer;

- (void)p_showVideoLayer;

- (void)p_startMoviePlaybackIfNeeded;

- (void)p_startPlaybackAtStartTime;

- (void)p_teardownUpdatingTexture:(_Bool)arg1;

- (void)p_unschedulePlaybackAtStartTime;

- (void)pauseAnimations;

- (void)pauseAnimationsAtTime:(double)arg1;

- (void)playbackDidStopForPlayerController:(id)arg1;

@property(readonly, nonatomic) TSKAVPlayerController *playerController; // @synthesize playerController=mPlayerController;

- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;

- (void)registerForMovieStartCallback:(SEL)arg1 target:(id)arg2;

- (void)removeAnimationsAndFinish:(_Bool)arg1;

- (void)resumeAnimationsIfPaused;

- (void)resumeAnimationsIfPausedAtTime:(double)arg1;

- (void)setFrameOnViewLayer:(id)arg1;

@property(retain, nonatomic) id <TSDMovieHUDViewController> viewController; // @synthesize viewController=mViewController;

- (void)stopAnimations;

- (void)updateAnimationsForLayerTime:(double)arg1;

- (void)updateHUD;



@end


