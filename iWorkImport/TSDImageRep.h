/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "TSDMediaRep.h"


#import "TSDMagicMoveMatching.h"

#import "TSDShapeControlRep.h"



@class CALayer, CAShapeLayer, NSCache, NSMutableArray, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSRecursiveLock, TSDImageRepSizingState, TSDInstantAlphaTracker, TSDLayoutGeometry;



__attribute__((visibility("hidden")))

@interface TSDImageRep : TSDMediaRep <TSDMagicMoveMatching, TSDShapeControlRep>

{

    TSDLayoutGeometry *mLastImageGeometryInRoot;

    TSDLayoutGeometry *mLastMaskGeometryInRoot;

    struct CGAffineTransform mLastLayoutToImageTransform;

    struct CGRect mFrameInUnscaledCanvasRelativeToSuper;

    _Bool mFrameInUnscaledCanvasIsValid;

    CALayer *mContentsLayer;

    CAShapeLayer *mMaskPathLayer;

    CAShapeLayer *mIAMaskLayer;

    CAShapeLayer *mMaskSublayer;

    struct CGAffineTransform mLastPictureFrameLayerTransform;

    _Bool mDirectlyManagesLayerContent;

    _Bool mShowImageHighlight;

    _Bool mInInstantAlphaMode;

    TSDInstantAlphaTracker *mInstantAlphaTracker;

    struct CGImage *mInstantAlphaImage;

    struct CGAffineTransform mBaseMaskLayoutTransform;

    NSRecursiveLock *mLayerUpdateAndSizingStateLock;

    TSDImageRepSizingState *mSizingState;

    _Bool mSizingStateReady;

    NSObject<OS_dispatch_queue> *mSizedImageAccessQueue;

    struct CGImage *mSizedImage;

    struct CGSize mSizedImageSize;

    long long mSizedImageOrientation;

    _Bool mSizedImageHasMaskBakedIn;

    _Bool mSizedImageHasAdjustmentsBakedIn;

    struct CGPath *mSizedImageMaskPath;

    NSCache *mHitTestCache;

    long long mHitTestCacheOnce;

    NSMutableArray *mUpdateFromLayoutBlocks;

    NSObject<OS_dispatch_semaphore> *mUpdateFromLayoutBlocksLock;

}



+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;

+ (struct CGPath *)p_newPathToBakeIntoSizedImageForSize:(struct CGSize)arg1 withImageLayout:(id)arg2 orientation:(long long)arg3;

- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;

- (void)addKnobsToArray:(id)arg1;

- (id)additionalLayersOverLayer;

- (double)additionalRotationForKnobOrientation;

- (_Bool)allowDragDelegate;

- (double)angleForRotation;

- (void)becameNotSelected;

- (void)beginDynamicallyChangingMaskScale;

- (void)beginEditingImageInMaskEditMode;

- (void)beginEditingMaskInMaskEditMode;

- (void)beginInstantAlphaMode;

- (struct CGRect)boundsForHighlightLayer;

- (struct CGRect)boundsForStandardKnobs;

- (_Bool)canDrawInParallel;

- (_Bool)canDrawShadowInOneStepWithChildren:(_Bool)arg1;

- (struct CGPoint)centerForRotation;

- (id)commandToResetToSize:(struct CGSize)arg1;

- (_Bool)containsPoint:(struct CGPoint)arg1;

- (void)dealloc;

- (_Bool)demandsExclusiveSelection;

- (void)didUpdateLayer:(id)arg1;

- (_Bool)directlyManagesLayerContent;

- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;

- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6;

- (void)drawInLayerContext:(struct CGContext *)arg1;

- (void)dynamicDragDidBegin;

- (void)dynamicDragDidEnd;

- (void)dynamicMoveSmartShapeKnobDidBegin;

- (void)dynamicMoveSmartShapeKnobDidEndWithTracker:(id)arg1;

- (id)dynamicResizeDidBegin;

- (void)dynamicResizeDidEndWithTracker:(id)arg1;

- (void)dynamicRotateDidEndWithTracker:(id)arg1;

- (void)dynamicallyMovedSmartShapeKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;

- (void)dynamicallyRotatingWithTracker:(id)arg1;

- (void)dynamicallySetMaskScale:(double)arg1;

- (void)editMaskWithHUD:(_Bool)arg1;

- (void)endDynamicallyChangingMaskScale:(double)arg1;

- (void)endEditingMask;

- (void)endInstantAlphaMode;

- (_Bool)exclusivelyProvidesGuidesWhileAligning;

- (struct CGRect)frameInUnscaledCanvas;

- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1;

- (void)highlightImage;

- (id)hitRepChrome:(struct CGPoint)arg1;

- (struct CGPoint)i_dragOffset;

- (void)i_willEnterForeground;

- (struct CGImage *)imageForInstantAlpha;

- (id)imageInfo;

- (id)imageLayout;

- (id)imageOfStroke:(struct CGRect *)arg1;

- (id)infoForTransforming;

- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@property(readonly, nonatomic) TSDInstantAlphaTracker *instantAlphaTracker; // @synthesize instantAlphaTracker=mInstantAlphaTracker;

- (_Bool)isDraggable;

- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;

- (id)maskInfo;

- (id)maskLayout;

- (double)maskScale;

- (void)maskScaleLimitsReturningMin:(double *)arg1 max:(double *)arg2;

- (void)maskWithHUD:(_Bool)arg1;

- (id)newTrackerForKnob:(id)arg1;

- (id)overlayLayers;

- (void)p_canvasSelectionDidChange:(id)arg1;

- (void)p_cleanUpMaskModeUI;

- (void)p_createMaskLayerForLayer:(id)arg1;

- (struct CGSize)p_desiredSizedImageSize;

- (void)p_didGenerateSizedImageInBackground;

- (_Bool)p_directlyManagesContentForLayer:(id)arg1;

- (void)p_disposeMaskLayer;

- (void)p_disposeStrokeLayer;

- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(double)arg4 withMask:(_Bool)arg5 withIAMask:(_Bool)arg6 forLayer:(_Bool)arg7 forShadowOrHitTest:(_Bool)arg8;

- (_Bool)p_drawsInOneStep;

- (void)p_endEditingMask;

- (void)p_generateSizedImage:(id)arg1;

- (void)p_generateSizedImageIfNecessary;

- (void)p_generateSizedImageInBackground:(id)arg1;

- (void)p_getAliasedValuesForMaskToBoundsDirectLayerFrame:(out struct CGRect *)arg1 transform:(out struct CGAffineTransform *)arg2;

- (_Bool)p_hitCacheGetCachedValue:(_Bool *)arg1 forPoint:(struct CGPoint)arg2;

- (void)p_hitCacheSetCachedValue:(_Bool)arg1 forPoint:(struct CGPoint)arg2;

- (id)p_imageData;

- (struct CGImage *)p_imageForDirectlyManagedLayer:(id)arg1;

- (id)p_imageProvider;

- (void)p_invalidateHitTestCache;

- (void)p_invalidateSizedImage;

- (void)p_invalidateSizedImageFromQueue;

- (struct CGImage *)p_newImageByApplyingAdjustmentsToImage:(struct CGImage *)arg1 alreadyEnhanced:(_Bool)arg2;

- (_Bool)p_okayToGenerateSizedImage;

- (long long)p_orientationForDirectlyManagedLayer;

- (void)p_popoverViewPresented:(id)arg1;

- (void)p_setDefaultMaskWithActionString:(id)arg1;

- (void)p_setUpMaskModeUI;

- (_Bool)p_shouldBakeMaskIntoSizedImage;

- (_Bool)p_shouldMaskWithFrameLayers;

- (_Bool)p_shouldRenderWithMaskToBounds;

- (void)p_startSizing;

- (void)p_takeSizedImageFromState;

- (void)p_takeSizedImageFromStateIfReady;

- (void)p_updateDirectlyManagesLayerContentForLayer:(id)arg1;

- (void)p_updateHUD;

- (void)p_updateMaskLayer:(id)arg1 forRepLayer:(id)arg2 shouldIncludeMask:(_Bool)arg3 shouldIncludeInstantAlpha:(_Bool)arg4;

- (void)p_updateMaskSublayersForMaskEditMode;

- (void)p_updateStrokeLayerForStroke:(id)arg1 repLayer:(id)arg2;

- (id)p_validatedBitmapImageProvider;

- (id)p_validatedImageProvider;

- (id)p_validatedThumbnailImageProvider;

- (id)pathSourceForSelectionHighlightBehavior;

- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;

- (void)processChangedProperty:(int)arg1;

- (void)processChanges:(id)arg1;

- (_Bool)providesGuidesWhileAligning;

- (_Bool)resetGuidesAfterDragAfterReset;

- (void)resetMask;

- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;

- (void)setMagicMoveTextureAttributes:(id)arg1;

- (_Bool)shouldAllowReplacementFromPaste;

- (_Bool)shouldCreateSelectionKnobs;

- (_Bool)shouldShowDragHUD;

- (_Bool)shouldShowMediaReplaceUI;

- (_Bool)shouldShowReflection;

- (_Bool)shouldShowSelectionHighlight;

- (_Bool)shouldShowShadow;

- (_Bool)shouldShowSmartMaskKnobs;

- (struct CGRect)snapRectForDynamicDragWithOffset:(struct CGPoint)arg1;

- (struct CGRect)targetRectForEditMenu;

- (id)textureForContext:(id)arg1;

- (int)tilingMode;

- (struct CGAffineTransform)transformForHighlightLayer;

- (void)unhighlightImage;

- (struct CGPoint)unscaledGuidePosition;

- (void)updateFromLayout;

- (void)updateLayerGeometryFromLayout:(id)arg1;

- (void)updatePositionsOfKnobs:(id)arg1;

- (void)viewScaleDidChange;

- (_Bool)wantsGuidesWhileResizing;

- (_Bool)wantsToDistortWithImagerContext;

- (void)willBeRemoved;

- (void)willBeginReadMode;

- (void)willUpdateLayer:(id)arg1;



@end


