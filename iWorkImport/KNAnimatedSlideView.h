/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "TSDCanvasDelegate.h"

#import "TSDConnectedInfoReplacing.h"



@class KNAnimatedSlideModel, KNPlaybackSession, KNSlide, KNSlideNode, NSIndexSet, NSMutableArray, NSMutableSet, NSSet, TSDCanvas, TSUNoCopyDictionary;



__attribute__((visibility("hidden")))

@interface KNAnimatedSlideView : NSObject <TSDCanvasDelegate, TSDConnectedInfoReplacing>

{

    KNSlide *mSlide;

    KNSlideNode *mAlternateDestinationSlideNode;

    KNPlaybackSession *mSession;

    KNAnimatedSlideModel *mAnimatedSlideModel;

    unsigned long long mCurrentEventIndex;

    NSIndexSet *mEventIndexesToAnimate;

    _Bool mSlideIsBuildable;

    _Bool mTransitionInitialized;

    _Bool mShouldStopAnimations;

    NSMutableSet *mMovieRenderers;

    NSMutableSet *mBuildRenderers;

    unsigned long long mSlideNumber;

    double mTransitionStartTime;

    unsigned long long mAnimationsActive;

    unsigned long long mAnimationsStarted;

    _Bool mIsInDelayBeforeActiveAnimations;

    NSMutableArray *mChunks;

    TSUNoCopyDictionary *mBuildsToStartAfterMovieStartsMap;

    TSUNoCopyDictionary *mTextureSetForInfoMap;

    id mEventStartCallbackTarget;

    SEL mEventStartCallbackSelector;

    id mEventAnimationActiveCallbackTarget;

    SEL mEventAnimationActiveCallbackSelector;

    id mEventEndCallbackTarget;

    SEL mEventEndCallbackSelector;

    id mMovieStartCallbackTarget;

    SEL mMovieStartCallbackSelector;

    id mMovieEndCallbackTarget;

    SEL mMovieEndCallbackSelector;

    _Bool mEventTriggered;

    _Bool mQueuedTrigger;

    _Bool mSkipDelayOnTransition;

    TSDCanvas *mCanvas;

    int mIsTexturePreloadingCancelled;

    NSMutableSet *mTextureSets;

}



+ (void)initialize;

+ (void)registerUserDefaults;

- (void)addAnimatedBuild:(id)arg1;

@property(readonly, nonatomic) NSSet *animatingBuildRenderers; // @synthesize animatingBuildRenderers=mBuildRenderers;

- (void)beginRenderingEvent:(unsigned long long)arg1 onBaseLayer:(id)arg2 shouldPrepareBuildAnimation:(_Bool)arg3 completionHandler:(id)arg4;

- (void)buildHasFinishedAnimating:(id)arg1;

- (void)cancelRendering;

@property(readonly, nonatomic) TSDCanvas *canvas;

- (void)clearAnimatedBuilds;

- (struct CGImage *)copyImageOfCurrentEvent;

- (void)dealloc;

- (id)documentRoot;

@property(readonly, nonatomic) unsigned long long eventCount;

@property(nonatomic) _Bool eventHasTriggered; // @synthesize eventHasTriggered=mEventTriggered;

@property(nonatomic) unsigned long long eventIndex;

@property(copy, nonatomic) NSIndexSet *eventIndexesToAnimate; // @synthesize eventIndexesToAnimate=mEventIndexesToAnimate;

@property(readonly, nonatomic) _Bool hasBuilds;

- (_Bool)hasTransitionAtEventIndex:(long long)arg1;

- (id)infoToConnectToForConnectionLineConnectedToInfo:(id)arg1;

- (id)infosCurrentlyVisible;

- (id)infosVisibleAtEvent:(unsigned long long)arg1 ignoreBuildVisibility:(_Bool)arg2;

- (id)initForSlideNode:(id)arg1 session:(id)arg2;

- (void)interruptAndReset;

@property(readonly, nonatomic) _Bool isAnimating;

- (_Bool)isAtFirstEvent;

- (_Bool)isCanvasDrawingIntoPDF:(id)arg1;

@property(readonly, nonatomic) _Bool isDoneAnimating;

@property(readonly, nonatomic) _Bool isMovieAnimating;

@property(readonly, nonatomic) _Bool isNonMovieAnimationActive;

@property(readonly, nonatomic) _Bool isNonMovieAnimationAnimating;

- (_Bool)isPrintingCanvas;

@property(readonly, nonatomic) KNAnimatedSlideModel *model; // @synthesize model=mAnimatedSlideModel;

- (void)movieHasFinishedPlayback:(id)arg1;

@property(readonly, nonatomic) NSSet *movieRenderers;

- (void)p_addMovieRenderer:(id)arg1;

- (void)p_animateBuild:(id)arg1;

- (void)p_animateBuild:(id)arg1 afterDelay:(double)arg2;

- (void)p_animateBuild:(id)arg1 isMoviePlayback:(_Bool)arg2;

- (void)p_animateCurrentEventIgnoringDelays:(_Bool)arg1;

- (void)p_animateTransition:(id)arg1;

- (void)p_clearMovieRenderers;

- (id)p_getRenderersAtEventIndex:(long long)arg1;

- (id)p_infosForSlide;

- (void)p_movieStarted:(id)arg1;

- (void)p_preloadTexturesForEvent:(unsigned long long)arg1 ignoreBuildVisibility:(_Bool)arg2 priority:(long long)arg3 completionHandler:(id)arg4;

- (void)p_removeMovieRenderer:(id)arg1;

- (void)p_renderTexturesForEvent:(unsigned long long)arg1 onBaseLayer:(id)arg2 intoContext:(struct CGContext *)arg3 shouldPrepareBuildAnimation:(_Bool)arg4 ignoreBuildVisibility:(_Bool)arg5;

- (void)p_resetMovieTextures;

- (void)p_setupTransitionStartTime;

- (_Bool)p_shouldAddInfoToTree:(id)arg1;

- (_Bool)p_shouldSkipActionBuild:(id)arg1 onMovieInfo:(id)arg2;

- (void)p_stopAllMovieRenderers;

- (void)p_tearDownTextures;

- (void)pauseAnimations;

- (_Bool)playAutomaticEvents;

- (void)registerForEventAnimationActiveCallback:(SEL)arg1 target:(id)arg2;

- (void)registerForEventEndCallback:(SEL)arg1 target:(id)arg2;

- (void)registerForEventStartCallback:(SEL)arg1 target:(id)arg2;

- (void)registerForMovieEndCallback:(SEL)arg1 target:(id)arg2;

- (void)registerForMovieStartCallback:(SEL)arg1 target:(id)arg2;

- (void)removeAnimatedBuild:(id)arg1;

- (void)renderCurrentEvent;

- (void)renderCurrentEventPreparingNextEvent:(_Bool)arg1;

- (void)renderEvent:(unsigned long long)arg1 intoContext:(struct CGContext *)arg2 ignoreBuildVisibility:(_Bool)arg3;

- (void)renderEvent:(unsigned long long)arg1 onBaseLayer:(id)arg2 shouldPrepareBuildAnimation:(_Bool)arg3;

- (void)renderEvent:(unsigned long long)arg1 shouldPrepareBuildAnimation:(_Bool)arg2 shouldPrepareTransition:(_Bool)arg3;

- (id)repsCurrentlyVisible;

- (void)reset;

- (void)resumeAnimationsIfPaused;

@property(readonly, nonatomic) KNPlaybackSession *session; // @synthesize session=mSession;

- (void)setNewDestinationSlideNode:(id)arg1;

@property(nonatomic) _Bool skipDelayOnTransition; // @synthesize skipDelayOnTransition=mSkipDelayOnTransition;

- (void)setTexture:(id)arg1 forRep:(id)arg2;

@property(nonatomic) _Bool triggerQueued; // @synthesize triggerQueued=mQueuedTrigger;

- (void)setupTransition;

- (_Bool)shouldShowInstructionalText;

- (_Bool)shouldSuppressBackgrounds;

- (unsigned long long)slideNumber;

- (void)stopAnimations;

- (id)textureSetForRep:(id)arg1;

- (void)transitionHasFinishedAnimating:(id)arg1;

- (void)triggerNextEvent;

- (void)triggerNextEventIgnoringDelay:(_Bool)arg1;



@end


