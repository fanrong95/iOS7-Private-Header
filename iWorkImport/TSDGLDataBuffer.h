/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "TSDGLDataBufferAccessor.h"



@class NSArray, NSMutableArray, NSMutableDictionary;



__attribute__((visibility("hidden")))

@interface TSDGLDataBuffer : NSObject <TSDGLDataBufferAccessor>

{

    unsigned long long mCurrentBufferIndex;

    NSMutableArray *mArrayBuffers;

    NSMutableDictionary *mAttributeToArrayBuffersDictionary;

    unsigned long long mElementArrayCount;

    unsigned short *mGLElementData;

    _Bool mGLElementDataBufferWasSetup;

    unsigned int mGLElementDataBuffer;

    struct CGSize mGLElementMeshSize;

    unsigned long long mGLElementQuadParticleCount;

    unsigned int mGLVertexArrayObjects[2];

    _Bool _isUpdatingRawDataBuffer;

    _Bool _didTeardown;

    _Bool _isDoubleBuffered;

    unsigned int _drawMode;

    unsigned long long _vertexCount;

    NSArray *_vertexAttributes;

}



- (CDStruct_b2fbf00d)GLPoint2DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;

- (CDStruct_03942939)GLPoint3DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;

- (CDStruct_f2e236b6)GLPoint4DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;

- (float)GLfloatForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;

- (unsigned short)GLushortForIndexElement:(unsigned long long)arg1;

- (void)dealloc;

- (id)description;

- (void)disableElementArrayBuffer;

@property(nonatomic) unsigned int drawMode; // @synthesize drawMode=_drawMode;

- (void)drawWithShader:(id)arg1;

- (void)drawWithShader:(id)arg1 range:(struct _NSRange)arg2;

- (void)enableElementArrayBuffer;

- (id)initWithVertexAttributes:(id)arg1 meshSize:(struct CGSize)arg2;

- (id)initWithVertexAttributes:(id)arg1 quadParticleCount:(unsigned long long)arg2;

- (id)initWithVertexAttributes:(id)arg1 vertexCount:(unsigned long long)arg2 indexElementCount:(unsigned long long)arg3 doubleBuffered:(_Bool)arg4;

- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2;

- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 meshSize:(struct CGSize)arg3;

- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 meshSize:(struct CGSize)arg3 textureFlipped:(_Bool)arg4;

- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 meshSize:(struct CGSize)arg3 textureFlipped:(_Bool)arg4 includeCenterAttribute:(_Bool)arg5;

- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 textureFlipped:(_Bool)arg3;

@property(readonly) _Bool isDoubleBuffered; // @synthesize isDoubleBuffered=_isDoubleBuffered;

- (_Bool)p_setAttributeUpdateData:(CDStruct_c6084d62 *)arg1 fromAttribute:(id)arg2;

- (void)p_setupGLElementArrayBufferIfNecessary;

- (void)setCGFloat:(double)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;

- (void)setDataForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 fromAttribute:(id)arg3 dataBuffer:(id)arg4 index:(unsigned long long)arg5;

- (void)setGLPoint2D:(CDStruct_b2fbf00d)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;

- (void)setGLPoint3D:(CDStruct_03942939)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;

- (void)setGLPoint4D:(CDStruct_f2e236b6)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;

- (void)setGLfloat:(float)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;

- (void)setGLushort:(unsigned short)arg1 forIndexElement:(unsigned long long)arg2;

- (void)teardown;

- (void)updateDataBufferAttributes:(id)arg1 withBlock:(id)arg2;

- (id)vertexAttributeNamed:(id)arg1;

@property(readonly) NSArray *vertexAttributes; // @synthesize vertexAttributes=_vertexAttributes;

@property(readonly) unsigned long long vertexCount; // @synthesize vertexCount=_vertexCount;



@end


