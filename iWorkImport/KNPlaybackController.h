/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class CALayer, KNAnimatedSlideView, KNMovieRenderer, KNPlaybackAudioController, KNPlaybackSession, KNShow, KNSlideNode, NSArray, NSIndexSet, NSObject<KNPlaybackConcealer>, NSSet;



__attribute__((visibility("hidden")))

@interface KNPlaybackController : NSObject

{

    KNShow *mShow;

    id <TSDCanvasDelegate> mCanvasDelegate;

    id <KNPlaybackControllerDelegate> mDelegate;

    int mPlayMode;

    KNPlaybackSession *mSession;

    KNAnimatedSlideView *mAnimator;

    id mEndShowHandler;

    KNPlaybackAudioController *mSoundtrackController;

    NSObject<KNPlaybackConcealer> *mPlaybackConcealer;

    struct CGColorSpace *mPlaybackColorSpace;

    CALayer *mBaseLayer;

    int mPlaybackState;

    _Bool mAllowsShowToEndInternally;

    _Bool mAutomaticallyPlaysSoundtrack;

    _Bool mPlaysAutomaticEvents;

    _Bool mAutomaticallyPlaysMovies;

    _Bool mRenderingSuspended;

    _Bool mIsCurrentEventNonAutomatic;

    _Bool mIsPaused;

    _Bool mIsHyperlinkInProgress;

    _Bool mIsUsingDiscreteGPU;

    KNMovieRenderer *mMovieRendererWithVisibleHUD;

}



+ (id)keyPathsForValuesAffectingMovieRenderers;

+ (id)keyPathsForValuesAffectingPausedConcealingStyle;

@property(nonatomic) _Bool allowsShowToEndInternally; // @synthesize allowsShowToEndInternally=mAllowsShowToEndInternally;

- (void)applyMovieControl:(long long)arg1;

@property(nonatomic) _Bool automaticallyPlaysMovies; // @synthesize automaticallyPlaysMovies=mAutomaticallyPlaysMovies;

@property(nonatomic) _Bool automaticallyPlaysSoundtrack; // @synthesize automaticallyPlaysSoundtrack=mAutomaticallyPlaysSoundtrack;

@property(readonly, nonatomic) CALayer *baseLayer; // @synthesize baseLayer=mBaseLayer;

- (id)breadCrumbTrail;

@property(copy, nonatomic) NSIndexSet *buildEventIndexesToAnimate;

@property(readonly, nonatomic) double buildsToAnimateDuration;

@property(readonly, nonatomic) id <TSDCanvasDelegate> canvasDelegate; // @synthesize canvasDelegate=mCanvasDelegate;

@property(nonatomic) unsigned long long currentEventIndex;

@property(readonly, nonatomic) KNSlideNode *currentSlideNode;

@property(readonly, nonatomic) NSArray *currentlyVisibleInfos;

- (void)dealloc;

@property(nonatomic) id <KNPlaybackControllerDelegate> delegate; // @synthesize delegate=mDelegate;

- (void)endShow;

@property(copy, nonatomic) id endShowHandler; // @synthesize endShowHandler=mEndShowHandler;

@property(readonly, nonatomic) unsigned long long eventCount;

- (void)gotoFirstEvent;

- (_Bool)gotoFirstSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;

- (_Bool)gotoLastSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;

- (_Bool)gotoLastVisitedSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;

- (void)gotoNextEvent;

- (void)gotoNextEventIgnoringDelay:(_Bool)arg1;

- (void)gotoNextEventWithoutAnimation;

- (_Bool)gotoNextSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;

- (void)gotoPreviousEvent;

- (_Bool)gotoPreviousSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;

- (_Bool)gotoSlideNode:(id)arg1 toEventIndex:(unsigned long long)arg2 shouldAnimate:(_Bool)arg3 ignoreDelays:(_Bool)arg4;

- (id)init;

- (id)initWithShow:(id)arg1 canvasDelegate:(id)arg2;

@property(readonly, nonatomic, getter=isAnimating) _Bool animating;

@property(readonly, nonatomic, getter=isAtBeginning) _Bool atBeginning;

- (_Bool)isHyperlinkAtPoint:(struct CGPoint)arg1 hitObject:(id *)arg2 hitRep:(id *)arg3 hitInfo:(id *)arg4;

@property(nonatomic) _Bool isHyperlinkInProgress; // @synthesize isHyperlinkInProgress=mIsHyperlinkInProgress;

@property(readonly, nonatomic, getter=isNonMovieAnimationActive) _Bool nonMovieAnimationActive;

@property(readonly, nonatomic, getter=isNonMovieAnimationAnimating) _Bool nonMovieAnimationAnimating;

@property(readonly, nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=mIsPaused;

- (id)movieRendererAtPoint:(struct CGPoint)arg1;

@property(nonatomic) KNMovieRenderer *movieRendererWithVisibleHUD; // @synthesize movieRendererWithVisibleHUD=mMovieRendererWithVisibleHUD;

@property(readonly, nonatomic) NSSet *movieRenderers;

@property(readonly, nonatomic) unsigned long long nextEventIndex;

@property(readonly, nonatomic) KNSlideNode *nextSlideNode;

- (id)nextSlideNodeAfterSlideNode:(id)arg1;

- (id)p_animator;

- (id)p_currentBuildChunks;

- (double)p_defaultViewScaleForBaseLayer:(id)arg1;

- (void)p_endShowFromAnimator;

- (void)p_eventAnimationBecameActive:(id)arg1;

- (void)p_eventEnded:(id)arg1;

- (void)p_eventStarted:(id)arg1;

- (void)p_gotoPreviousAndJumpToFirstEvent:(_Bool)arg1;

- (id)p_hyperlinkURLForTarget:(id)arg1 rep:(id)arg2 info:(id)arg3;

- (void)p_movieEnded:(id)arg1;

- (void)p_movieStarted:(id)arg1;

- (_Bool)p_processHyperlinkURL:(id)arg1;

- (void)p_releaseDiscreteGPUIfRetained;

- (void)p_resetAnimatorAndSetGoToFirstEvent:(_Bool)arg1;

- (void)p_resetAnimatorAtEventIndex:(unsigned long long)arg1;

- (void)p_retainDiscreteGPUIfNeeded;

- (void)p_setAnimator:(id)arg1;

- (id)p_topLevelRepsForHitTesting;

- (void)pauseAnimations;

- (void)pauseAnimationsWithConcealingStyle:(long long)arg1;

- (void)pauseSoundtrack;

@property(readonly, nonatomic) long long pausedConcealingStyle;

- (void)playAutomaticEvents;

@property(nonatomic) int playMode; // @synthesize playMode=mPlayMode;

- (void)playPreparedShow;

@property(nonatomic) struct CGColorSpace *playbackColorSpace; // @synthesize playbackColorSpace=mPlaybackColorSpace;

@property(retain, nonatomic) NSObject<KNPlaybackConcealer> *playbackConcealer; // @synthesize playbackConcealer=mPlaybackConcealer;

@property(readonly, nonatomic) int playbackState; // @synthesize playbackState=mPlaybackState;

@property(nonatomic) _Bool playsAutomaticEvents; // @synthesize playsAutomaticEvents=mPlaysAutomaticEvents;

- (void)prepareOnLayer:(id)arg1 atSlideNode:(id)arg2 isBaseLayerVisible:(_Bool)arg3;

- (void)prepareOnLayer:(id)arg1 viewScale:(double)arg2 atSlideNode:(id)arg3 isBaseLayerVisible:(_Bool)arg4;

- (_Bool)processHyperlinkForTarget:(id)arg1 rep:(id)arg2 info:(id)arg3;

- (void)renderCurrentEvent;

- (void)resizeShowToFitBaseLayer;

- (void)restartPlaybackIfNeeded;

- (void)resumeAnimationsIfPaused;

- (void)resumeRendering;

- (void)resumeSoundtrack;

- (void)setBreadCrumbTrail:(id)arg1;

@property(nonatomic) _Bool shouldAnimateNullTransitions;

@property(nonatomic) _Bool shouldAnimateTransitionOnLastSlide;

@property(readonly, nonatomic) KNShow *show; // @synthesize show=mShow;

- (void)startSoundtrackAtMediaIndex:(unsigned long long)arg1 time:(double)arg2;

- (void)stopAnimations;

- (void)stopAnimationsAndGotoCompletionOfEvent;

- (void)stopSoundtrack;

- (void)suspendRendering;

- (void)tearDownShow;

@property(readonly, nonatomic) unsigned long long visibleEventIndex;



@end


