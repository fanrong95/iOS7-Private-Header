/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "NSCopying.h"

#import "NSMutableCopying.h"

#import "TSDMixing.h"

#import "TSSPreset.h"

#import "TSSPresetSource.h"



@class NSString, TSUColor;



__attribute__((visibility("hidden")))

@interface TSDShadow : NSObject <TSDMixing, TSSPreset, TSSPresetSource, NSCopying, NSMutableCopying>

{

    double mAngle;

    double mOffset;

    double mRadius;

    double mOpacity;

    struct CGColor *mColor;

    _Bool mEnabled;

}



+ (_Bool)automaticallyNotifiesObserversOfTSUColor;

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;

+ (_Bool)canMixWithNilObjects;

+ (id)contactShadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 height:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;

+ (id)curvedShadowWithOffset:(double)arg1 angle:(double)arg2 radius:(double)arg3 curve:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;

+ (id)defaultDisabledShadow;

+ (id)defaultShadow;

+ (id)instanceWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;

+ (id)keyPathsForValuesAffectingTSUColor;

+ (id)mixableObjectClasses;

+ (id)p_defaultShadowEnabled:(_Bool)arg1;

+ (id)presetKinds;

+ (id)shadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(struct CGColor *)arg5 enabled:(_Bool)arg6;

+ (id)shadowWithNSShadow:(id)arg1;

- (id)NSShadow;

@property(readonly, nonatomic) TSUColor *TSUColor;

@property(readonly, nonatomic) double angle; // @synthesize angle=mAngle;

- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2;

- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2 flipped:(_Bool)arg3;

- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2 flipped:(_Bool)arg3 extraOffset:(struct CGSize)arg4;

- (struct CGRect)boundsForRep:(id)arg1;

- (struct CGRect)boundsInNaturalSpaceForRep:(id)arg1;

- (double)clampOffset:(double)arg1;

- (double)clampOpacity:(double)arg1;

- (double)clampRadius:(double)arg1;

@property(readonly, nonatomic) struct CGColor *color; // @synthesize color=mColor;

- (id)copyWithZone:(struct _NSZone *)arg1;

- (void)dealloc;

- (id)description;

- (_Bool)differenceRequiresRebuilding:(id)arg1;

- (unsigned long long)hash;

- (id)i_initWithOpacity:(double)arg1 color:(struct CGColor *)arg2 enabled:(_Bool)arg3;

- (struct CGImage *)i_newEmptyImageWithSize:(struct CGSize)arg1;

- (id)initWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;

- (_Bool)isContactShadow;

- (_Bool)isCurvedShadow;

- (_Bool)isDropShadow;

@property(readonly, nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=mEnabled;

- (_Bool)isEqual:(id)arg1;

- (_Bool)isThemeEquivalent:(id)arg1;

- (SEL)mapThemeAssetSelector;

- (id)mixedBaseObjectWithObject:(id)arg1;

- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;

- (long long)mixingTypeWithObject:(id)arg1;

- (id)mutableCopy;

- (id)mutableCopyWithZone:(struct _NSZone *)arg1;

- (id)newShadowClampedForSwatches;

- (struct CGImage *)newShadowImageForRep:(id)arg1 withSize:(struct CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;

@property(readonly, nonatomic) double offset; // @synthesize offset=mOffset;

@property(readonly, nonatomic) struct CGPoint offsetDelta;

@property(readonly, nonatomic) double opacity; // @synthesize opacity=mOpacity;

@property(readonly, nonatomic) NSString *presetKind;

@property(readonly, nonatomic) double radius; // @synthesize radius=mRadius;

- (void)saveToArchive:(struct ShadowArchive *)arg1 archiver:(id)arg2;

- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1;

- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalAngle:(double)arg2;

- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;

- (id)shadowByTransformingByTransform:(struct CGAffineTransform)arg1;

- (unsigned long long)shadowType;

- (_Bool)showForEditingText;

- (id)typeDescription;



@end


