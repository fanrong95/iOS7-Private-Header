/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "NSCopying.h"



@class NSIndexSet;



__attribute__((visibility("hidden")))

@interface TSTCellRegion : NSObject <NSCopying>

{

    unsigned long long mCellRangesCount;

    CDStruct_5f1f7aa9 *mCellRanges;

    CDStruct_5f1f7aa9 mBoundingCellRange;

    unsigned long long mCellCount;

    NSIndexSet *mIntersectingColumnsIndexSet;

    NSIndexSet *mIntersectingRowsIndexSet;

    CDStruct_0441cfb5 mUpperLeftCellID;

    CDStruct_0441cfb5 mBottomRightCellID;

}



+ (id)invalidRegion;

+ (id)region:(id)arg1 addingRange:(CDStruct_5f1f7aa9)arg2;

+ (id)region:(id)arg1 addingRegion:(id)arg2;

+ (id)region:(id)arg1 intersectingRange:(CDStruct_5f1f7aa9)arg2;

+ (id)region:(id)arg1 subtractingRange:(CDStruct_5f1f7aa9)arg2;

+ (id)region:(id)arg1 subtractingRegion:(id)arg2;

+ (id)regionFillingColumnsFromRegion:(id)arg1;

+ (id)regionFillingRowsFromRegion:(id)arg1;

+ (id)regionFromCellMap:(id)arg1;

+ (id)regionFromColumnIndices:(id)arg1;

+ (id)regionFromRange:(CDStruct_5f1f7aa9)arg1;

+ (id)regionFromRowIndices:(id)arg1;

+ (id)unionEveryRangeInRegion:(id)arg1 withRange:(CDStruct_5f1f7aa9)arg2;

- (id).cxx_construct;

@property(readonly, nonatomic) CDStruct_0441cfb5 bottomRightCellID;

@property(readonly, nonatomic) CDStruct_5f1f7aa9 boundingCellRange;

@property(readonly, nonatomic) unsigned long long cellCount;

- (_Bool)containsCellID:(CDStruct_0441cfb5)arg1;

- (_Bool)containsCellRange:(CDStruct_5f1f7aa9)arg1;

- (_Bool)containsCellRegion:(id)arg1;

- (id)copyWithZone:(struct _NSZone *)arg1;

- (void)dealloc;

- (id)description;

- (void)enumerateCellIDsUsingBlock:(id)arg1;

- (void)enumerateCellRangesUsingBlock:(id)arg1;

- (void)enumerateColumnRangesUsingBlock:(id)arg1;

- (void)enumerateColumnsUsingBlock:(id)arg1;

- (void)enumerateInDirection:(int)arg1 usingBlock:(id)arg2;

- (void)enumerateRowRangesUsingBlock:(id)arg1;

- (void)enumerateRowsUsingBlock:(id)arg1;

- (_Bool)equalsCellRange:(CDStruct_5f1f7aa9)arg1;

- (_Bool)equalsCellRegion:(id)arg1;

- (void)fillCellRangeColMajorSet:(set_1b864098 *)arg1 leftToRight:(_Bool)arg2;

- (void)fillCellRangeRowMajorSet:(set_bf64ed85 *)arg1 leftToRight:(_Bool)arg2;

- (id)init;

- (id)initFromMessage:(const struct CellRegion *)arg1;

- (id)intersectingColumnsIndexSet;

- (id)intersectingRowsIndexSet;

- (_Bool)intersectsCellRange:(CDStruct_5f1f7aa9)arg1;

- (_Bool)intersectsColumn:(unsigned char)arg1;

- (_Bool)intersectsRow:(unsigned short)arg1;

@property(readonly, nonatomic) _Bool isEmpty;

@property(readonly, nonatomic) _Bool isRectangle;

- (_Bool)isValid;

- (struct NSObject *)iterator;

@property(readonly, nonatomic) unsigned short numberOfIntersectingColumns;

@property(readonly, nonatomic) unsigned short numberOfIntersectingRows;

- (void)p_calculateAncillaryInformation;

- (void)p_calculateIntersectingColumns;

- (void)p_calculateIntersectingRows;

- (void)p_calculateUpperLeftAndBottomRightCellID;

- (void)p_insertRangeIntoRegion:(CDStruct_5f1f7aa9)arg1;

- (_Bool)partiallyIntersectsCellRange:(CDStruct_5f1f7aa9)arg1;

- (id)regionByAddingColumns:(id)arg1;

- (id)regionByAddingRange:(CDStruct_5f1f7aa9)arg1;

- (id)regionByAddingRegion:(id)arg1;

- (id)regionByAddingRows:(id)arg1;

- (id)regionByApplyingRowMapping:(id)arg1;

- (id)regionByIntersectingColumnIndices:(id)arg1;

- (id)regionByIntersectingRange:(CDStruct_5f1f7aa9)arg1;

- (id)regionByIntersectingRowIndices:(id)arg1;

- (id)regionByRemovingColumns:(id)arg1;

- (id)regionByRemovingRows:(id)arg1;

- (id)regionBySubtractingRange:(CDStruct_5f1f7aa9)arg1;

- (id)regionBySubtractingRegion:(id)arg1;

- (id)regionByUnioningEveryRangeInRegionWithRange:(CDStruct_5f1f7aa9)arg1;

- (id)regionOffsetBy:(CDStruct_79c71658)arg1;

- (struct NSObject *)rightToLeftIterator;

- (void)saveToMessage:(struct CellRegion *)arg1;

- (CDStruct_0441cfb5)suitableAnchor;

- (CDStruct_0441cfb5)suitableCursor;

- (struct NSObject *)topToBottomIterator;

@property(readonly, nonatomic) CDStruct_0441cfb5 upperLeftCellID;



@end


