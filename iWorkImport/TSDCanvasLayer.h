/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "TSDNoDefaultImplicitActionLayer.h"


@class TSDCanvasView, TSDInteractiveCanvasController;



__attribute__((visibility("hidden")))

@interface TSDCanvasLayer : TSDNoDefaultImplicitActionLayer

{

    TSDInteractiveCanvasController *mController;

    struct CGSize mUnscaledSize;

    struct UIEdgeInsets mContentInset;

    double mViewScale;

    unsigned long long mViewScaleAnimationCount;

    _Bool mAllowsPinchZoom;

    double mMinimumPinchViewScale;

    double mMaximumPinchViewScale;

    _Bool mShowsScaleFeedback;

    _Bool mIsInfinite;

    _Bool mHorizontallyCenteredInScrollView;

    _Bool mVerticallyCenteredInScrollView;

    _Bool mDisableLayout;

}



@property(nonatomic) _Bool allowsPinchZoom; // @synthesize allowsPinchZoom=mAllowsPinchZoom;

- (void)animateToViewScale:(double)arg1 contentCenter:(struct CGPoint)arg2 contentInset:(struct UIEdgeInsets)arg3 duration:(double)arg4 animation:(id)arg5 completionBlock:(id)arg6;

- (void)animateToViewScale:(double)arg1 contentCenter:(struct CGPoint)arg2 contentInset:(struct UIEdgeInsets)arg3 duration:(double)arg4 completionBlock:(id)arg5;

@property(readonly, nonatomic) TSDCanvasView *canvasView;

@property(nonatomic) _Bool centeredInScrollView; // @dynamic centeredInScrollView;

@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=mContentInset;

- (struct CGPoint)contentOffsetForUnscaledContentCenter:(struct CGPoint)arg1;

@property(nonatomic) TSDInteractiveCanvasController *controller; // @synthesize controller=mController;

- (void)fixFrameAndScrollView;

@property(nonatomic) _Bool horizontallyCenteredInScrollView; // @synthesize horizontallyCenteredInScrollView=mHorizontallyCenteredInScrollView;

- (id)init;

- (id)initWithCoder:(id)arg1;

@property(nonatomic, getter=isInfinite) _Bool infinite; // @synthesize infinite=mIsInfinite;

@property(nonatomic, getter=isLayoutDisabled) _Bool disableLayout; // @synthesize disableLayout=mDisableLayout;

- (void)layoutIfNeededIgnoringDisabledLayout;

- (void)layoutSublayers;

@property(nonatomic) double maximumPinchViewScale; // @synthesize maximumPinchViewScale=mMaximumPinchViewScale;

@property(nonatomic) double minimumPinchViewScale; // @synthesize minimumPinchViewScale=mMinimumPinchViewScale;

- (void)p_commonInit;

- (struct CGPoint)p_contentOffsetForUnscaledContentCenter:(struct CGPoint)arg1 viewScale:(double)arg2 contentInset:(struct UIEdgeInsets)arg3;

- (struct CGRect)p_fixedBoundsForScrollViewSize:(struct CGSize)arg1 viewScale:(double)arg2 contentInset:(struct UIEdgeInsets)arg3;

- (void)p_reenableDrawingAfterResumingFromBackground;

- (void)p_scrollViewScrollerStyleDidChange:(id)arg1;

- (void)p_setEnclosingScrollViewZoomParameters;

- (void)p_setViewScale:(double)arg1;

- (void)p_setViewScale:(double)arg1 preservingScrollOffset:(_Bool)arg2;

- (void)setNeedsDisplayForDirtyTiles:(id)arg1;

- (void)setNeedsLayout;

- (void)setScrollViewFrameMaintainingApparentScrollPosition:(struct CGRect)arg1;

- (void)setScrollViewFrameMaintainingApparentScrollPosition:(struct CGRect)arg1 animated:(_Bool)arg2;

@property(nonatomic) _Bool showsScaleFeedback; // @synthesize showsScaleFeedback=mShowsScaleFeedback;

@property(nonatomic) struct CGSize unscaledSize; // @synthesize unscaledSize=mUnscaledSize;

@property(nonatomic) _Bool verticallyCenteredInScrollView; // @synthesize verticallyCenteredInScrollView=mVerticallyCenteredInScrollView;

@property(nonatomic) double viewScale; // @synthesize viewScale=mViewScale;

- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 maintainPosition:(_Bool)arg3 animated:(_Bool)arg4;

- (void)teardown;

@property(readonly, nonatomic) struct CGPoint unscaledContentCenter;



@end


