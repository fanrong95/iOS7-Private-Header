/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "TSDStroke.h"


@class NSString, TSDFrameSpec;



__attribute__((visibility("hidden")))

@interface TSDFrame : TSDStroke

{

    TSDFrameSpec *mSpec;

    NSString *mFrameName;

    double mAssetScale;

    _Bool mScaledSizesValid;

    double mLeftWidth;

    double mRightWidth;

    double mTopHeight;

    double mBottomHeight;

    struct CGSize mAdornmentSize;

}



+ (Class)mutableClass;

- (id)archivableFrameName;

@property(readonly, nonatomic) double assetScale; // @synthesize assetScale=mAssetScale;

- (_Bool)canApplyDirectlyToRepCALayer;

- (_Bool)canApplyToCAShapeLayer;

- (id)copyWithZone:(struct _NSZone *)arg1;

- (struct CGRect)coverageRect:(struct CGRect)arg1;

- (struct CGRect)coverageRectWithoutAdornment:(struct CGRect)arg1;

- (void)dealloc;

- (id)description;

- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;

- (_Bool)drawsInOneStep;

- (id)frameName;

@property(readonly, nonatomic) TSDFrameSpec *frameSpec; // @synthesize frameSpec=mSpec;

- (_Bool)hasMask;

- (unsigned long long)hash;

- (struct CGRect)i_adornmentRectForRect:(struct CGRect)arg1;

- (double)i_bottomHeight;

- (double)i_leftWidth;

- (double)i_rightWidth;

- (double)i_topHeight;

- (_Bool)i_willRenderForRect:(struct CGRect)arg1;

- (id)initWithArchive:(const struct StrokeArchive *)arg1 unarchiver:(id)arg2;

- (id)initWithFrameName:(id)arg1;

- (id)initWithFrameSpec:(id)arg1;

- (id)initWithFrameSpec:(id)arg1 assetScale:(double)arg2;

- (id)initWithFrameSpec:(id)arg1 assetScale:(double)arg2 archivableFrameName:(id)arg3;

- (_Bool)isEqual:(id)arg1;

- (_Bool)isFrame;

- (_Bool)isNullStroke;

- (double)minimumAssetScale;

- (id)mutableCopyWithZone:(struct _NSZone *)arg1;

- (struct _TSDStrokeOutsets)outsets;

- (struct CGRect)p_coverageRectWithAdornment:(struct CGRect)arg1;

- (struct CGRect)p_coverageRectWithoutAdornment:(struct CGRect)arg1;

- (struct CGSize)p_minimumRenderedSize;

- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4;

- (_Bool)prefersToApplyToCAShapeLayerDuringManipulation;

- (void)saveToArchive:(struct StrokeArchive *)arg1 archiver:(id)arg2;

- (_Bool)shouldRender;

- (_Bool)shouldRenderForSizeIncludingCoverage:(struct CGSize)arg1;

- (id)strokeByTransformingByTransform:(struct CGAffineTransform)arg1;

- (_Bool)supportsColor;

- (_Bool)supportsLineOptions;

- (_Bool)supportsPattern;



@end


