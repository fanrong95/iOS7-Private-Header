/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "TSDLayout.h"


#import "TPAttachmentLayoutParent.h"

#import "TSWPLayoutTarget.h"



@class NSMutableArray, TPFootnoteHeightMeasurer, TPFootnoteMarkProvider, TSDCanvas, TSPObject<TSDHint>;



__attribute__((visibility("hidden")))

@interface TPBodyLayout : TSDLayout <TSWPLayoutTarget, TPAttachmentLayoutParent>

{

    NSMutableArray *_columns;

    NSMutableArray *_anchoredDrawablesForRelayout;

    TPFootnoteMarkProvider *_footnoteMarkProvider;

    TPFootnoteHeightMeasurer *_footnoteHeightMeasurer;

}



+ (struct CGSize)minimumBodySize;

- (void)addAttachmentLayout:(id)arg1;

@property(readonly, nonatomic) struct CGPoint anchorPoint;

- (struct CGPoint)anchoredAttachmentPositionFromLayoutPosition:(struct CGPoint)arg1;

@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout; // @synthesize anchoredDrawablesForRelayout=_anchoredDrawablesForRelayout;

@property(readonly, nonatomic) unsigned int autosizeFlags;

- (struct CGPoint)calculatePointFromSearchReference:(id)arg1;

@property(readonly, nonatomic) TSDCanvas *canvas;

- (struct CGPoint)capturedInfoPositionForAttachment;

- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;

@property(readonly, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;

- (id)computeLayoutGeometry;

- (double)contentHeight;

- (id)currentAnchoredDrawableLayouts;

- (id)currentInlineDrawableLayouts;

@property(readonly, nonatomic) struct CGSize currentSize;

- (void)dealloc;

- (id)existingAttachmentLayoutForInfo:(id)arg1;

@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;

@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;

- (_Bool)invalidateForPageCountChange;

- (void)invalidateSize;

- (_Bool)isLastTarget;

- (_Bool)isLayoutOffscreen;

- (void)killColumns;

@property(readonly, nonatomic) _Bool layoutIsValid;

- (struct CGPoint)layoutPositionFromAnchoredAttachmentPosition:(struct CGPoint)arg1;

- (void)layoutSearchForAnnotationWithHitBlock:(id)arg1;

- (void)layoutSearchForString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(id)arg3;

@property(readonly, nonatomic) double maxAnchorY;

@property(readonly, nonatomic) struct CGSize maxSize;

- (struct CGSize)maximumFrameSizeForChild:(id)arg1;

- (struct CGSize)maximumSizeForChildLayout:(id)arg1;

@property(readonly, nonatomic) struct CGSize minSize;

@property(readonly, nonatomic) int naturalAlignment;

@property(readonly, nonatomic) int naturalDirection;

- (_Bool)needsInflation;

@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;

@property(readonly, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;

@property(readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;

- (id)p_attachedLayoutsInLayout:(id)arg1;

- (void)p_killDrawableLayouts:(id)arg1;

- (struct CGRect)p_rectForSelection:(id)arg1 useParagraphModeRects:(_Bool)arg2;

- (id)p_validatedLayoutForDrawable:(id)arg1 inContainingLayout:(id)arg2;

@property(readonly, nonatomic) unsigned long long pageCount;

@property(readonly, nonatomic) unsigned long long pageNumber;

@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;

@property(readonly, nonatomic) struct CGPoint position;

@property(readonly, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;

@property(readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;

- (_Bool)processWidowAndInflation;

- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;

- (struct CGRect)rectForSelection:(id)arg1;

- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;

- (_Bool)shouldProvideSizingGuides;

- (_Bool)siblingTargetIsManipulatingDrawable:(id)arg1;

- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;

@property(readonly, nonatomic) _Bool textIsVertical;

- (void)updateStartCharIndex;

- (void)validate;

- (id)validatedLayoutForAnchoredDrawable:(id)arg1;

- (id)validatedLayoutForInlineDrawable:(id)arg1;

@property(readonly, nonatomic) int verticalAlignment;

@property(readonly, nonatomic) _Bool wantsLineFragments;



// Remaining properties

@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;

@property(readonly, nonatomic) struct CGRect maskRect;

@property(readonly, nonatomic) _Bool shouldHyphenate;



@end


