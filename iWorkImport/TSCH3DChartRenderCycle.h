/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class CALayer<TSCH3DGLLayer>, TSCH3DChartRenderPresenter, TSCH3DGLFramebuffer, TSCH3DSceneRenderPipeline;



__attribute__((visibility("hidden")))

@interface TSCH3DChartRenderCycle : NSObject

{

    _Bool mHasFramebuffer;

    TSCH3DSceneRenderPipeline *mPipeline;

    TSCH3DChartRenderPresenter *mPresenter;

    TSCH3DChartRenderPresenter *mRenderPresenterToRestore;

}



+ (id)renderCycleWithRenderCycleInfo:(const struct RenderCycleInfo *)arg1;

- (_Bool)allocateFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;

- (_Bool)allocateLayerBasedFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;

- (void)beginInteractiveModeWithMinimumBufferSize:(struct CGSize)arg1;

- (void)cleanupRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;

- (void)copyFromChartRenderCycle:(id)arg1;

- (void)dealloc;

- (void)destroyFramebuffer;

- (void)endInteractiveMode;

@property(readonly, nonatomic) TSCH3DGLFramebuffer *framebuffer;

@property(readonly, nonatomic) _Bool hasFramebuffer; // @synthesize hasFramebuffer=mHasFramebuffer;

- (id)initWithRenderCycleInfo:(const struct RenderCycleInfo *)arg1;

@property(readonly, nonatomic) CALayer<TSCH3DGLLayer> *layer;

- (Class)layerCacheLogicClass;

- (Class)layerClass;

- (void)layoutWithBoundsSpaces:(const struct ChartProjectedBoundsSpaces *)arg1 scale:(float)arg2;

- (unsigned long long)multisamples;

- (void)p_setRenderPresenter:(id)arg1;

@property(readonly, nonatomic) TSCH3DSceneRenderPipeline *pipeline; // @synthesize pipeline=mPipeline;

- (void)presentRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;

@property(readonly, nonatomic) TSCH3DChartRenderPresenter *presenter; // @synthesize presenter=mPresenter;

- (void)restoreDefaultRenderPresenter;

- (_Bool)runPipeline:(id)arg1;

- (void)setLayerVisibleBounds:(struct CGRect)arg1;

- (id)setup;

- (_Bool)setupLayerFromLayerProvider:(id)arg1 canvas:(id)arg2 visible:(struct CGRect)arg3 pixelAlignmentLayer:(id)arg4;

- (void)setupOptionalTextureSizeHintUsingCanvasChartBodyBoundsWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;

- (_Bool)shouldDiscardRenderbuffers;

- (_Bool)shouldRenderLegendIntoSeparateLayer;

- (void)switchToRenderPresenter:(id)arg1;

- (_Bool)usesMultipassRendering;



@end


