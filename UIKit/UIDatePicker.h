/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "UIControl.h"


#import "NSCoding.h"



@class NSCalendar, NSDate, NSLocale, NSTimeZone, UIColor, _UIDatePickerView;



@interface UIDatePicker : UIControl <NSCoding>

{

    _UIDatePickerView *_pickerView;

    _Bool _useCurrentDateDuringDecoding;

}



+ (Class)_pickerViewClass;

@property(nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) _Bool allowsZeroCountDownDuration; // @dynamic allowsZeroCountDownDuration;

@property(nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) _Bool allowsZeroTimeInterval; // @dynamic allowsZeroTimeInterval;

- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;

- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;

@property(readonly, nonatomic, getter=_contentWidth) double contentWidth; // @dynamic contentWidth;

@property(readonly, nonatomic, getter=_dateUnderSelectionBar) NSDate *dateUnderSelectionBar; // @dynamic dateUnderSelectionBar;

@property(nonatomic, getter=_drawsBackground, setter=_setDrawsBackground:) _Bool drawsBackground; // @dynamic drawsBackground;

@property(retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;

- (void)_insertPickerView;

- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;

@property(readonly, nonatomic, getter=_isTimeIntervalMode) _Bool isTimeIntervalMode; // @dynamic isTimeIntervalMode;

- (id)_labelTextForCalendarUnit:(unsigned long long)arg1;

- (id)_locale;

- (void)_populateArchivedSubviews:(id)arg1;

- (id)_selectedTextForCalendarUnit:(unsigned long long)arg1;

- (void)_setHidesLabels:(_Bool)arg1;

- (void)_setHighlightsToday:(_Bool)arg1;

- (void)_setLocale:(id)arg1;

@property(retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;

@property(retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;

@property(nonatomic, getter=_useCurrentDateDuringDecoding, setter=_setUseCurrentDateDuringDecoding:) _Bool useCurrentDateDuringDecoding;

@property(nonatomic, getter=_usesBlackChrome, setter=_setUsesBlackChrome:) _Bool usesBlackChrome; // @dynamic usesBlackChrome;

@property(nonatomic, getter=_usesModernStyle, setter=_setUsesModernStyle:) _Bool _usesModernStyle;

- (void)awakeFromNib;

@property(copy, nonatomic) NSCalendar *calendar; // @dynamic calendar;

@property(nonatomic) double countDownDuration; // @dynamic countDownDuration;

@property(retain, nonatomic) NSDate *date; // @dynamic date;

- (id)dateComponents;

@property(nonatomic) long long datePickerMode; // @dynamic datePickerMode;

- (void)encodeWithCoder:(id)arg1;

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

- (int)hour;

- (id)initWithCoder:(id)arg1;

- (id)initWithFrame:(struct CGRect)arg1;

- (void)invalidateIntrinsicContentSize;

@property(retain, nonatomic) NSLocale *locale; // @dynamic locale;

@property(retain, nonatomic) NSDate *maximumDate; // @dynamic maximumDate;

@property(retain, nonatomic) NSDate *minimumDate; // @dynamic minimumDate;

- (int)minute;

@property(nonatomic) long long minuteInterval; // @dynamic minuteInterval;

- (int)second;

- (void)setBackgroundColor:(id)arg1;

- (void)setBounds:(struct CGRect)arg1;

- (void)setDate:(id)arg1 animate:(_Bool)arg2;

- (void)setDate:(id)arg1 animated:(_Bool)arg2;

- (void)setDateComponents:(id)arg1;

- (void)setDelegate:(id)arg1;

- (void)setFrame:(struct CGRect)arg1;

- (void)setHighlightsToday:(_Bool)arg1;

- (void)setStaggerTimeIntervals:(_Bool)arg1;

@property(nonatomic) double timeInterval; // @dynamic timeInterval;

@property(retain, nonatomic) NSTimeZone *timeZone; // @dynamic timeZone;

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;



@end


