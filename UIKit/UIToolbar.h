/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "UIView.h"


#import "UIBarPositioning.h"

#import "_UIBackdropViewGraphicsQualityChangeDelegate.h"

#import "_UIBarPositioningInternal.h"

#import "_UIShadowedView.h"



@class NSArray, UIColor, UIImageView, _UIBackdropView;



@interface UIToolbar : UIView <_UIShadowedView, _UIBackdropViewGraphicsQualityChangeDelegate, _UIBarPositioningInternal, UIBarPositioning>

{

    id _delegate;

    NSArray *_items;

    UIColor *_barTintColor;

    struct {

        unsigned int barStyle:3;

        unsigned int mode:2;

        unsigned int wasEnabled:1;

        unsigned int downButtonSentAction:1;

        unsigned int barTranslucence:3;

        unsigned int isLocked:1;

        unsigned int backgroundLayoutNeedsUpdate:1;

        unsigned int hasCustomBackgroundView:1;

    } _toolbarFlags;

    struct __CFDictionary *_groups;

    NSArray *_buttonItems;

    long long _currentButtonGroup;

    long long _pressedTag;

    double _extraEdgeInsets;

    id _appearanceStorage;

    _UIBackdropView *_adaptiveBackdrop;

    UIImageView *_backgroundView;

    UIView *_shadowView;

    _Bool _isAdaptiveToolbarDisabled;

    _Bool _wantsLetterpressContent;

    long long _barPosition;

}



+ (float)_buttonGap;

+ (Class)defaultButtonClass;

+ (id)defaultButtonFont;

+ (double)defaultHeight;

+ (double)defaultHeightForBarSize:(int)arg1;

+ (double)defaultSelectionModeHeight;

+ (Class)defaultTextButtonClass;

- (void)_adjustButtonPressed:(id)arg1;

- (double)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;

- (double)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;

- (id)_backgroundView;

- (long long)_barPosition;

- (void)_buttonBarFinishedAnimating;

- (void)_buttonCancel:(id)arg1;

- (void)_buttonDown:(id)arg1;

- (void)_buttonDownDelayed:(id)arg1;

- (id)_buttonName:(id)arg1 withType:(int)arg2;

- (void)_buttonUp:(id)arg1;

- (id)_buttonWithDescription:(id)arg1;

- (void)_cleanupAdaptiveBackdrop;

- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;

- (id)_currentButtons;

- (id)_currentCustomBackground;

- (id)_currentCustomBackgroundRespectOversize_legacy:(_Bool *)arg1;

- (id)_customToolbarAppearance;

- (void)_customViewChangedForButtonItem:(id)arg1;

- (id)_descriptionForTag:(int)arg1;

- (void)_didFinishHidingRetainedOldItems:(id)arg1;

- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;

- (double)_edgeMarginForBorderedItem:(_Bool)arg1 isText:(_Bool)arg2;

- (id)_effectiveBarTintColor;

- (void)_effectiveBarTintColorDidChangeWithPreviousColor:(id)arg1;

- (void)_finishButtonAnimation:(int)arg1 forButton:(int)arg2;

- (void)_finishSetItems:(id)arg1 finished:(id)arg2 context:(id)arg3;

- (struct CGRect)_frameOfBarButtonItem:(id)arg1;

- (void)_frameOrBoundsChangedWithVisibleSizeChange:(_Bool)arg1 wasMinibar:(_Bool)arg2;

- (void)_frameOrCenterChanged;

- (_Bool)_hasCustomAutolayoutNeighborSpacing;

- (_Bool)_hidesShadow;

@property(nonatomic, getter=_isAdaptiveToolbarDisabled, setter=_setAdaptiveToolbarDisabled:) _Bool _adaptiveToolbarDisabled; // @synthesize _adaptiveToolbarDisabled=_isAdaptiveToolbarDisabled;

- (_Bool)_isInNavigationBar;

@property(nonatomic, getter=_isLocked, setter=_setLocked:) _Bool _locked;

- (_Bool)_isTopBar_legacy;

- (void)_layoutBackgroundViewConsideringStatusBar;

- (void)_populateArchivedSubviews:(id)arg1;

- (void)_positionToolbarButtons:(id)arg1 ignoringItem:(id)arg2 resetFontScaleAdjustment:(_Bool)arg3;

- (id)_positionToolbarButtons:(id)arg1 ignoringItem:(id)arg2 resetFontScaleAdjustment:(_Bool)arg3 actuallyRepositionButtons:(_Bool)arg4;

- (id)_repositionedItemsFromItems:(id)arg1 withBarButtonFrames:(id *)arg2 withHitRects:(id *)arg3 buttonIndexes:(id *)arg4 textButtonIndexes:(id *)arg5;

- (void)_sendAction:(id)arg1 withEvent:(id)arg2;

- (void)_setBackgroundImage:(id)arg1 mini:(id)arg2;

- (void)_setBackgroundView:(id)arg1;

- (void)_setBarPosition:(long long)arg1;

- (void)_setBarTintColor:(id)arg1 force:(_Bool)arg2;

- (void)_setButtonBackgroundImage:(id)arg1 mini:(id)arg2 forStates:(unsigned long long)arg3;

- (void)_setForceTopBarAppearance:(_Bool)arg1;

- (void)_setHidesShadow:(_Bool)arg1;

@property(retain, nonatomic, setter=_setShadowView:) UIView *_shadowView; // @synthesize _shadowView;

- (void)_setVisualAltitude:(double)arg1;

- (void)_setVisualAltitudeBias:(struct CGSize)arg1;

@property(nonatomic, setter=_setWantsLetterpressContent:) _Bool _wantsLetterpressContent; // @synthesize _wantsLetterpressContent;

- (void)_showButtons:(int *)arg1 withCount:(int)arg2 group:(int)arg3 withDuration:(double)arg4 adjustPositions:(_Bool)arg5 skipTag:(int)arg6;

- (_Bool)_subclassImplementsDrawRect;

- (unsigned long long)_subviewIndexAboveBackgroundView;

- (_Bool)_supportsAdaptiveBackground;

- (void)_updateBackgroundColor;

- (void)_updateBackgroundImage;

- (void)_updateItemsForNewFrame:(id)arg1;

- (void)_updateOpacity;

- (void)_updateScriptingInfo:(id)arg1 view:(id)arg2;

- (void)_updateToolbarButtonsForInteractionTintColorChange;

- (void)addConstraint:(id)arg1;

- (void)animateToolbarItemIndex:(unsigned long long)arg1 duration:(double)arg2 target:(id)arg3 didFinishSelector:(SEL)arg4;

- (void)animateWithDuration:(float)arg1 forButton:(int)arg2;

- (void)backdropView:(id)arg1 didChangeToGraphicsQuality:(long long)arg2;

- (id)backdropView:(id)arg1 willChangeToGraphicsQuality:(long long)arg2;

- (id)backgroundImageForToolbarPosition:(long long)arg1 barMetrics:(long long)arg2;

@property(readonly, nonatomic) long long barPosition; // @synthesize barPosition=_barPosition;

@property(nonatomic) long long barStyle;

@property(retain, nonatomic) UIColor *barTintColor; // @synthesize barTintColor=_barTintColor;

- (id)buttonItems;

- (id)createButtonWithDescription:(id)arg1;

- (int)currentButtonGroup;

- (void)dealloc;

- (struct CGSize)defaultSizeForOrientation:(long long)arg1;

@property(nonatomic) id <UIToolbarDelegate> delegate;

- (void)drawRect:(struct CGRect)arg1;

- (void)encodeWithCoder:(id)arg1;

- (double)extraEdgeInsets;

- (void)getVisibleButtonTags:(int *)arg1 count:(unsigned int *)arg2 maxItems:(unsigned int)arg3;

- (id)initInView:(id)arg1 withFrame:(struct CGRect)arg2 withItemList:(id)arg3;

- (id)initInView:(id)arg1 withItemList:(id)arg2;

- (id)initWithCoder:(id)arg1;

- (id)initWithFrame:(struct CGRect)arg1;

- (struct CGSize)intrinsicContentSize;

- (void)invalidateIntrinsicContentSize;

- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;

- (_Bool)isMinibar;

@property(nonatomic, getter=isTranslucent) _Bool translucent;

@property(copy, nonatomic) NSArray *items;

- (void)layoutSubviews;

- (int)mode;

- (_Bool)onStateForButton:(int)arg1;

- (void)positionButtons:(id)arg1 tags:(int *)arg2 count:(int)arg3 group:(int)arg4;

- (void)registerButtonGroup:(int)arg1 withButtons:(int *)arg2 withCount:(int)arg3;

- (void)removeConstraint:(id)arg1;

- (id)scriptingInfoWithChildren;

- (void)setAutoresizingMask:(unsigned long long)arg1;

- (void)setBackgroundImage:(id)arg1 forToolbarPosition:(long long)arg2 barMetrics:(long long)arg3;

- (void)setBadgeAnimated:(_Bool)arg1 forButton:(int)arg2;

- (void)setBadgeGlyph:(id)arg1 forButton:(int)arg2;

- (void)setBadgeValue:(id)arg1 forButton:(int)arg2;

- (void)setBarStyle:(long long)arg1 force:(_Bool)arg2;

- (void)setBounds:(struct CGRect)arg1;

- (void)setButtonBarTrackingMode:(int)arg1;

- (void)setButtonItems:(id)arg1;

- (void)setCenter:(struct CGPoint)arg1;

- (void)setExtraEdgeInsets:(double)arg1;

- (void)setFrame:(struct CGRect)arg1;

- (void)setItems:(id)arg1 animated:(_Bool)arg2;

- (void)setMode:(int)arg1;

- (void)setOnStateForButton:(_Bool)arg1 forButton:(int)arg2;

- (void)setShadowImage:(id)arg1 forToolbarPosition:(long long)arg2;

@property(retain, nonatomic) UIColor *tintColor; // @dynamic tintColor;

- (void)setTranslatesAutoresizingMaskIntoConstraints:(_Bool)arg1;

- (id)shadowImageForToolbarPosition:(long long)arg1;

- (void)showButtonGroup:(int)arg1 withDuration:(double)arg2;

- (void)showButtons:(int *)arg1 withCount:(int)arg2 withDuration:(double)arg3;

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;

- (void)tintColorDidChange;



@end


