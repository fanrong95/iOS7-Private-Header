/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class AFDictationConnection, AFDictationOptions, AFPreferences, NSArray, NSString, NSTimer, UIAlertView, UIDictationTestOps;



__attribute__((visibility("hidden")))

@interface UIDictationController : NSObject

{

    AFDictationConnection *_connection;

    AFDictationOptions *_options;

    AFPreferences *_preferences;

    NSArray *_availableLanguages;

    NSTimer *_recordingLimitTimer;

    void *_callCenterFrameworkFileHandle;

    id _callCenter;

    void *_facetimeCallFrameworkFileHandle;

    id _facetimeCallManager;

    _Bool _wasDisabledDueToTelephonyActivity;

    UIAlertView *_dictationAvailableSoonAlert;

    _Bool _connectionWasAlreadyAliveForStatisticsLogging;

    UIDictationTestOps *_dictationDebuggingOperations;

    NSString *_language;

    _Bool cancelledByWaitingForLocalResults;

    _Bool dictationStartedFromGesture;

    _Bool _performTestOperationForEditing;

    _Bool _discardNextHypothesis;

    _Bool _hasPreheated;

    NSString *_previousHypothesis;

    NSString *_inputModeThatInvokedDictation;

    struct _NSRange _insertionRange;

}



+ (id)activeConnection;

+ (id)activeInstance;

+ (void)applicationDidBecomeActive;

+ (void)applicationDidChangeStatusBarFrame;

+ (void)applicationWillResignActive;

+ (id)attributedStringForDictationResult:(id)arg1 andCorrectionIdentifier:(id)arg2;

+ (id)bestInterpretationForDictationResult:(id)arg1;

+ (_Bool)dictationIsFunctional;

+ (void)didBeginEditingInTextView:(id)arg1;

+ (void)didOneFingerTapInTextView:(id)arg1;

+ (void)disableGestureHandler;

+ (void)enableGestureHandlerIfNecessary;

+ (_Bool)fetchCurrentInputModeSupportsDictation;

+ (id)inputModeNameForDictation;

+ (id)interpretation:(id)arg1 forPhraseIndex:(unsigned long long)arg2 isShiftLocked:(_Bool)arg3 autocapitalizationType:(long long)arg4;

+ (_Bool)isRunning;

+ (_Bool)isTextViewOnStarkScreen:(id)arg1;

+ (void)keyboardDidSetInputMode;

+ (void)keyboardDidUpdateOnScreenStatus;

+ (void)keyboardWillChangeFromDelegate:(id)arg1 toDelegate:(id)arg2;

+ (void)logCorrectionStatisticsForDelegate:(id)arg1;

+ (void)logDictationString:(id)arg1;

+ (id)metadataDictionaryForCorrectionIdentifier:(id)arg1;

+ (_Bool)openAssistantFrameworkIfNecessary;

+ (void)poppedLastDebuggingOp;

+ (id)serializedDictationPhrases:(id)arg1;

+ (id)serializedDictationPhrases:(id)arg1 fromKeyboard:(_Bool)arg2 transform:(struct __CFString *)arg3;

+ (id)serializedDictationPhrasesFromTokenMatrix:(id)arg1 fromKeyboard:(_Bool)arg2 transform:(struct __CFString *)arg3;

+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2;

+ (_Bool)setupForOpeningConnections;

+ (_Bool)setupForPhraseSerialization;

+ (id)sharedInstance;

+ (_Bool)shouldDeleteBackwardInInputDelegate:(id)arg1;

+ (_Bool)shouldEnableGestureHandler;

+ (_Bool)shouldHideCursorForTextView:(id)arg1;

+ (_Bool)shouldHideSelectionUIForTextView:(id)arg1;

+ (_Bool)shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;

+ (id)singleLineResultForResult:(id)arg1;

+ (void)siriPreferencesChanged;

+ (_Bool)starkScreenExists;

+ (id)streamingHypothesisForPhrases:(id)arg1;

+ (id)stringForState:(int)arg1;

+ (id)stringForViewMode:(int)arg1;

+ (_Bool)takesPhysicalButtonsBegan:(id)arg1 forTextView:(id)arg2;

+ (_Bool)takesPhysicalButtonsEnded:(id)arg1 forTextView:(id)arg2;

+ (void)updateLandingView;

+ (_Bool)usingTypeAndTalk;

+ (int)viewMode;

- (id)_connection;

- (void)_restartDictation;

- (_Bool)_shouldDeleteBackwardInInputDelegate:(id)arg1;

- (_Bool)_shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;

- (id)assistantCompatibleLanguageCodeForInputMode:(id)arg1;

- (float)audioLevel;

- (void)cancelDictation;

- (void)cancelRecordingLimitTimer;

- (id)connection;

- (id)connectionForStatisticsLogging;

- (void)dealloc;

- (id)debuggingDictationOperations;

- (void)delayedTelephonyCheckingSetup;

- (void)dictationConnection:(id)arg1 didHypothesizePhrases:(id)arg2 languageModel:(id)arg3;

- (void)dictationConnection:(id)arg1 didRecognizePhrases:(id)arg2 languageModel:(id)arg3 correctionIdentifier:(id)arg4;

- (void)dictationConnection:(id)arg1 speechRecognitionDidFail:(id)arg2;

- (void)dictationConnection:(id)arg1 speechRecordingDidFail:(id)arg2;

- (void)dictationConnectionSpeechRecordingDidBegin:(id)arg1;

- (void)dictationConnectionSpeechRecordingDidCancel:(id)arg1;

- (void)dictationConnectionSpeechRecordingDidEnd:(id)arg1;

- (void)dictationConnectionSpeechRecordingWillBegin:(id)arg1;

- (void)dictationConnnectionDidChangeAvailability:(id)arg1;

- (_Bool)dictationEnabled;

- (id)dictationPhraseArrayFromDictationResult:(id)arg1;

@property(nonatomic) _Bool dictationStartedFromGesture; // @synthesize dictationStartedFromGesture;

- (void)disableAutorotation;

- (_Bool)disabledDueToTelephonyActivity;

@property(nonatomic) _Bool discardNextHypothesis; // @synthesize discardNextHypothesis=_discardNextHypothesis;

- (void)dismissDictationView:(id)arg1;

- (void)enableProximity;

- (void)endSessionIfNecessaryForTransitionFromState:(int)arg1 toState:(int)arg2;

- (void)errorAnimationDidFinish;

- (id)fieldIdentifierInputDelegate:(id)arg1;

- (void)finishDictationRecognition:(id)arg1;

@property(nonatomic) _Bool hasPreheated; // @synthesize hasPreheated=_hasPreheated;

- (id)init;

@property(retain, nonatomic) NSString *inputModeThatInvokedDictation; // @synthesize inputModeThatInvokedDictation=_inputModeThatInvokedDictation;

- (void)insertSerializedDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;

@property(nonatomic) struct _NSRange insertionRange; // @synthesize insertionRange=_insertionRange;

- (_Bool)isInDebuggingMode;

- (id)language;

- (id)languageCodeForAssistantLanguageCode:(id)arg1;

- (_Bool)needsLeadingSpaceForPhrases:(id)arg1;

- (_Bool)needsTrailingSpaceForPhrases:(id)arg1;

@property(nonatomic) _Bool performTestOperationForEditing; // @synthesize performTestOperationForEditing=_performTestOperationForEditing;

- (id)postfixTextForInputDelegate:(id)arg1;

- (id)prefixTextForInputDelegate:(id)arg1;

- (void)preheatIfNecessary;

@property(copy, nonatomic) NSString *previousHypothesis; // @synthesize previousHypothesis=_previousHypothesis;

- (void)proximityStateChanged:(id)arg1;

- (void)reenableAutorotation;

- (void)releaseConnection;

- (void)releaseConnectionAfterDictationRequest;

- (void)releaseConnectionAfterStatisticsLogging;

- (void)restartDictationForTypeAndTalk;

- (struct __CFString *)resultTransformForLanguageModel:(id)arg1;

- (id)resultWithTrailingSpace:(id)arg1;

- (id)selectedTextForInputDelegate:(id)arg1;

- (void)setDictationInputmode;

- (void)setLanguage:(id)arg1;

- (void)setState:(int)arg1;

- (void)setupConnectionOptions;

- (void)setupForDictationStartForReason:(long long)arg1;

- (void)setupForStreamingDictationStart;

- (void)setupToInsertResultForNewHypothesis:(id)arg1;

- (void)startConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;

- (void)startConnectionForReason:(long long)arg1;

- (void)startDictation;

- (void)startDictationForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;

- (void)startDictationForReason:(long long)arg1;

- (void)startDictationForStark;

- (void)startRecordingLimitTimer;

- (int)state;

- (void)stopDictation;

- (id)supportedDictationLanguages:(id)arg1;

- (_Bool)supportsInputMode:(id)arg1 error:(id *)arg2;

- (void)switchToDictationInputMode;

- (_Bool)wasDisabledDueToTelephonyActivity;



@end


