/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "UIPickerView.h"


#import "UIPickerViewDataSource.h"

#import "UIPickerViewDelegate.h"



@class NSCalendar, NSDate, NSDateComponents, NSLocale, NSTimeZone, UIDatePicker, UIFont, UILabel, _UIDatePickerMode;



__attribute__((visibility("hidden")))

@interface _UIDatePickerView : UIPickerView <UIPickerViewDelegate, UIPickerViewDataSource>

{

    long long _loadingDate;

    NSDate *_userSuppliedDate;

    NSDate *_userSuppliedMinimumDate;

    NSDate *_userSuppliedMaximumDate;

    NSLocale *_compositeLocale;

    NSLocale *_userProvidedLocale;

    NSCalendar *_userProvidedCalendar;

    NSDate *_minimumDate;

    NSDate *_maximumDate;

    NSDateComponents *_lastSelectedDateComponents;

    _Bool _allowsZeroTimeInterval;

    _UIDatePickerMode *_mode;

    NSTimeZone *_timeZone;

    double _timeInterval;

    UILabel *_hourLabel;

    UILabel *_minuteLabel;

    UIDatePicker *_datePickerDelegate;

    id _delegateOfDatePicker;

    int _expectedAMPM;

    struct {

        unsigned int staggerTimeIntervals:1;

        unsigned int loadingDateOrTime:1;

        unsigned int highlightsToday:1;

        unsigned int usesBlackChrome:1;

    } _datePickerFlags;

}



@property(nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) _Bool allowsZeroCountDownDuration;

@property(nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) _Bool allowsZeroTimeInterval;

@property(readonly, nonatomic, getter=_amPmValue) long long amPmValue; // @dynamic amPmValue;

- (id)_componentsSelectedAfterEnforcingValidityOfComponents:(id)arg1 withLastManipulatedComponent:(long long)arg2;

- (id)_contentViewForSizingLabelForPositioningInComponent:(long long)arg1;

- (void)_datePickerReset:(id)arg1;

- (void)_doneLoadingDateOrTime;

- (void)_fadeLabelForCalendarUnit:(unsigned long long)arg1 toText:(id)arg2 animated:(_Bool)arg3;

@property(readonly, nonatomic, getter=_hasCustomCalendar) _Bool hasCustomCalendar; // @dynamic hasCustomCalendar;

@property(readonly, nonatomic, getter=_hasCustomLocale) _Bool hasCustomLocale; // @dynamic hasCustomLocale;

- (id)_hoursStringForHour:(long long)arg1;

@property(readonly, nonatomic, getter=_hrMinFont) UIFont *hrMinFont; // @dynamic hrMinFont;

- (_Bool)_isCurrentCalendar:(id)arg1;

@property(readonly, nonatomic, getter=_isTimeIntervalMode) _Bool isTimeIntervalMode; // @dynamic isTimeIntervalMode;

- (id)_labelForCalendarUnit:(unsigned long long)arg1 createIfNecessary:(_Bool)arg2;

- (id)_labelTextForCalendarUnit:(unsigned long long)arg1;

@property(readonly, nonatomic, getter=_lastSelectedDateComponents) NSDateComponents *lastSelectedDateComponents; // @dynamic lastSelectedDateComponents;

- (void)_loadDate:(id)arg1 animated:(_Bool)arg2;

- (id)_makeNewAccessoryLabel;

- (id)_minutesStringForHour:(long long)arg1 minutes:(long long)arg2;

- (id)_orientationImageSuffix;

- (void)_positionLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 relativeTo:(id)arg3 order:(long long)arg4;

- (void)_rebuildCompositeLocale;

- (void)_resetSelectionOfTables;

- (void)_selectRow:(long long)arg1 inComponent:(long long)arg2 animated:(_Bool)arg3 notify:(_Bool)arg4;

- (int)_selectedHourForColumn:(int)arg1;

- (int)_selectedMinuteForColumn:(int)arg1;

- (id)_selectedTextForCalendarUnit:(unsigned long long)arg1;

- (long long)_selectionBarRowInComponent:(long long)arg1;

- (void)_setDate:(id)arg1 animated:(_Bool)arg2 forced:(_Bool)arg3;

- (void)_setHidesLabels:(_Bool)arg1;

- (void)_setLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 animated:(_Bool)arg3;

- (void)_setMode:(id)arg1;

@property(nonatomic, getter=_usesBlackChrome, setter=_setUsesBlackChrome:) _Bool usesBlackChrome;

- (_Bool)_showingDate;

- (double)_tableRowHeight;

- (void)_todayChanged:(id)arg1;

- (_Bool)_updateDateOrTime;

- (void)_updateEnabledCellsIncludingWMDCells:(_Bool)arg1;

- (void)_updateLabels:(_Bool)arg1;

- (_Bool)_updatedLastSelectedComponentsByValidatingSelectedDateWithLastManipulatedComponent:(long long)arg1;

- (id)_viewForSelectedRowInComponent:(long long)arg1;

@property(readonly, nonatomic) NSCalendar *calendar; // @dynamic calendar;

@property(readonly, nonatomic) double contentWidth; // @dynamic contentWidth;

@property(copy, nonatomic) NSDate *date;

@property(copy, nonatomic) NSDateComponents *dateComponents; // @dynamic dateComponents;

@property(nonatomic) long long datePickerMode;

- (void)dealloc;

@property(nonatomic) id delegateOfDatePicker; // @synthesize delegateOfDatePicker=_delegateOfDatePicker;

@property(nonatomic) _Bool highlightsToday; // @dynamic highlightsToday;

- (int)hour;

- (id)initWithFrame:(struct CGRect)arg1;

- (void)layoutSubviews;

@property(readonly, nonatomic) NSLocale *locale; // @dynamic locale;

@property(copy, nonatomic) NSDate *maximumDate; // @synthesize maximumDate=_userSuppliedMaximumDate;

@property(copy, nonatomic) NSDate *minimumDate; // @synthesize minimumDate=_userSuppliedMinimumDate;

- (int)minute;

@property(nonatomic) long long minuteInterval;

- (long long)numberOfComponentsInPickerView:(id)arg1;

- (id)pickerImageNamePrefix;

- (void)pickerTableView:(id)arg1 didChangeSelectionBarRowFrom:(long long)arg2 to:(long long)arg3;

- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;

- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;

- (double)pickerView:(id)arg1 rowHeightForComponent:(long long)arg2;

- (id)pickerView:(id)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(id)arg4;

- (double)pickerView:(id)arg1 widthForComponent:(long long)arg2;

- (void)scrollViewWillBeginDragging:(id)arg1;

- (int)second;

- (void)setDate:(id)arg1 animated:(_Bool)arg2;

- (void)setDelegate:(id)arg1;

- (void)setFrame:(struct CGRect)arg1;

@property(nonatomic) _Bool staggerTimeIntervals; // @dynamic staggerTimeIntervals;

@property(nonatomic) double timeInterval;

@property(retain, nonatomic) NSTimeZone *timeZone; // @synthesize timeZone=_timeZone;

@property(copy, nonatomic) NSCalendar *userProvidedCalendar;

@property(retain, nonatomic) NSLocale *userProvidedLocale;

- (id)shadowColor;



@end


