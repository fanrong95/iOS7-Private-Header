/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "UIView.h"


#import "UIKeyboardImplGeometryDelegate.h"



@class UITextInputTraits;



@interface UIKeyboard : UIView <UIKeyboardImplGeometryDelegate>

{

    UIView *m_snapshot;

    UITextInputTraits *m_defaultTraits;

    _Bool m_typingDisabled;

    _Bool m_minimized;

    _Bool m_respondingToImplGeometryChange;

    long long m_orientation;

    long long m_idiom;

}



+ (void)_clearActiveKeyboard;

+ (id)activeKeyboard;

+ (struct CGRect)defaultFrameForInterfaceOrientation:(long long)arg1;

+ (struct CGSize)defaultSize;

+ (struct CGSize)defaultSizeForInterfaceOrientation:(long long)arg1;

+ (void)initImplementationNow;

+ (_Bool)isInHardwareKeyboardMode;

+ (_Bool)isOnScreen;

+ (struct CGSize)keyboardSizeForInterfaceOrientation:(long long)arg1;

+ (void)removeAllDynamicDictionaries;

+ (_Bool)respondsToProxGesture;

+ (_Bool)shouldMinimizeForHardwareKeyboard;

+ (struct CGSize)sizeForInterfaceOrientation:(long long)arg1;

+ (_Bool)splitKeyboardEnabled;

- (void)_acceptCurrentCandidate;

- (id)_baseKeyForRepresentedString:(id)arg1;

- (void)_changeToKeyplane:(id)arg1;

- (void)_deactivateForBackgrounding;

- (id)_getAutocorrection;

- (id)_getCurrentKeyboardName;

- (id)_getCurrentKeyplaneName;

- (id)_getLocalizedInputMode;

- (_Bool)_hasCandidates;

- (_Bool)_isAutomaticKeyboard;

- (id)_keyplaneForKey:(id)arg1;

- (id)_keyplaneNamed:(id)arg1;

- (long long)_positionInCandidateList:(id)arg1;

- (void)_setAutocorrects:(_Bool)arg1;

- (void)_setInputMode:(id)arg1;

- (void)_setRenderConfig:(id)arg1;

- (id)_touchPoint:(struct CGPoint)arg1;

- (id)_typeCharacter:(id)arg1 withError:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;

- (void)acceptAutocorrection;

- (void)activate;

- (void)autoAdjustOrientation;

- (void)autoAdjustOrientationForSize:(struct CGSize)arg1;

- (_Bool)canDismiss;

@property(nonatomic) _Bool caretBlinks;

@property(nonatomic) _Bool caretVisible;

- (void)clearSnapshot;

- (void)deactivate;

- (void)dealloc;

- (id)defaultTextInputTraits;

- (id)delegate;

- (void)displayLayer:(id)arg1;

- (void)geometryChangeDone:(_Bool)arg1;

- (struct UIPeripheralAnimationGeometry)geometryForImplHeightDelta:(double)arg1;

- (struct UIPeripheralAnimationGeometry)geometryForMinimize:(_Bool)arg1;

- (_Bool)hasAutocorrectPrompt;

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

- (void)implBoundsHeightChangeDone:(double)arg1 suppressNotification:(_Bool)arg2;

- (id)initWithDefaultSize;

- (id)initWithFrame:(struct CGRect)arg1;

- (long long)interfaceOrientation;

- (_Bool)isActive;

@property(nonatomic, getter=isMinimized) _Bool minimized;

@property(nonatomic) long long keyboardIdiom; // @synthesize keyboardIdiom=m_idiom;

- (void)keyboardMinMaximized:(id)arg1 finished:(id)arg2 context:(id)arg3;

- (void)manualKeyboardWasOrderedIn;

- (void)manualKeyboardWasOrderedOut;

- (void)manualKeyboardWillBeOrderedIn;

- (void)manualKeyboardWillBeOrderedOut;

- (void)maximize;

- (void)minimize;

- (void)movedFromSuperview:(id)arg1;

- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;

- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;

- (void)prepareForGeometryChange;

- (void)prepareForImplBoundsHeightChange:(double)arg1 suppressNotification:(_Bool)arg2;

- (void)removeAutocorrectPrompt;

- (void)removeFromSuperview;

- (void)resizeForKeyplaneSize:(struct CGSize)arg1;

- (_Bool)returnKeyEnabled;

- (void)setCorrectionLearningAllowed:(_Bool)arg1;

- (void)setDefaultTextInputTraits:(id)arg1;

- (void)setFrame:(struct CGRect)arg1;

- (void)setNeedsDisplay;

- (void)setReturnKeyEnabled:(_Bool)arg1;

@property(nonatomic) _Bool showsCandidatesInline;

@property(nonatomic) _Bool typingEnabled;

- (_Bool)shouldSaveMinimizationState;

- (void)syncMinimizedStateToHardwareKeyboardAttachedState;

- (void)takeSnapshot;

- (id)targetWindow;

- (int)textEffectsVisibilityLevel;

- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;

- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;

- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;

- (void)updateLayout;



@end


