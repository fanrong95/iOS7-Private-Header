/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "NSCoding.h"

#import "NSCopying.h"



@interface UIBezierPath : NSObject <NSCopying, NSCoding>

{

    struct CGPath *_path;

    double *_lineDashPattern;

    unsigned long long _lineDashPatternCount;

    double _lineWidth;

    double _miterLimit;

    double _flatness;

    double _lineDashPhase;

    int _lineCapStyle;

    int _lineJoinStyle;

    _Bool _usesEvenOddFillRule;

    struct CGPath *_immutablePath;

    _Bool _immutablePathIsValid;

}



+ (id)_bezierPathWithArcRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;

+ (id)_bezierPathWithRoundedRect:(struct CGRect)arg1 byRoundingCorners:(unsigned long long)arg2 cornerRadius:(double)arg3;

+ (id)_continuousRoundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 cornerRadii:(id)arg3 segments:(int)arg4;

+ (id)_continuousRoundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 cornerRadius:(struct CGSize)arg3 segments:(int)arg4;

+ (id)_roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 cornerRadius:(double)arg3 segments:(int)arg4;

+ (id)_roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 cornerRadius:(double)arg3 segments:(int)arg4 legacyCorners:(_Bool)arg5;

+ (id)bezierPath;

+ (id)bezierPathWithArcCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;

+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;

+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;

+ (id)bezierPathWithRect:(struct CGRect)arg1;

+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 byRoundingCorners:(unsigned long long)arg2 cornerRadii:(struct CGSize)arg3;

+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;

+ (id)roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 withCornerRadii:(id)arg3;

+ (id)roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 withCornerRadius:(double)arg3;

+ (id)roundedRectBezierPath:(struct CGRect)arg1 withRoundedEdges:(unsigned long long)arg2;

+ (id)roundedRectBezierPath:(struct CGRect)arg1 withTopCornerRadius:(double)arg2 withBottomCornerRadius:(double)arg3;

+ (id)shadowBezierPath:(struct CGRect)arg1 withRoundedEdges:(unsigned long long)arg2;

@property(nonatomic) struct CGPath *CGPath;

- (void)_addRoundedCornerWithTrueCorner:(struct CGPoint)arg1 radius:(struct CGSize)arg2 corner:(unsigned long long)arg3 clockwise:(_Bool)arg4;

- (struct CGPath *)_createMutablePathByDecodingData:(id)arg1;

- (id)_initWithCGMutablePath:(struct CGPath *)arg1;

- (struct CGPath *)_mutablePath;

- (struct CGPath *)_pathRef;

- (void)addArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;

- (void)addClip;

- (void)addCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;

- (void)addLineToPoint:(struct CGPoint)arg1;

- (void)addQuadCurveToPoint:(struct CGPoint)arg1 controlPoint:(struct CGPoint)arg2;

- (void)appendBezierPath:(id)arg1;

- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;

- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;

- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1 transform:(struct CGAffineTransform)arg2;

- (void)appendBezierPathWithRect:(struct CGRect)arg1;

- (void)appendPath:(id)arg1;

- (void)applyTransform:(struct CGAffineTransform)arg1;

- (id)bezierPathByReversingPath;

@property(readonly, nonatomic) struct CGRect bounds;

- (void)clip;

- (void)closePath;

- (_Bool)containsPoint:(struct CGPoint)arg1;

- (id)copyWithZone:(struct _NSZone *)arg1;

@property(readonly, nonatomic) struct CGPoint currentPoint;

- (void)dealloc;

- (id)description;

- (void)encodeWithCoder:(id)arg1;

- (void)fill;

- (void)fillWithBlendMode:(int)arg1 alpha:(double)arg2;

@property(nonatomic) double flatness; // @synthesize flatness=_flatness;

- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;

- (id)init;

- (id)initWithCoder:(id)arg1;

@property(readonly, getter=isEmpty) _Bool empty;

@property(nonatomic) int lineCapStyle; // @synthesize lineCapStyle=_lineCapStyle;

@property(nonatomic) int lineJoinStyle; // @synthesize lineJoinStyle=_lineJoinStyle;

- (void)lineToPoint:(struct CGPoint)arg1;

@property(nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;

@property(nonatomic) double miterLimit; // @synthesize miterLimit=_miterLimit;

- (void)moveToPoint:(struct CGPoint)arg1;

- (void)removeAllPoints;

- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;

@property(nonatomic) _Bool usesEvenOddFillRule; // @synthesize usesEvenOddFillRule=_usesEvenOddFillRule;

- (void)stroke;

- (void)strokeWithBlendMode:(int)arg1 alpha:(double)arg2;



@end


