/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "UIView.h"


@class NSArray, NSMutableArray, NSString, UICalloutBarBackground, UICalloutBarButton, UIResponder;



@interface UICalloutBar : UIView

{

    id m_delegate;

    struct CGPoint m_pointBelowControls;

    struct CGPoint m_pointAboveControls;

    struct CGPoint m_pointLeftOfControls;

    struct CGPoint m_pointRightOfControls;

    struct CGPoint m_targetPoint;

    int m_targetDirection;

    _Bool m_targetHorizontal;

    _Bool m_fadeAfterCommand;

    _Bool m_recalcVisibleItems;

    _Bool m_shouldAppear;

    int m_pageCount;

    int m_currentPage;

    _Bool m_supressesHorizontalMovement;

    struct CGRect m_controlFrame;

    struct CGRect m_targetRect;

    struct CGRect m_supressesHorizontalMovementFrame;

    double m_supressedHorizontalMovementX;

    int m_arrowDirection;

    NSMutableArray *m_systemButtons;

    NSMutableArray *m_extraButtons;

    UICalloutBarButton *m_nextButton;

    UICalloutBarButton *m_previousButton;

    NSMutableArray *m_rectsToEvade;

    UICalloutBarBackground *m_overlay;

    double m_fadedTime;

    id m_responderTarget;

    NSArray *m_replacements;

    NSArray *m_extraItems;

    NSString *m_untruncatedString;

    _Bool m_didPromptForReplace;

    _Bool m_ignoringEvents;

    _Bool m_showAllReplacements;

    _Bool m_ignoreFade;

}



+ (void)_releaseSharedInstance;

+ (id)activeCalloutBar;

+ (void)fadeSharedCalloutBar;

+ (void)fadeSharedCalloutBarIfNeededForTouchInView:(id)arg1 window:(id)arg2;

+ (void)hideSharedCalloutBar;

+ (id)sharedCalloutBar;

+ (_Bool)sharedCalloutBarIsVisible;

- (void)_fadeAfterCommand:(SEL)arg1;

- (void)_showNextItems:(id)arg1;

- (void)_showPreviousItems:(id)arg1;

- (_Bool)_updateVisibleItemsAnimated:(_Bool)arg1;

- (void)addRectToEvade:(struct CGRect)arg1;

- (void)appear;

- (void)appearAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;

@property(nonatomic) int arrowDirection; // @synthesize arrowDirection=m_arrowDirection;

- (void)buttonHighlighted:(id)arg1 highlighted:(_Bool)arg2;

- (void)buttonPressed:(id)arg1;

- (_Bool)calculateControlFrameForCalloutSize:(struct CGSize)arg1 below:(_Bool)arg2;

- (_Bool)calculateControlFrameForCalloutSize:(struct CGSize)arg1 right:(_Bool)arg2;

- (_Bool)calculateControlFrameInsideTargetRect:(struct CGSize)arg1;

- (void)clearEvadeRects;

- (void)clearReplacements;

- (void)clearSupressesHorizontalMovementFrame;

- (void)configureButtons:(double)arg1;

@property(nonatomic) struct CGRect controlFrame; // @synthesize controlFrame=m_controlFrame;

- (void)dealloc;

@property(nonatomic) id delegate; // @synthesize delegate=m_delegate;

- (void)expandAfterAlertOrBecomeActive:(id)arg1;

@property(copy, nonatomic) NSArray *extraItems; // @synthesize extraItems=m_extraItems;

- (void)fade;

- (void)flattenForAlertOrResignActive:(id)arg1;

- (_Bool)hasReplacements;

- (void)hide;

- (void)hideAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

- (id)initWithFrame:(struct CGRect)arg1;

@property(nonatomic) struct CGPoint pointAboveControls; // @synthesize pointAboveControls=m_pointAboveControls;

@property(nonatomic) struct CGPoint pointBelowControls; // @synthesize pointBelowControls=m_pointBelowControls;

- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;

@property(nonatomic) struct CGPoint pointLeftOfControls; // @synthesize pointLeftOfControls=m_pointLeftOfControls;

@property(nonatomic) struct CGPoint pointRightOfControls; // @synthesize pointRightOfControls=m_pointRightOfControls;

- (_Bool)recentlyFaded;

- (_Bool)rectClear:(struct CGRect)arg1;

@property(readonly, nonatomic) NSArray *rectsToEvade; // @synthesize rectsToEvade=m_rectsToEvade;

- (void)removeFromSuperview;

@property(copy, nonatomic) NSArray *replacements; // @synthesize replacements=m_replacements;

- (void)resetPage;

@property(nonatomic) UIResponder *responderTarget; // @synthesize responderTarget=m_responderTarget;

- (_Bool)setFrameForSize:(struct CGSize)arg1;

@property(nonatomic) _Bool showAllReplacements; // @synthesize showAllReplacements=m_showAllReplacements;

@property(nonatomic) _Bool supressesHorizontalMovement; // @synthesize supressesHorizontalMovement=m_supressesHorizontalMovement;

@property(nonatomic) int targetDirection; // @synthesize targetDirection=m_targetDirection;

@property(nonatomic) _Bool targetHorizontal; // @synthesize targetHorizontal=m_targetHorizontal;

@property(nonatomic) struct CGPoint targetPoint; // @synthesize targetPoint=m_targetPoint;

@property(nonatomic) struct CGRect targetRect; // @synthesize targetRect=m_targetRect;

- (void)setTargetRect:(struct CGRect)arg1 arrowDirection:(int)arg2;

- (void)setTargetRect:(struct CGRect)arg1 pointBelowControls:(struct CGPoint)arg2 pointAboveControls:(struct CGPoint)arg3;

- (void)setTargetRect:(struct CGRect)arg1 pointLeftOfControls:(struct CGPoint)arg2 pointRightOfControls:(struct CGPoint)arg3;

@property(copy, nonatomic) NSString *untruncatedString; // @synthesize untruncatedString=m_untruncatedString;

- (void)show;

- (double)supressHorizontalXMovementIfNeededForPoint:(struct CGPoint)arg1 proposedX:(double)arg2;

- (id)targetForAction:(SEL)arg1;

- (int)textEffectsVisibilityLevel;

- (struct CGRect)textEffectsWindowBoundsWithoutStatusBar;

- (void)update;

- (void)updateAnimated:(_Bool)arg1;

- (void)updateAvailableButtons;

- (void)updateForCurrentPage;

@property(readonly, nonatomic) _Bool visible;



@end


