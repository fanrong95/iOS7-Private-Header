/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "UIView.h"


#import "UITextInput.h"

#import "UITextInputTraits.h"

#import "UITextLinkInteraction.h"



@class DOMHTMLElement, NSAttributedString, NSDictionary, NSString, UIColor, UIDelayedAction, UIFont, UITextInteractionAssistant, UITextPosition, UITextRange, UIWebDocumentView, WebFrame;



@interface UITextContentView : UIView <UITextInput, UITextLinkInteraction, UITextInputTraits>

{

    id m_delegate;

    WebFrame *m_frame;

    DOMHTMLElement *m_body;

    int m_marginTop;

    UIDelayedAction *m_scrollToVisibleTimer;

    struct UIEdgeInsets m_selectionInset;

    double m_bottomBufferHeight;

    _Bool m_editable;

    _Bool m_editing;

    _Bool m_becomesEditableWithGestures;

    _Bool m_becomingFirstResponder;

    _Bool m_reentrancyGuard;

    _Bool m_scrollsSelectionOnWebDocumentChanges;

    _Bool m_hasExplicitTextAlignment;

    _Bool m_allowsEditingTextAttributes;

    _Bool m_usesAttributedText;

    UITextInteractionAssistant *m_interactionAssistant;

    UIWebDocumentView *m_webView;

    UIFont *m_font;

    UIColor *m_textColor;

    long long m_textAlignment;

}



- (void)_addShortcut:(id)arg1;

- (unsigned long long)_allowedLinkTypes;

- (id)_automationValue;

- (void)_define:(id)arg1;

- (void)_didScroll;

- (void)_hideSelectionCommands;

- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;

- (id)_keyboardResponder;

- (void)_populateArchivedSubviews:(id)arg1;

- (void)_promptForReplace:(id)arg1;

- (id)_proxyTextInput;

- (void)_removeAttribute:(id)arg1 fromString:(id)arg2 andSetPropertyWith:(SEL)arg3 usingValueClass:(Class)arg4;

- (void)_removeTextViewPropertiesFromText:(id)arg1;

- (void)_scrollViewDidEndDecelerating;

- (void)_scrollViewDidEndDraggingWithDeceleration:(_Bool)arg1;

- (void)_scrollViewWillBeginDragging;

- (struct CGRect)_selectionClipRect;

- (void)_showTextStyleOptions:(id)arg1;

@property(nonatomic) _Bool allowsEditingTextAttributes;

@property(copy, nonatomic) NSAttributedString *attributedText;

- (id)automaticallySelectedOverlay;

- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;

- (_Bool)becomeFirstResponder;

- (_Bool)becomesEditableWithGestures;

- (void)beginSelectionChange;

@property(readonly, nonatomic) UITextPosition *beginningOfDocument;

- (double)bottomBufferHeight;

- (_Bool)canBecomeFirstResponder;

- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;

- (_Bool)canResignFirstResponder;

- (void)cancelAutoscroll;

- (void)cancelDataDetectorsWithWebLock;

- (void)cancelInteractionWithLink;

- (struct CGRect)caretRectForPosition:(id)arg1;

- (struct CGRect)caretRectForVisiblePosition:(id)arg1;

- (id)characterRangeAtPoint:(struct CGPoint)arg1;

- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;

- (void)clearScrollToVisibleTimer;

- (struct CGRect)closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint)arg1;

- (id)closestPositionToPoint:(struct CGPoint)arg1;

- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;

- (void)commonInitWithWebDocumentView:(id)arg1 isDecoding:(_Bool)arg2;

- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;

- (struct CGPoint)constrainedPoint:(struct CGPoint)arg1;

- (id)contentAsAttributedString;

- (id)contentAsHTMLString;

- (void)copy:(id)arg1;

- (void)cut:(id)arg1;

- (unsigned long long)dataDetectorTypes;

- (void)dealloc;

- (void)decreaseSize:(id)arg1;

@property(nonatomic) id <UITextContentViewDelegate> delegate; // @dynamic delegate;

- (void)deleteBackward;

- (void)didMoveToSuperview;

- (void)displayScrollerIndicators;

- (id)documentFragmentForPasteboardItemAtIndex:(long long)arg1;

- (void)encodeWithCoder:(id)arg1;

@property(readonly, nonatomic) UITextPosition *endOfDocument;

- (void)endSelectionChange;

- (void)ensureSelection;

- (struct CGRect)firstRectForRange:(id)arg1;

@property(retain, nonatomic) UIFont *font;

- (id)fontForCaretSelection;

- (void)forwardInvocation:(id)arg1;

- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;

- (_Bool)hasMarkedText;

- (_Bool)hasSelection;

- (_Bool)hasText;

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

- (void)increaseSize:(id)arg1;

- (id)initWithCoder:(id)arg1;

- (id)initWithFrame:(struct CGRect)arg1;

- (id)initWithFrame:(struct CGRect)arg1 webView:(id)arg2;

@property(nonatomic) id <UITextInputDelegate> inputDelegate;

- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;

- (id)insertDictationResultPlaceholder;

- (void)insertText:(id)arg1;

- (id)interactionAssistant;

@property(nonatomic, getter=isEditable) _Bool editable;

@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=m_editing;

- (_Bool)isFirstResponder;

- (_Bool)isInteractingWithLink;

- (_Bool)isSMSTextView;

- (void)keyboardDidShow:(id)arg1;

- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;

- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;

- (_Bool)keyboardInputChanged:(id)arg1;

- (void)keyboardInputChangedSelection:(id)arg1;

- (_Bool)keyboardInputShouldDelete:(id)arg1;

- (void)makeTextWritingDirectionLeftToRight:(id)arg1;

- (void)makeTextWritingDirectionRightToLeft:(id)arg1;

- (int)marginTop;

@property(readonly, nonatomic) UITextRange *markedTextRange;

@property(copy, nonatomic) NSDictionary *markedTextStyle;

- (id)metadataDictionariesForDictationResults;

- (id)methodSignatureForSelector:(SEL)arg1;

- (_Bool)mightHaveLinks;

- (struct CGPoint)offset;

- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;

- (unsigned long long)offsetInMarkedTextForSelection:(id)arg1;

- (void)paste:(id)arg1;

- (void)performBecomeEditableTasks;

- (void)performScrollSelectionToVisible:(_Bool)arg1;

- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;

- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;

- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;

- (void)recalculateStyle;

- (struct CGRect)rectForScrollToVisible;

- (struct CGRect)rectForSelection:(struct _NSRange)arg1;

- (void)registerForEditingDelegateNotification:(id)arg1 selector:(SEL)arg2;

- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;

- (void)removeFromSuperview;

- (void)replace:(id)arg1;

- (void)replaceRange:(id)arg1 withText:(id)arg2;

- (void)resetDataDetectorsResultsWithWebLock;

- (_Bool)resignFirstResponder;

- (void)scrollRangeToVisible:(struct _NSRange)arg1;

- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;

- (void)scrollSelectionToVisible:(_Bool)arg1;

- (void)scrollToVisibleTimerAction;

- (id)scrollView;

- (_Bool)scrollingEnabled;

@property(nonatomic) _Bool scrollsSelectionOnWebDocumentChanges; // @synthesize scrollsSelectionOnWebDocumentChanges=m_scrollsSelectionOnWebDocumentChanges;

- (void)select:(id)arg1;

- (void)selectAll;

- (void)selectAll:(id)arg1;

@property(nonatomic) struct _NSRange selectedRange;

- (id)selectedText;

@property(copy) UITextRange *selectedTextRange;

@property(nonatomic) long long selectionAffinity;

- (long long)selectionGranularity;

@property(nonatomic) struct UIEdgeInsets selectionInset; // @synthesize selectionInset=m_selectionInset;

- (struct _NSRange)selectionRange;

- (id)selectionRectsForRange:(id)arg1;

- (id)selectionView;

- (void)setAllowsFourWayRubberBanding:(_Bool)arg1;

- (void)setAllowsRubberBanding:(_Bool)arg1;

- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;

- (void)setBecomesEditableWithGestures:(_Bool)arg1;

- (void)setBottomBufferHeight:(double)arg1;

- (void)setContentToAttributedString:(id)arg1;

- (void)setContentToHTMLString:(id)arg1;

- (void)setDataDetectorTypes:(unsigned long long)arg1;

- (void)setFrame:(struct CGRect)arg1;

- (void)setMarginTop:(int)arg1;

- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;

- (void)setOffset:(struct CGPoint)arg1;

- (void)setScrollerIndicatorSubrect:(struct CGRect)arg1;

- (void)setScrollingEnabled:(_Bool)arg1;

- (void)setSelectionChangeCallbacksDisabled:(_Bool)arg1;

- (void)setSelectionGranularity:(long long)arg1;

- (void)setSelectionToEnd;

- (void)setSelectionToStart;

- (void)setSelectionWithPoint:(struct CGPoint)arg1;

- (void)setShowScrollerIndicators:(_Bool)arg1;

@property(copy, nonatomic) NSString *text;

@property(nonatomic) long long textAlignment;

@property(retain, nonatomic) UIColor *textColor;

- (_Bool)shouldStartDataDetectors;

- (_Bool)showScrollerIndicators;

- (void)startAutoscroll:(struct CGPoint)arg1;

- (void)startDataDetectorsWithWebLock;

- (void)startInteractionWithLinkAtPoint:(struct CGPoint)arg1;

- (void)startLongInteractionWithLinkAtPoint:(struct CGPoint)arg1;

- (id)styleString;

- (id)supportedPasteboardTypesForCurrentSelection;

- (void)tapLinkAtPoint:(struct CGPoint)arg1;

- (id)textInRange:(id)arg1;

- (id)textInputTraits;

- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;

- (struct CGSize)tileSizeForSize:(struct CGSize)arg1;

- (void)toggleBoldface:(id)arg1;

- (void)toggleItalics:(id)arg1;

- (void)toggleUnderline:(id)arg1;

@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;

- (void)touchScrollToVisibleTimer;

- (void)touchScrollToVisibleTimerWithDelay:(double)arg1;

- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;

- (id)undoManager;

- (id)undoManagerForWebView:(id)arg1;

- (void)unmarkText;

- (void)updateContentEditableAttribute:(_Bool)arg1;

- (void)updateInteractionWithLinkAtPoint:(struct CGPoint)arg1;

- (void)updateSelection;

- (void)updateWebViewObjects;

- (void)validateInteractionWithLinkAtPoint:(struct CGPoint)arg1;

- (struct CGRect)visibleRect;

- (struct CGRect)visibleTextRect;

- (id)webView;

- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;

- (void)webViewDidChange:(id)arg1;

- (_Bool)willInteractWithLinkAtPoint:(struct CGPoint)arg1;



// Remaining properties

@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;

@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;

@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;

@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;

@property(nonatomic) long long keyboardType; // @dynamic keyboardType;

@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;

@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;

@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;

@property(readonly, nonatomic) UIView *textInputView;



@end


