/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSMutableArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString;



__attribute__((visibility("hidden")))

@interface GKDiscoveryBonjour : NSObject

{

    NSString *_serviceType;

    NSString *_serviceDomain;

    struct _DNSServiceRef_t *_browseRef;

    struct _DNSServiceRef_t *_advertiseRef;

    id _browseCallback;

    id _connectionCallback;

    id _serviceNameCollisionCallback;

    _Bool _checkedInWithLaunchd;

    NSMutableArray *_launchdSources;

    int _listeningPort;

    NSMutableDictionary *_resolveContainers;

    NSObject<OS_dispatch_queue> *_resolveContainersSyncQueue;

}



@property(nonatomic) struct _DNSServiceRef_t *advertiseRef; // @synthesize advertiseRef=_advertiseRef;

@property(copy, nonatomic) id browseCallback; // @synthesize browseCallback=_browseCallback;

@property(nonatomic) struct _DNSServiceRef_t *browseRef; // @synthesize browseRef=_browseRef;

- (void)closeListeningSockets;

@property(copy, nonatomic) id connectionCallback; // @synthesize connectionCallback=_connectionCallback;

- (void)createDispatchEventWithSocket:(int)arg1;

- (void)dealloc;

- (id)init;

- (id)initWithDomain:(id)arg1 type:(id)arg2;

- (int)ipV4Socket;

- (int)ipV6Socket;

@property(retain, nonatomic) NSMutableArray *launchdSources; // @synthesize launchdSources=_launchdSources;

@property(retain, nonatomic) NSMutableDictionary *resolveContainers; // @synthesize resolveContainers=_resolveContainers;

@property(nonatomic) NSObject<OS_dispatch_queue> *resolveContainersSyncQueue; // @synthesize resolveContainersSyncQueue=_resolveContainersSyncQueue;

- (int)resolveName:(id)arg1 onIndex:(unsigned int)arg2 withCompletionHandler:(id)arg3;

- (void)sendBonjourRegistrationEvent:(id)arg1 discoveryInfo:(id)arg2;

@property(copy, nonatomic) NSString *serviceDomain; // @synthesize serviceDomain=_serviceDomain;

@property(copy, nonatomic) id serviceNameCollisionCallback; // @synthesize serviceNameCollisionCallback=_serviceNameCollisionCallback;

@property(copy, nonatomic) NSString *serviceType; // @synthesize serviceType=_serviceType;

- (void)setupBothListeningSockets;

- (void)setupListeningSockets;

- (void)startAdvertisingServiceName:(id)arg1 discoveryInfo:(id)arg2;

- (int)startBrowsing:(id)arg1;

- (void)stopAdvertising;

- (void)stopBrowsing;

- (void)stopResolve:(id)arg1;



@end


