/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "GKTableCleanupWhenRemoved.h"



@class GKSessionInternal, NSString;



__attribute__((visibility("hidden")))

@interface GKPeerInternal : NSObject <GKTableCleanupWhenRemoved>

{

    unsigned int _pid;

    NSString *_displayName;

    NSString *_serviceName;

    _Bool _isBusy;

    GKSessionInternal *_session;

    int _serviceCount;

    struct _DNSServiceRef_t *_resolveService;

    struct _DNSServiceRef_t *_txtRecordService;

    id *_addrList;

    unsigned int *_interfaceList;

    unsigned int _servicePort;

    struct _DNSServiceRef_t **_lookupServiceList;

    int _lookupServiceCount;

    int _lookupServiceSize;

    _Bool _moreResolvesComing;

    double _connectTimeout;

    _Bool _needsToTimeout;

}



+ (void)freeLookupList:(struct _DNSServiceRef_t **)arg1 andAddrList:(id *)arg2 andInterfaceList:(unsigned int *)arg3 count:(int)arg4;

- (void)addLookup:(struct _DNSServiceRef_t *)arg1;

- (void)cleanupForGKTable:(id)arg1;

- (void)clearResolving;

@property double connectTimeout; // @synthesize connectTimeout=_connectTimeout;

- (_Bool)containsLookupService:(struct _DNSServiceRef_t *)arg1;

- (void)copyLookupList:(struct _DNSServiceRef_t ***)arg1 count:(int *)arg2;

- (void)dealloc;

@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;

- (id)initWithPID:(unsigned int)arg1 displayName:(id)arg2 serviceName:(id)arg3;

@property(getter=isBusy) _Bool busy; // @synthesize busy=_isBusy;

@property _Bool moreResolvesComing; // @synthesize moreResolvesComing=_moreResolvesComing;

@property _Bool needsToTimeout; // @synthesize needsToTimeout=_needsToTimeout;

@property(readonly) unsigned int pid; // @synthesize pid=_pid;

- (void)removeAndReturnLookupList:(struct _DNSServiceRef_t ***)arg1 andAddrList:(id **)arg2 andInterfaceList:(unsigned int **)arg3 count:(int *)arg4;

@property struct _DNSServiceRef_t *resolveService; // @synthesize resolveService=_resolveService;

@property int serviceCount; // @synthesize serviceCount=_serviceCount;

@property(readonly) NSString *serviceName; // @synthesize serviceName=_serviceName;

@property unsigned int servicePort; // @synthesize servicePort=_servicePort;

@property(retain, nonatomic) GKSessionInternal *session; // @synthesize session=_session;

- (void)setAddr:(const struct sockaddr_in *)arg1 interface:(unsigned int)arg2 forLookupService:(struct _DNSServiceRef_t *)arg3;

@property struct _DNSServiceRef_t *txtRecordService; // @synthesize txtRecordService=_txtRecordService;

- (void)stopResolving;

- (void)stopTXTRecordMonitoring;

- (_Bool)tryDetruncateDisplayName:(id)arg1;

- (int)usableAddrs;



@end


