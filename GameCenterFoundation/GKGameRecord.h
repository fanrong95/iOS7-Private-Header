/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "GKGame.h"


@class GKAchievement, GKChallenge, GKGameRecordInternal, GKPlayer, NSDate, NSString;



@interface GKGameRecord : GKGame

{

    GKPlayer *_player;

    GKAchievement *_latestAchievement;

    unsigned long long _numberOfChallenges;

    GKChallenge *_latestChallenge;

    unsigned long long _numberOfActiveMatches;

    unsigned long long _numberOfLocalPlayerTurns;

}



+ (id)cacheKeyForPlayer:(id)arg1 game:(id)arg2;

+ (id)cacheKeyForPlayer:(id)arg1 internal:(id)arg2;

+ (id)gameRecordForPlayer:(id)arg1 game:(id)arg2;

+ (id)internalRepresentationCache;

+ (id)internalRepresentationForPlayer:(id)arg1 game:(id)arg2;

+ (void)invalidateCaches;

+ (void)loadGameRecordForPlayer:(id)arg1 game:(id)arg2 withCompletionHandler:(id)arg3;

+ (void)loadGameRecordsForPlayer:(id)arg1 games:(id)arg2 withCompletionHandler:(id)arg3;

+ (void)partitionGameRecords:(id)arg1 returniOS:(id *)arg2 returnMac:(id *)arg3;

+ (_Bool)supportsSecureCoding;

+ (void)updateGameRecords:(id)arg1 withCompletionHandlerAndError:(id)arg2;

- (void)dealloc;

- (id)description;

- (void)encodeWithCoder:(id)arg1;

- (unsigned long long)hash;

- (id)initWithCoder:(id)arg1;

- (id)initWithInternalRepresentation:(id)arg1;

- (id)initWithInternalRepresentation:(id)arg1 player:(id)arg2;

- (_Bool)isEqual:(id)arg1;

@property(retain, nonatomic) GKAchievement *latestAchievement; // @synthesize latestAchievement=_latestAchievement;

@property(retain, nonatomic) GKChallenge *latestChallenge; // @synthesize latestChallenge=_latestChallenge;

@property(nonatomic) unsigned long long numberOfActiveMatches; // @synthesize numberOfActiveMatches=_numberOfActiveMatches;

@property(nonatomic) unsigned long long numberOfChallenges; // @synthesize numberOfChallenges=_numberOfChallenges;

@property(nonatomic) unsigned long long numberOfLocalPlayerTurns; // @synthesize numberOfLocalPlayerTurns=_numberOfLocalPlayerTurns;

@property(readonly, nonatomic) _Bool played;

@property(retain, nonatomic) GKPlayer *player; // @synthesize player=_player;

@property(retain) GKGameRecordInternal *internal; // @dynamic internal;



// Remaining properties

@property(readonly, nonatomic) unsigned long long achievementPoints; // @dynamic achievementPoints;

@property(readonly, nonatomic) unsigned long long achievements; // @dynamic achievements;

@property(readonly, nonatomic) NSString *defaultLeaderboardIdentifier; // @dynamic defaultLeaderboardIdentifier;

@property(readonly, nonatomic) unsigned long long friendRank; // @dynamic friendRank;

@property(readonly, nonatomic) NSDate *lastPlayedDate; // @dynamic lastPlayedDate;

@property(readonly, nonatomic) unsigned long long maxAchievementPoints; // @dynamic maxAchievementPoints;

@property(readonly, nonatomic) unsigned long long maxAchievements; // @dynamic maxAchievements;

@property(readonly, nonatomic) unsigned long long maxFriendRank; // @dynamic maxFriendRank;

@property(readonly, nonatomic) unsigned long long maxRank; // @dynamic maxRank;

@property(readonly, nonatomic) unsigned long long numberOfCategories; // @dynamic numberOfCategories;

@property(readonly, nonatomic) unsigned long long numberOfLeaderboardSets; // @dynamic numberOfLeaderboardSets;

@property(readonly, nonatomic) unsigned long long numberOfLeaderboards; // @dynamic numberOfLeaderboards;

@property(readonly, nonatomic) NSDate *purchaseDate; // @dynamic purchaseDate;

@property(readonly, nonatomic) unsigned long long rank; // @dynamic rank;

@property(readonly, nonatomic) _Bool supportsAchievements; // @dynamic supportsAchievements;

@property(readonly, nonatomic) _Bool supportsLeaderboardSets; // @dynamic supportsLeaderboardSets;

@property(readonly, nonatomic) _Bool supportsLeaderboards; // @dynamic supportsLeaderboards;



@end


