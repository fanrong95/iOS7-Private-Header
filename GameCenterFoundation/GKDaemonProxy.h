/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "GKClientProtocol.h"

#import "NSXPCConnectionDelegate.h"



@class GKThreadsafeDictionary, NSDictionary, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSXPCConnection;



@interface GKDaemonProxy : NSObject <NSXPCConnectionDelegate, GKClientProtocol>

{

    NSXPCConnection *_connection;

    NSObject<OS_dispatch_semaphore> *_serviceSemaphore;

    NSDictionary *_serviceLookup;

    NSDictionary *_interfaceLookup;

    NSObject<OS_dispatch_queue> *_invocationQueue;

    NSObject<OS_dispatch_semaphore> *_concurrentRequestSemaphore;

    GKThreadsafeDictionary *_pendingRequests;

    id <GKDaemonProxyDataUpdateDelegate> _dataUpdateDelegate;

    id <GKDaemonProxyNetworkActivityIndicatorDelegate> _networkActivityIndicatorDelegate;

}



+ (id)accountServicePrivateProxy;

+ (id)accountServiceProxy;

+ (id)bulletinServicePrivateProxy;

+ (id)bulletinServiceProxy;

+ (id)challengeServicePrivateProxy;

+ (id)challengeServiceProxy;

+ (id)daemonProxy;

+ (id)friendServicePrivateProxy;

+ (id)friendServiceProxy;

+ (id)gameServicePrivateProxy;

+ (id)gameServiceProxy;

+ (id)gameStatServicePrivateProxy;

+ (id)gameStatServiceProxy;

+ (id)linkedAccountsServicePrivateProxy;

+ (id)linkedAccountsServiceProxy;

+ (id)multiplayerServicePrivateProxy;

+ (id)multiplayerServiceProxy;

+ (id)profileServicePrivateProxy;

+ (id)profileServiceProxy;

+ (id)turnBasedServicePrivateProxy;

+ (id)turnBasedServiceProxy;

+ (id)utilityServicePrivateProxy;

+ (id)utilityServiceProxy;

- (void)_replyToDuplicatesForRequest:(id)arg1 withInvocation:(id)arg2 queue:(id)arg3;

- (id)accountName;

- (oneway void)achievementSelected:(id)arg1;

- (void)addInterface:(id)arg1 toLookup:(id)arg2;

- (void)addService:(id)arg1 forProtocol:(id)arg2 toLookup:(id)arg3;

- (id)authenticatedPlayerID;

- (oneway void)beginNetworkActivity;

- (void)buildInterfaceLookup;

- (void)buildServiceLookup;

- (void)buildServiceLookupIfNeccessary;

- (oneway void)challengeCompleted:(id)arg1;

- (oneway void)challengeReceived:(id)arg1;

- (oneway void)completedChallengeSelected:(id)arg1;

@property(nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;

- (void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(_Bool)arg3;

@property(nonatomic) id <GKDaemonProxyDataUpdateDelegate> dataUpdateDelegate; // @synthesize dataUpdateDelegate=_dataUpdateDelegate;

- (void)dealloc;

- (void)dispatchCompletedChallenge:(id)arg1;

- (oneway void)endNetworkActivity;

- (void)forwardInvocation:(id)arg1;

- (oneway void)getAccountNameWithHandler:(id)arg1;

- (oneway void)getAuthenticatedPlayerIDWithHandler:(id)arg1;

- (_Bool)hasAuthenticatedAccount;

- (id)init;

- (id)methodSignatureForProtocol:(id)arg1 selector:(SEL)arg2;

- (id)methodSignatureForSelector:(SEL)arg1;

@property(nonatomic) id <GKDaemonProxyNetworkActivityIndicatorDelegate> networkActivityIndicatorDelegate; // @synthesize networkActivityIndicatorDelegate=_networkActivityIndicatorDelegate;

- (oneway void)receivedChallengeSelected:(id)arg1;

- (oneway void)refreshContentsForDataType:(unsigned int)arg1 userInfo:(id)arg2;

- (id)replyQueueForRequestSelector:(SEL)arg1;

- (oneway void)resetNetworkActivity;

- (void)resetServiceLookup;

- (oneway void)respondedToNearbyInvite:(id)arg1;

- (oneway void)scoreSelected:(id)arg1;

- (oneway void)setBadgeCount:(unsigned long long)arg1 forType:(unsigned long long)arg2;

- (oneway void)setCurrentGame:(id)arg1 sandboxed:(_Bool)arg2 reply:(id)arg3;

- (oneway void)setLocalPlayer:(id)arg1 authenticated:(_Bool)arg2 reply:(id)arg3;

- (oneway void)setLogBits:(unsigned int)arg1;

- (oneway void)setPreferencesValues:(id)arg1;



@end


