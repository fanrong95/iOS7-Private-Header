/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "GKInternalRepresentation.h"


@class GKStoreItemInternal, NSDictionary, NSNumber, NSString;



@interface GKGameInternal : GKInternalRepresentation

{

    NSString *_bundleIdentifier;

    NSString *_bundleVersion;

    NSNumber *_adamID;

    NSNumber *_externalVersion;

    NSString *_name;

    NSDictionary *_icons;

    NSString *_defaultLeaderboardIdentifier;

    GKStoreItemInternal *_storeItem;

    union {

        struct {

            unsigned int _platform:8;

            unsigned int _prerendered:1;

            unsigned int _supportsLeaderboards:1;

            unsigned int _supportsLeaderboardSets:1;

            unsigned int _hasAggregateLeaderboard:1;

            unsigned int _supportsAchievements:1;

            unsigned int _supportsMultiplayer:1;

            unsigned int _valid:1;

            unsigned int _unused:1;

            unsigned int _supportsTurnBasedMultiplayer:1;

            unsigned int _reserved:13;

        } ;

        unsigned int _value;

    } _flags;

    unsigned short _numberOfLeaderboards;

    unsigned short _numberOfLeaderboardSets;

    unsigned short _numberOfAchievements;

    unsigned short _maxAchievementPoints;

}



+ (id)secureCodedPropertyKeys;

@property(retain, nonatomic) NSNumber *adamID; // @synthesize adamID=_adamID;

@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;

@property(retain, nonatomic) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;

- (void)dealloc;

- (id)defaultCategory;

@property(retain, nonatomic) NSString *defaultLeaderboardIdentifier; // @synthesize defaultLeaderboardIdentifier=_defaultLeaderboardIdentifier;

- (id)description;

@property(retain, nonatomic) NSNumber *externalVersion; // @synthesize externalVersion=_externalVersion;

@property(nonatomic) unsigned int flags; // @dynamic flags;

@property(nonatomic) _Bool hasAggregateLeaderboard;

- (unsigned long long)hash;

@property(retain, nonatomic) NSDictionary *icons; // @synthesize icons=_icons;

- (_Bool)isEqual:(id)arg1;

@property(nonatomic, getter=isPrerendered) _Bool prerendered; // @dynamic prerendered;

@property(nonatomic, getter=isValid) _Bool valid; // @dynamic valid;

@property(nonatomic) unsigned short maxAchievementPoints; // @synthesize maxAchievementPoints=_maxAchievementPoints;

@property(retain, nonatomic) NSString *name; // @synthesize name=_name;

@property(nonatomic) unsigned short numberOfAchievements; // @synthesize numberOfAchievements=_numberOfAchievements;

- (unsigned short)numberOfCategories;

@property(nonatomic) unsigned short numberOfLeaderboardSets; // @synthesize numberOfLeaderboardSets=_numberOfLeaderboardSets;

@property(nonatomic) unsigned short numberOfLeaderboards; // @synthesize numberOfLeaderboards=_numberOfLeaderboards;

@property(nonatomic) unsigned char platform; // @dynamic platform;

- (id)serverRepresentation;

@property(retain, nonatomic) GKStoreItemInternal *storeItem; // @synthesize storeItem=_storeItem;

@property(nonatomic) _Bool supportsAchievements; // @dynamic supportsAchievements;

@property(nonatomic) _Bool supportsLeaderboardSets; // @dynamic supportsLeaderboardSets;

@property(nonatomic) _Bool supportsLeaderboards; // @dynamic supportsLeaderboards;

@property(nonatomic) _Bool supportsMultiplayer; // @dynamic supportsMultiplayer;

@property(nonatomic) _Bool supportsTurnBasedMultiplayer; // @dynamic supportsTurnBasedMultiplayer;



@end


