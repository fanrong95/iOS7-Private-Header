/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "NSCoding.h"

#import "NSSecureCoding.h"



@class GKGameInternal, GKStoreItemInternal, NSDictionary, NSNumber, NSString;



@interface GKGame : NSObject <NSCoding, NSSecureCoding>

{

    _Bool _sandboxed;

    GKGameInternal *_internal;

}



+ (id)currentGame;

+ (id)instanceMethodSignatureForSelector:(SEL)arg1;

+ (_Bool)instancesRespondToSelector:(SEL)arg1;

+ (_Bool)isGameCenter;

+ (_Bool)isPreferences;

+ (void)loadGamesWithBundleIDs:(id)arg1 withCompletionHandler:(id)arg2;

+ (void)loadTopGamesWithCompletionHandler:(id)arg1;

+ (void)markGameRecommendationsDisplayed:(id)arg1 complete:(id)arg2;

+ (void)markGameRecommendationsViewed:(id)arg1 complete:(id)arg2;

+ (_Bool)supportsSecureCoding;

+ (void)updateGames:(id)arg1 withCompletionHandler:(id)arg2;

@property(readonly, nonatomic) NSString *cacheKey;

- (id)copyWithZone:(struct _NSZone *)arg1;

- (void)dealloc;

- (id)description;

- (void)encodeWithCoder:(id)arg1;

- (id)forwardingTargetForSelector:(SEL)arg1;

@property(readonly, nonatomic) NSDictionary *gameDescriptor;

@property(readonly, nonatomic) struct GKGameInfo gameInfo;

- (void)getFriendPlayersForAchievement:(id)arg1 handler:(id)arg2;

- (void)getFriendPlayersForLeaderboard:(id)arg1 handler:(id)arg2;

- (void)getFriendPlayersIncludingCompatibleGames:(_Bool)arg1 handler:(id)arg2;

- (unsigned long long)hash;

- (id)init;

- (id)initWithCoder:(id)arg1;

- (id)initWithInternalRepresentation:(id)arg1;

@property(retain) GKGameInternal *internal; // @synthesize internal=_internal;

@property(readonly, nonatomic, getter=isDownloading) _Bool downloading;

- (_Bool)isEqual:(id)arg1;

- (_Bool)isGameCenter;

@property(readonly, nonatomic) _Bool isGameRecommendation; // @dynamic isGameRecommendation;

@property(readonly, nonatomic, getter=isInstalled) _Bool installed;

@property(nonatomic, getter=isSandboxed) _Bool sandboxed; // @synthesize sandboxed=_sandboxed;

- (_Bool)isStoreItemUnexpired;

- (void)loadGameRatingWithCompletionHandler:(id)arg1;

- (void)loadTellAFriendMessageWithCompletionHandler:(id)arg1;

- (id)methodSignatureForSelector:(SEL)arg1;

- (_Bool)respondsToSelector:(SEL)arg1;

- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;

- (void)submitRating:(float)arg1 withCompletionHandler:(id)arg2;

- (id)valueForUndefinedKey:(id)arg1;



// Remaining properties

@property(readonly, nonatomic) NSNumber *adamID; // @dynamic adamID;

@property(readonly, nonatomic) NSString *bundleIdentifier; // @dynamic bundleIdentifier;

@property(readonly, nonatomic) NSString *bundleVersion; // @dynamic bundleVersion;

@property(readonly, nonatomic) NSString *defaultCategory; // @dynamic defaultCategory;

@property(retain, nonatomic) NSString *engineID; // @dynamic engineID;

@property(readonly, nonatomic) NSNumber *externalVersion; // @dynamic externalVersion;

@property(readonly, nonatomic) NSString *name; // @dynamic name;

@property(nonatomic) unsigned char platform; // @dynamic platform;

@property(nonatomic, getter=isPrerendered) _Bool prerendered; // @dynamic prerendered;

@property(retain, nonatomic) NSString *reason; // @dynamic reason;

@property(retain, nonatomic) GKStoreItemInternal *storeItem; // @dynamic storeItem;

@property(readonly, nonatomic) _Bool supportsMultiplayer; // @dynamic supportsMultiplayer;

@property(readonly, nonatomic) _Bool supportsTurnBasedMultiplayer; // @dynamic supportsTurnBasedMultiplayer;



@end


