/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "ASChangedCollectionLeaf.h"


#import "DADataElement.h"

#import "NSCoding.h"



@class ASEventUID, ASRecurrence, ASTimeZone, NSArray, NSDate, NSNumber, NSString;



@interface ASEvent : ASChangedCollectionLeaf <NSCoding, DADataElement>

{

    void *_calRecord;

    ASTimeZone *_timeZone;

    NSNumber *_allDayEvent;

    NSString *_body;

    NSNumber *_bodyTruncated;

    NSNumber *_busyStatus;

    NSArray *_categories;

    NSDate *_dTStamp;

    NSDate *_endTime;

    NSString *_location;

    NSNumber *_meetingStatus;

    NSString *_organizerEmail;

    NSString *_organizerName;

    NSNumber *_reminderMinsBefore;

    NSNumber *_sensitivity;

    NSString *_subject;

    NSDate *_startTime;

    NSDate *_tombstoneEndTime;

    ASEventUID *_eventUID;

    NSArray *_attendees;

    NSArray *_attendeesPendingDeletion;

    ASRecurrence *_recurrence;

    NSArray *_exceptions;

    NSNumber *_responseRequested;

    int _meetingResponseToEmailAbout;

    _Bool _calculateNextStatusAsIfMeetingRequest;

    _Bool _shouldUpdateStatus;

    _Bool _cachedOrganizerIsSelf;

    _Bool _haveCheckedOrganizerEmail;

    _Bool _isAttendeeUpdateOnly;

    _Bool _isDTStampUpdateOnly;

    NSNumber *_responseType;

}



+ (void)_setFakeDTStampDateForUnitTests:(id)arg1;

+ (_Bool)acceptsTopLevelLeaves;

+ (id)asParseRules;

+ (id)eventWithCalEvent:(void *)arg1 serverID:(id)arg2 account:(id)arg3;

+ (_Bool)frontingBasicTypes;

+ (_Bool)notifyOfUnknownTokens;

+ (_Bool)parsingLeafNode;

+ (_Bool)parsingWithSubItems;

+ (void)setSystemTimeZoneNameForUnitTests:(id)arg1;

- (int)CalCalendarItemStatus;

- (_Bool)_bailIfNotNewestDataForAccount:(id)arg1;

- (void)_determineSelfnessWithLocalEvent:(void *)arg1 forAccount:(id)arg2;

- (void)_loadAttributesFromCalEvent:(void *)arg1 forAccount:(id)arg2;

- (int)_meetingResponseShouldFilterForEmail:(_Bool)arg1;

- (int)_nextAttendeeStatusWithOldStatus:(int)arg1 account:(id)arg2;

- (int)_nextAttendeeStatusWithOldStatus:(int)arg1 meetingClassType:(int)arg2 account:(id)arg3;

- (int)_nextEventStatusWithOldStatus:(int)arg1 account:(id)arg2;

- (int)_nextEventStatusWithOldStatus:(int)arg1 meetingClassType:(int)arg2 account:(id)arg3;

- (void)_sanitizeLocalExceptionsForAccount:(id)arg1;

- (_Bool)_selfIsMoreCorrectThanOtherEvent:(id)arg1 account:(id)arg2;

- (id)_transformedEndDateForActiveSync:(id)arg1 isFloating:(_Bool)arg2;

- (id)_transformedEndDateForCalFramework:(id)arg1 startDate:(id)arg2;

- (id)_transformedStartDateForActiveSync:(id)arg1 isFloating:(_Bool)arg2;

- (id)_transformedStartDateForCalFramework:(id)arg1;

@property(retain) NSNumber *allDayEvent; // @synthesize allDayEvent=_allDayEvent;

- (void)appendActiveSyncDataForTask:(id)arg1 toWBXMLData:(id)arg2;

@property(retain) NSArray *attendees; // @synthesize attendees=_attendees;

@property(retain) NSArray *attendeesPendingDeletion; // @synthesize attendeesPendingDeletion=_attendeesPendingDeletion;

@property(retain, nonatomic) NSString *body; // @synthesize body=_body;

@property(retain) NSNumber *bodyTruncated; // @synthesize bodyTruncated=_bodyTruncated;

@property(retain) NSNumber *busyStatus; // @synthesize busyStatus=_busyStatus;

- (_Bool)cachedOrganizerIsSelfWithAccount:(id)arg1;

- (int)calAttendeePendingStatus;

- (int)calAttendeeStatus;

- (void *)calEvent;

@property(retain) NSArray *categories; // @synthesize categories=_categories;

- (void *)copySelfAttendeeGeneratedIfNecessaryWithLocalEvent:(void *)arg1 forAccount:(id)arg2;

@property(retain) NSDate *dTStamp; // @synthesize dTStamp=_dTStamp;

- (int)dataclass;

- (void)dealloc;

- (_Bool)deleteFromCalendar;

- (_Bool)deleteFromContainer:(void *)arg1;

- (id)description;

- (void)encodeWithCoder:(id)arg1;

- (id)endDateForCalFramework;

@property(retain) NSDate *endTime; // @synthesize endTime=_endTime;

- (id)eventByMergingInEvent:(id)arg1 account:(id)arg2;

- (id)eventByMergingInLosingEvent:(id)arg1 account:(id)arg2;

@property(retain) ASEventUID *eventUID; // @synthesize eventUID=_eventUID;

- (id)exceptionDate;

@property(retain, nonatomic) NSArray *exceptions; // @synthesize exceptions=_exceptions;

- (_Bool)fillOutMissingExternalIds;

- (id)fullOrganizerString;

- (_Bool)hasOccurrenceInTheFuture;

- (void)informExceptionsThatParentIsReadyForAccount:(id)arg1;

- (id)init;

- (id)initWithCalEvent:(void *)arg1 serverID:(id)arg2 account:(id)arg3;

- (id)initWithCoder:(id)arg1;

- (_Bool)isEqualToEvent:(id)arg1;

- (_Bool)isTombstoneEndTimeInFuture;

- (_Bool)loadCalRecordForAccount:(id)arg1;

- (void)loadClientIDs;

- (_Bool)loadLocalItemWithAccount:(id)arg1;

@property(retain) NSString *location; // @synthesize location=_location;

- (int)meetingResponseForAccount:(id)arg1;

- (int)meetingResponseForEmail;

@property(retain) NSNumber *meetingStatus; // @synthesize meetingStatus=_meetingStatus;

@property(retain) NSString *organizerEmail; // @synthesize organizerEmail=_organizerEmail;

@property(retain) NSString *organizerName; // @synthesize organizerName=_organizerName;

- (void)parseASParseContext:(id)arg1 root:(id)arg2 parent:(id)arg3 callbackDict:(id)arg4 streamCallbackDict:(id)arg5 account:(id)arg6;

- (void)postProcessApplicationData;

- (_Bool)purgeAttendeesPendingDeletion;

@property(retain, nonatomic) ASRecurrence *recurrence; // @synthesize recurrence=_recurrence;

@property(retain) NSNumber *reminderMinsBefore; // @synthesize reminderMinsBefore=_reminderMinsBefore;

@property(retain) NSNumber *responseRequested; // @synthesize responseRequested=_responseRequested;

@property(retain) NSNumber *responseType; // @synthesize responseType=_responseType;

- (_Bool)saveDetachedEventsWithExistingRecord:(void *)arg1 intoCalendar:(void *)arg2 shouldMergeProperties:(_Bool)arg3 outMergeDidChooseLocalProperties:(_Bool *)arg4 account:(id)arg5;

- (_Bool)saveServerIDToCalendar;

- (_Bool)saveServerIDToExistingItem;

- (_Bool)saveToCalendarWithExistingRecord:(void *)arg1 intoCalendar:(void *)arg2 shouldMergeProperties:(_Bool)arg3 outMergeDidChooseLocalProperties:(_Bool *)arg4 account:(id)arg5;

- (_Bool)saveWithLocalObject:(void *)arg1 toContainer:(void *)arg2 shouldMergeProperties:(_Bool)arg3 outMergeDidChooseLocalProperties:(_Bool *)arg4 account:(id)arg5;

@property(retain) NSNumber *sensitivity; // @synthesize sensitivity=_sensitivity;

- (void)setCalEvent:(void *)arg1;

- (void)setCalculateNextStatusAsIfMeetingRequest:(_Bool)arg1;

- (void)setExceptionDate:(id)arg1;

- (void)setLocalItem:(void *)arg1;

- (void)setMeetingResponseForEmail:(int)arg1;

- (void)setShouldUpdateStatus:(_Bool)arg1;

@property(retain) NSDate *startTime; // @synthesize startTime=_startTime;

@property(retain) NSString *subject; // @synthesize subject=_subject;

@property(retain) ASTimeZone *timeZone; // @synthesize timeZone=_timeZone;

@property(retain) NSDate *tombstoneEndTime; // @synthesize tombstoneEndTime=_tombstoneEndTime;

- (_Bool)shouldUseInMemoryAttendeesForAccount:(id)arg1 numExistingAttendees:(int)arg2;

- (id)startDateForCalFramework;

- (id)timeZoneNameForCalFramework;

- (id)uidForCalFramework;

- (id)uidGeneratedIfNecessaryWithLocalEvent:(void *)arg1;

- (_Bool)verifyExternalIds;



@end


