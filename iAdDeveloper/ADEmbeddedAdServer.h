/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "HTSHTTPServerDelegate.h"



@class HTSHTTPServer, NSArray, NSDictionary, NSMutableDictionary, NSString;



@interface ADEmbeddedAdServer : NSObject <HTSHTTPServerDelegate>

{

    HTSHTTPServer *_server;

    NSMutableDictionary *_authTokens;

    struct __FSEventStream *_stream;

    _Bool _defaultsToNoQualifiedAds;

    _Bool _alwaysRegenerateWebArchives;

    id <ADEmbeddedAdServerDelegate> _delegate;

    NSString *_publicURLRoot;

    NSDictionary *_defaultAdData;

    NSString *_adPath;

    NSArray *_adManifests;

}



+ (_Bool)adBundleAtURL:(id)arg1 matchesRequest:(id)arg2;

+ (id)creativesForAdBundleAtURL:(id)arg1 matchingRequest:(id)arg2;

+ (id)manifestForAdAtURL:(id)arg1;

- (id)_adDataForPath:(id)arg1 creative:(id)arg2 error:(id *)arg3;

- (id)_handleBatchRequest:(id)arg1 message:(id)arg2;

- (id)_handleGenericPostRequest:(id)arg1;

- (id)_handleHeartbeatTokenRequest:(id)arg1 message:(id)arg2;

- (id)_handleListeningPresenceEventsRequest:(id)arg1 message:(id)arg2;

- (id)_handleLogAdContentErrorRequest:(id)arg1 message:(id)arg2;

- (id)_handleLogAdEventRequest:(id)arg1 message:(id)arg2;

- (id)_handleLogAggregateMetricsRequest:(id)arg1 message:(id)arg2;

- (id)_handleLogImpressionRequest:(id)arg1 message:(id)arg2;

- (id)_handleLogSysEventRequest:(id)arg1 message:(id)arg2;

- (id)_handleLogTileImpressionEventRequest:(id)arg1 message:(id)arg2;

- (id)_handleManifestRequest:(id)arg1 message:(id)arg2;

- (id)_handleMescalSignSAPSetupCertificateRequest:(id)arg1 message:(id)arg2;

- (id)_handleMescalSignSAPSetupRequest:(id)arg1 message:(id)arg2;

- (id)_handleOptOutRequest:(id)arg1 message:(id)arg2;

- (id)_handlePostRequest:(id)arg1;

- (id)_handleRewardRequest:(id)arg1 message:(id)arg2;

- (id)_handleRewardsCodeResultRequest:(id)arg1 message:(id)arg2;

- (id)_handleSegmentUpdateRequest:(id)arg1 message:(id)arg2;

- (id)_handleServerErrorRequest:(id)arg1 message:(id)arg2;

- (id)_mimeTypeForExtension:(id)arg1;

- (id)_webArchiveFilenameForDirectory:(id)arg1 withBaseURL:(id)arg2;

- (id)_webResourceForPath:(id)arg1 url:(id)arg2;

- (id)_webResourcesInDirectory:(id)arg1 baseURL:(id)arg2;

- (id)adDataForAdBundleAtPath:(id)arg1 creative:(id)arg2 allowWebArchive:(_Bool)arg3;

@property(retain, nonatomic) NSArray *adManifests; // @synthesize adManifests=_adManifests;

@property(copy, nonatomic) NSString *adPath; // @synthesize adPath=_adPath;

@property(nonatomic) _Bool alwaysRegenerateWebArchives; // @synthesize alwaysRegenerateWebArchives=_alwaysRegenerateWebArchives;

@property(nonatomic) double bandwidthStddev;

@property(nonatomic) int cacheMaxAge;

- (void)dealloc;

@property(retain, nonatomic) NSDictionary *defaultAdData; // @synthesize defaultAdData=_defaultAdData;

- (id)defaultDisplayPolicy;

@property(nonatomic) _Bool defaultsToNoQualifiedAds; // @synthesize defaultsToNoQualifiedAds=_defaultsToNoQualifiedAds;

@property(nonatomic) id <ADEmbeddedAdServerDelegate> delegate; // @synthesize delegate=_delegate;

@property(nonatomic) _Bool digestAuthenticationEnabled;

- (void)httpServer:(id)arg1 closedConnection:(id)arg2;

- (void)httpServer:(id)arg1 closedConnection:(id)arg2 withError:(id)arg3;

- (void)httpServer:(id)arg1 connection:(id)arg2 blockedSandboxViolation:(id)arg3;

- (void)httpServer:(id)arg1 connection:(id)arg2 droppedResponseToRequestBeforeClosing:(id)arg3;

- (void)httpServer:(id)arg1 connection:(id)arg2 enqueuedResponseToRequest:(id)arg3 statusCode:(int)arg4 length:(unsigned long long)arg5;

- (void)httpServer:(id)arg1 connection:(id)arg2 wroteBytes:(unsigned long long)arg3 andCompletedResponseToRequest:(id)arg4;

- (void)httpServer:(id)arg1 connection:(id)arg2 wroteBytes:(unsigned long long)arg3 forResponseToRequest:(id)arg4 remaining:(unsigned long long)arg5;

- (void)httpServer:(id)arg1 dataForRequest:(id)arg2 resolvedPath:(id)arg3 handler:(id)arg4;

- (void)httpServer:(id)arg1 logMessage:(id)arg2;

- (id)httpServer:(id)arg1 proposedResponse:(id)arg2;

- (void)httpServer:(id)arg1 receivedConnection:(id)arg2;

- (id)httpServer:(id)arg1 rewritePath:(id)arg2;

- (_Bool)httpServer:(id)arg1 shouldAllowRequest:(id)arg2 withAuthorization:(id)arg3;

- (id)httpServer:(id)arg1 unhandledRequest:(id)arg2;

- (void)httpServerListenSocketFailed:(id)arg1;

- (id)init;

- (id)initWithPort:(unsigned short)arg1 adPath:(id)arg2;

@property(nonatomic) double kbps;

@property(nonatomic) double latency;

@property(nonatomic) double latencyStddev;

@property(nonatomic) _Bool pipeliningEnabled;

@property(readonly, nonatomic) unsigned short port;

@property(copy, nonatomic) NSString *publicURLRoot; // @synthesize publicURLRoot=_publicURLRoot;

- (void)resetNetworkSetup;

@property(readonly, nonatomic) unsigned long long totalBytesWritten;

@property(readonly, nonatomic) NSString *urlString;

- (id)webArchiveForDirectory:(id)arg1 withBaseURL:(id)arg2;



@end


