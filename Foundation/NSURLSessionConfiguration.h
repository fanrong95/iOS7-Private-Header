/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "NSCopying.h"



@class NSArray, NSDictionary, NSHTTPCookieStorage, NSString, NSURLCache, NSURLCredentialStorage;



@interface NSURLSessionConfiguration : NSObject <NSCopying>

{

    _Bool _allowsCellularAccess;

    _Bool _discretionary;

    _Bool _sessionSendsLaunchEvents;

    _Bool _HTTPShouldUsePipelining;

    _Bool _HTTPShouldSetCookies;

    int _TLSMinimumSupportedProtocol;

    int _TLSMaximumSupportedProtocol;

    NSString *_identifier;

    unsigned long long _requestCachePolicy;

    double _timeoutIntervalForRequest;

    double _timeoutIntervalForResource;

    unsigned long long _networkServiceType;

    NSDictionary *_connectionProxyDictionary;

    unsigned long long _HTTPCookieAcceptPolicy;

    NSDictionary *_HTTPAdditionalHeaders;

    long long _HTTPMaximumConnectionsPerHost;

    NSHTTPCookieStorage *_HTTPCookieStorage;

    NSURLCredentialStorage *_URLCredentialStorage;

    NSURLCache *_URLCache;

    NSArray *_protocolClasses;

}



+ (void)initialize;

@property(copy) NSDictionary *HTTPAdditionalHeaders; // @synthesize HTTPAdditionalHeaders=_HTTPAdditionalHeaders;

@property unsigned long long HTTPCookieAcceptPolicy; // @synthesize HTTPCookieAcceptPolicy=_HTTPCookieAcceptPolicy;

@property(retain) NSHTTPCookieStorage *HTTPCookieStorage; // @synthesize HTTPCookieStorage=_HTTPCookieStorage;

@property long long HTTPMaximumConnectionsPerHost; // @synthesize HTTPMaximumConnectionsPerHost=_HTTPMaximumConnectionsPerHost;

@property _Bool HTTPShouldSetCookies; // @synthesize HTTPShouldSetCookies=_HTTPShouldSetCookies;

@property _Bool HTTPShouldUsePipelining; // @synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining;

@property int TLSMaximumSupportedProtocol; // @synthesize TLSMaximumSupportedProtocol=_TLSMaximumSupportedProtocol;

@property int TLSMinimumSupportedProtocol; // @synthesize TLSMinimumSupportedProtocol=_TLSMinimumSupportedProtocol;

@property(retain) NSURLCache *URLCache; // @synthesize URLCache=_URLCache;

@property(retain) NSURLCredentialStorage *URLCredentialStorage; // @synthesize URLCredentialStorage=_URLCredentialStorage;

@property _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;

@property(copy) NSDictionary *connectionProxyDictionary; // @synthesize connectionProxyDictionary=_connectionProxyDictionary;

@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;

@property(getter=isDiscretionary) _Bool discretionary; // @synthesize discretionary=_discretionary;

@property unsigned long long networkServiceType; // @synthesize networkServiceType=_networkServiceType;

@property(copy) NSArray *protocolClasses; // @synthesize protocolClasses=_protocolClasses;

@property unsigned long long requestCachePolicy; // @synthesize requestCachePolicy=_requestCachePolicy;

@property _Bool sessionSendsLaunchEvents; // @synthesize sessionSendsLaunchEvents=_sessionSendsLaunchEvents;

@property double timeoutIntervalForRequest; // @synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest;

@property double timeoutIntervalForResource; // @synthesize timeoutIntervalForResource=_timeoutIntervalForResource;



@end


