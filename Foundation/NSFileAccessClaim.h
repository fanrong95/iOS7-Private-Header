/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSError, NSMutableArray, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSObject<OS_dispatch_semaphore>, NSObject<OS_xpc_object>, NSString;



__attribute__((visibility("hidden")))

@interface NSFileAccessClaim : NSObject

{

    NSObject<OS_xpc_object> *_client;

    NSString *_claimID;

    NSString *_purposeIDOrNil;

    _Bool _cameFromSuperarbiter;

    unsigned long long _blockageCount;

    _Bool _didWait;

    _Bool _isRevoked;

    unsigned long long _claimerBlockageCount;

    NSError *_claimerError;

    NSMutableOrderedSet *_pendingClaims;

    NSMutableSet *_blockingClaims;

    NSMutableSet *_blockingReactorIDs;

    id _providerCancellationProcedure;

    NSMutableDictionary *_reacquisitionProceduresByPresenterID;

    NSMutableArray *_revocationProcedures;

    id _claimerOrNil;

    NSObject<OS_dispatch_semaphore> *_claimerWaiterOrNull;

    id _sandboxToken;

}



+ (_Bool)canReadingItemAtLocation:(id)arg1 options:(unsigned long long)arg2 safelyOverlapWritingItemAtLocation:(id)arg3 options:(unsigned long long)arg4;

+ (_Bool)canWritingItemAtLocation:(id)arg1 options:(unsigned long long)arg2 safelyOverlapWritingItemAtLocation:(id)arg3 options:(unsigned long long)arg4;

- (void)addPendingClaim:(id)arg1;

- (void)block;

- (void)blockClaimer;

- (_Bool)cameFromSuperarbiter;

- (void)cancelled;

- (id)claimID;

- (id)claimerError;

- (_Bool)claimerInvokingIsBlockedByReactorWithID:(id)arg1;

- (id)client;

- (void)dealloc;

- (id)description;

- (id)descriptionWithIndenting:(id)arg1;

- (void)devalueOldClaim:(id)arg1;

- (void)devalueSelf;

- (_Bool)didWait;

- (void)evaluateNewClaim:(id)arg1;

- (_Bool)evaluateSelfWithRootNode:(id)arg1 checkSubarbitrability:(_Bool)arg2;

- (void)finalize;

- (void)forwardUsingMessageSender:(id)arg1 crashHandler:(void)arg2;

- (void)granted;

- (void)ifSymbolicLinkAtURL:(id)arg1 withResolutionCount:(long long *)arg2 thenReevaluateSelf:(id)arg3 elseInvokeClaimer:(void)arg4;

- (id)initWithClient:(id)arg1 claimID:(id)arg2 purposeID:(id)arg3;

- (id)initWithClient:(id)arg1 messageParameters:(id)arg2 replySender:(id)arg3;

- (void)invokeClaimer;

- (_Bool)isBlockedByClaimWithPurposeID:(id)arg1;

- (_Bool)isBlockedByReadingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;

- (_Bool)isBlockedByWritingItemAtLocation:(id)arg1 options:(unsigned long long)arg2;

- (_Bool)isGranted;

- (_Bool)isRevoked;

- (void)itemAtLocation:(id)arg1 wasReplacedByItemAtLocation:(id)arg2;

- (void)makePresentersOfItemAtLocation:(id)arg1 orContainedItem:(_Bool)arg2 relinquishUsingProcedureGetter:(id)arg3;

- (void)makeProviderOfItemAtLocation:(id)arg1 provideThenContinue:(id)arg2;

- (id)newClaimerWaiter;

- (id)pendingClaims;

- (id)purposeID;

- (id)purposeIDOfClaimOnItemAtLocation:(id)arg1 forMessagingPresenter:(id)arg2;

- (void)removePendingClaims:(id)arg1;

- (void)revoked;

- (void)setCameFromSuperarbiter;

- (void)setClaimerError:(id)arg1;

- (void)unblock;

- (void)unblockClaimer;

- (void)whenRevokedPerformProcedure:(id)arg1;



@end


