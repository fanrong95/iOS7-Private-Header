/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "NSMapTable.h"


__attribute__((visibility("hidden")))

@interface NSConcreteMapTable : NSMapTable

{

    struct NSSlice keys;

    struct NSSlice values;

    unsigned long long count;

    unsigned long long capacity;

    unsigned long long keyOptions;

    unsigned long long valueOptions;

    unsigned long long mutations;

    int growLock;

    _Bool shouldRehash;

}



- (void)_initBlock;

- (void)_setBackingStore;

- (id)allKeys;

- (id)allValues;

- (void)assign:(unsigned long long)arg1 key:(const void *)arg2 value:(const void *)arg3 isNew:(_Bool)arg4;

- (void)checkCount:(const char *)arg1;

- (Class)classForCoder;

- (_Bool)containsKeys:(const void **)arg1 values:(const void **)arg2 count:(unsigned long long)arg3;

- (id)copy;

- (unsigned long long)count;

- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;

- (void)dealloc;

- (id)description;

- (id)dump;

- (void)encodeWithCoder:(id)arg1;

- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;

- (void)finalize;

- (unsigned long long)getKeys:(const void **)arg1 values:(const void **)arg2;

- (void)grow;

- (unsigned long long)hash;

- (id)init;

- (id)initWithCoder:(id)arg1;

- (id)initWithKeyOptions:(unsigned long long)arg1 valueOptions:(unsigned long long)arg2 capacity:(unsigned long long)arg3;

- (id)initWithKeyPointerFunctions:(id)arg1 valuePointerFunctions:(id)arg2 capacity:(unsigned long long)arg3;

- (_Bool)isEqual:(id)arg1;

- (id)keyEnumerator;

- (id)keyPointerFunctions;

- (_Bool)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;

- (id)objectEnumerator;

- (id)objectForKey:(id)arg1;

- (void)raiseCountUnderflowException;

- (unsigned long long)realCount;

- (void)rehash;

- (unsigned long long)rehashAround:(unsigned long long)arg1;

- (void)removeAllItems;

- (void)removeObjectForKey:(id)arg1;

- (void)replaceItem:(const void *)arg1 forExistingKey:(const void *)arg2;

- (void)setItem:(const void *)arg1 forAbsentKey:(const void *)arg2;

- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;

- (void)setObject:(id)arg1 forKey:(id)arg2;

- (id)valuePointerFunctions;

- (void)zeroPairedEntries;



@end


