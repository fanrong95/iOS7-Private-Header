/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





#import "CBXpcConnectionDelegate.h"



@class CBXpcConnection, NSMutableDictionary;



@interface CBCentralManager : NSObject <CBXpcConnectionDelegate>

{

    id <CBCentralManagerDelegate> _delegate;

    long long _state;

    NSMutableDictionary *_peripherals;

    _Bool _isScanning;

    CBXpcConnection *_connection;

}



- (void)cancelPeripheralConnection:(id)arg1;

- (void)cancelPeripheralConnection:(id)arg1 force:(_Bool)arg2;

- (void)connectPeripheral:(id)arg1 options:(id)arg2;

- (id)dataArrayToUUIDArray:(id)arg1;

- (void)dealloc;

@property(nonatomic) __weak id <CBCentralManagerDelegate> delegate; // @synthesize delegate=_delegate;

- (void)handleConnectedPeripheralsRetrieved:(id)arg1;

- (void)handlePeripheralConnectionCompleted:(id)arg1;

- (void)handlePeripheralConnectionStateUpdated:(id)arg1;

- (void)handlePeripheralDisconnectionCompleted:(id)arg1;

- (void)handlePeripheralDiscovered:(id)arg1;

- (void)handlePeripheralMsg:(int)arg1 args:(id)arg2;

- (void)handlePeripheralsRetrieved:(id)arg1;

- (void)handleRestoringState:(id)arg1;

- (void)handleStateUpdated:(id)arg1;

- (void)handleZoneLost:(id)arg1;

- (id)initWithDelegate:(id)arg1 queue:(id)arg2;

- (id)initWithDelegate:(id)arg1 queue:(id)arg2 options:(id)arg3;

- (void)orphanPeripherals;

- (id)peripheralForUUID:(id)arg1 args:(id)arg2;

- (void)peripheralWillBeReleased:(id)arg1;

- (void)retrieveConnectedPeripherals;

- (id)retrieveConnectedPeripheralsWithServices:(id)arg1;

- (id)retrieveConnectedPeripheralsWithServices:(id)arg1 allowAll:(_Bool)arg2;

- (id)retrievePairedPeripherals;

- (void)retrievePeripherals:(id)arg1;

- (id)retrievePeripheralsWithIdentifiers:(id)arg1;

- (void)scanForPeripheralsWithServices:(id)arg1 options:(id)arg2;

- (void)sendMsg:(int)arg1 args:(id)arg2;

- (id)sendSyncMsg:(int)arg1 args:(id)arg2;

@property(readonly) long long state; // @synthesize state=_state;

- (void)stopScan;

- (void)xpcConnection:(id)arg1 didReceiveMsg:(int)arg2 args:(id)arg3;

- (void)xpcConnectionDidReset:(id)arg1;

- (void)xpcConnectionIsInvalid:(id)arg1;



@end


