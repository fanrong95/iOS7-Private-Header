/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "UINavigationController.h"



#import "GKMatchDelegate.h"



@class GKHostedMatchmakerViewController, GKInvite, GKMatch, GKMatchRequest, GKRemoteMatchmakerViewController, NSMutableArray, NSString;



@interface GKMatchmakerViewController : UINavigationController <GKMatchDelegate>

{

    _Bool _hosted;

    id <GKMatchmakerViewControllerDelegate> _matchmakerDelegateWeak;

    GKMatchRequest *_matchRequest;

    GKHostedMatchmakerViewController *_hostedViewController;

    GKRemoteMatchmakerViewController *_remoteViewController;

    GKInvite *_acceptedInvite;

    GKMatch *_match;

    NSMutableArray *_hostedPlayerIDs;

}



+ (_Bool)_preventsAppearanceProxyCustomization;

- (void)_setupChildViewController;

@property(retain, nonatomic) GKInvite *acceptedInvite; // @synthesize acceptedInvite=_acceptedInvite;

- (void)addPlayersToMatch:(id)arg1;

- (void)applicationWillEnterForeground:(id)arg1;

- (void)authenticationChanged:(id)arg1;

- (void)cancel;

- (void)cancelInviteToPlayer:(id)arg1;

- (void)createMatchForAcceptedInvite;

- (void)dealloc;

@property(copy, nonatomic) NSString *defaultInvitationMessage;

- (void)finishWithError:(id)arg1;

- (void)finishWithMatch;

- (void)finishWithPlayers;

@property(retain, nonatomic) NSMutableArray *hostedPlayerIDs; // @synthesize hostedPlayerIDs=_hostedPlayerIDs;

@property(retain, nonatomic) GKHostedMatchmakerViewController *hostedViewController; // @synthesize hostedViewController=_hostedViewController;

- (id)init;

- (id)initWithInvite:(id)arg1;

- (id)initWithMatchRequest:(id)arg1;

- (void)invitedPlayer:(id)arg1 responded:(long long)arg2;

- (void)inviterCancelledNotification:(id)arg1;

@property(nonatomic, getter=isHosted) _Bool hosted; // @synthesize hosted=_hosted;

- (void)localPlayerAcceptedGameInvite:(id)arg1;

@property(retain, nonatomic) GKMatch *match; // @synthesize match=_match;

- (void)match:(id)arg1 connectionWithPlayerFailed:(id)arg2 withError:(id)arg3;

- (void)match:(id)arg1 didFailWithError:(id)arg2;

- (void)match:(id)arg1 didReceiveData:(id)arg2 fromPlayer:(id)arg3;

- (void)match:(id)arg1 player:(id)arg2 didChangeState:(long long)arg3;

@property(retain, nonatomic) GKMatchRequest *matchRequest; // @synthesize matchRequest=_matchRequest;

@property(nonatomic) id <GKMatchmakerViewControllerDelegate> matchmakerDelegate; // @synthesize matchmakerDelegate=_matchmakerDelegateWeak;

- (void)playersToInvite:(id)arg1;

@property(retain, nonatomic) GKRemoteMatchmakerViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;

- (void)sendData:(id)arg1;

- (void)setBrowsingForNearbyPlayers:(_Bool)arg1;

- (void)setHostedPlayer:(id)arg1 connected:(_Bool)arg2;

- (void)setHostedPlayerReady:(id)arg1;

- (void)setupNotifications;

- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;

- (void)startMatchingWithRequest:(id)arg1;

- (unsigned long long)supportedInterfaceOrientations;

- (void)viewDidLoad;

- (void)viewWillAppear:(_Bool)arg1;

- (void)viewWillDisappear:(_Bool)arg1;



@end


