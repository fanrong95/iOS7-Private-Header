/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "GKCollectionViewController.h"


#import "GKTurnBasedInviteViewControllerDelegate.h"

#import "GKTurnBasedMatchDetailViewControllerDelegate.h"

#import "UICollectionViewDelegate.h"

#import "UIPopoverControllerDelegate.h"

#import "UIStateRestoring.h"

#import "UIViewControllerRestoration.h"



@class GKGame, GKMatchRequest, GKTurnBasedMatchesDataSource, NSString, UIPopoverController;



@interface GKTurnBasedMatchesViewController : GKCollectionViewController <UIPopoverControllerDelegate, UIStateRestoring, UIViewControllerRestoration, UICollectionViewDelegate, GKTurnBasedInviteViewControllerDelegate, GKTurnBasedMatchDetailViewControllerDelegate>

{

    _Bool _showExistingMatches;

    id <GKTurnBasedMatchesViewControllerDelegate> _delegateWeak;

    GKGame *_game;

    GKMatchRequest *_matchRequest;

    GKTurnBasedMatchesDataSource *_matchesDataSource;

    long long _maxMatchesSeen;

    NSString *_matchIDWaitingForTurnEvent;

    UIPopoverController *_detailPopover;

}



+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;

- (void)acceptInviteForMatch:(id)arg1;

- (void)addPressed;

- (void)applicationDidEnterBackground;

- (void)cancelButtonPressed;

- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;

- (void)collectionViewController:(id)arg1 didSelectItemAtIndexPath:(id)arg2;

- (void)configureDataSource;

- (void)configureViewFactories;

- (void)dealloc;

@property(nonatomic) id <GKTurnBasedMatchesViewControllerDelegate> delegate; // @synthesize delegate=_delegateWeak;

@property(retain, nonatomic) UIPopoverController *detailPopover; // @synthesize detailPopover=_detailPopover;

- (void)detailPressedForMatch:(id)arg1;

- (void)didEnterNoContentState;

- (void)dismissDetailViewControllerAnimated:(_Bool)arg1;

- (void)encodeRestorableStateWithCoder:(id)arg1;

@property(retain, nonatomic) GKGame *game; // @synthesize game=_game;

- (void)handleTurnBasedEvent:(id)arg1;

- (id)init;

- (id)initWithMatchRequest:(id)arg1;

@property(readonly, nonatomic) _Bool isInGame;

- (void)launchGameAndShowMatchID:(id)arg1;

- (void)loadDataWithCompletionHandlerAndError:(id)arg1;

@property(retain, nonatomic) NSString *matchIDWaitingForTurnEvent; // @synthesize matchIDWaitingForTurnEvent=_matchIDWaitingForTurnEvent;

@property(retain, nonatomic) GKMatchRequest *matchRequest; // @synthesize matchRequest=_matchRequest;

@property(retain, nonatomic) GKTurnBasedMatchesDataSource *matchesDataSource; // @synthesize matchesDataSource=_matchesDataSource;

@property(nonatomic) long long maxMatchesSeen; // @synthesize maxMatchesSeen=_maxMatchesSeen;

- (void)notifyGameWithMatch:(id)arg1 orError:(id)arg2;

- (void)popoverController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;

- (void)popoverControllerDidDismissPopover:(id)arg1;

@property(nonatomic) _Bool showExistingMatches; // @synthesize showExistingMatches=_showExistingMatches;

- (void)showDetailForMatch:(id)arg1;

- (void)showInviteControllerAnimated:(_Bool)arg1;

- (void)showMatchID:(id)arg1;

- (void)turnBasedInviteViewController:(id)arg1 didCreateMatchID:(id)arg2;

- (void)turnBasedInviteViewController:(id)arg1 didFailWithError:(id)arg2;

- (void)turnBasedInviteViewControllerWasCancelled:(id)arg1;

- (void)turnBasedMatchDetailViewControllerDidAcceptInvitation:(id)arg1;

- (void)turnBasedMatchDetailViewControllerDidChooseMatch:(id)arg1;

- (void)turnBasedMatchDetailViewControllerDidDeclineInvitation:(id)arg1;

- (void)turnBasedMatchDetailViewControllerDidQuitMatch:(id)arg1;

- (void)turnBasedMatchDetailViewControllerDidRemoveMatch:(id)arg1;

- (void)turnBasedMatchDetailViewControllerDidShowStore:(id)arg1;

- (void)viewDidAppear:(_Bool)arg1;

- (void)viewWillAppear:(_Bool)arg1;

- (void)viewWillDisappear:(_Bool)arg1;



// Remaining properties

@property(readonly, nonatomic) Class objectRestorationClass;

@property(readonly, nonatomic) id <UIStateRestoring> restorationParent;



@end


