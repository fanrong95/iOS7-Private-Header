/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */





@class NSArray, NSDictionary, NSSet, SSNetworkConstraints, SSURLBagContext;



@interface ISURLBag : NSObject

{

    SSURLBagContext *_context;

    SSNetworkConstraints *_defaultConstraints;

    NSDictionary *_dictionary;

    NSArray *_guidPatterns;

    NSSet *_guidSchemes;

    NSDictionary *_headerPatterns;

    double _invalidationTime;

    _Bool _loadedFromDiskCache;

}



+ (_Bool)_allowUnsignedBags;

+ (void)_loadItemKindURLBagKeyMap;

+ (id)copyExtraHeadersForURL:(id)arg1 inBagContext:(id)arg2;

+ (id)networkConstraintsForDownloadKind:(id)arg1 inBagContext:(id)arg2;

+ (_Bool)shouldSendGUIDForURL:(id)arg1 inBagContext:(id)arg2;

+ (id)storeFrontURLBagKeyForItemKind:(id)arg1;

+ (id)urlBagForContext:(id)arg1;

+ (id)urlForKey:(id)arg1 inBagContext:(id)arg2;

+ (_Bool)urlIsTrusted:(id)arg1 inBagContext:(id)arg2;

+ (id)valueForKey:(id)arg1 inBagContext:(id)arg2;

@property(copy, nonatomic) SSURLBagContext *URLBagContext;

@property(readonly, nonatomic) NSDictionary *URLBagDictionary;

- (id)URLForURL:(id)arg1 clientIdentifier:(id)arg2;

- (id)_copyGUIDPatternsFromDictionary:(id)arg1;

- (id)_copyGUIDSchemesFromDictionary:(id)arg1;

- (id)_copyHeaderPatternsFromDictionary:(id)arg1;

- (_Bool)_loadFromSignedDictionary:(id)arg1 returningError:(id *)arg2;

- (id)_networkConstraintsCachePath;

- (void)_setDictionary:(id)arg1;

- (void)_writeNetworkConstraintsCacheFile;

- (void)_writeURLResolutionCacheFile;

@property(readonly) NSSet *availableStorefrontItemKinds;

- (id)copyExtraHeadersForURL:(id)arg1;

- (void)dealloc;

- (id)init;

- (id)initWithContentsOfFile:(id)arg1;

- (id)initWithRawDictionary:(id)arg1;

- (id)initWithURLBagContext:(id)arg1;

@property(nonatomic) double invalidationTime; // @synthesize invalidationTime=_invalidationTime;

@property(readonly, nonatomic, getter=isValid) _Bool valid;

- (_Bool)loadFromDictionary:(id)arg1 returningError:(id *)arg2;

@property(nonatomic) _Bool loadedFromDiskCache; // @synthesize loadedFromDiskCache=_loadedFromDiskCache;

- (id)networkConstraintsForDownloadKind:(id)arg1;

- (id)sanitizedURLForURL:(id)arg1;

- (id)searchQueryParametersForClientIdentifier:(id)arg1 networkType:(long long)arg2;

- (void)setInvalidationTimeWithExprationInterval:(double)arg1;

- (_Bool)shouldSendGUIDForURL:(id)arg1;

- (id)urlForKey:(id)arg1;

- (_Bool)urlIsTrusted:(id)arg1;

- (id)valueForKey:(id)arg1;

@property(readonly, nonatomic) long long versionIdentifier;

- (_Bool)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;



@end


