/*

 *     Generated by class-dump 3.4 (64 bit).

 *

 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2012 by Steve Nygard.

 */



#import "ISDataProvider.h"


@class NSArray, NSError, NSString, SZExtractor;



@interface ISStreamUnzippingDataProvider : ISDataProvider

{

    unsigned long long _expectedUncompressedSize;

    SZExtractor *_extractor;

    _Bool _extractorComplete;

    NSString *_localFilePath;

    long long _streamedBytes;

    NSArray *_hashes;

    long long _numberOfBytesToHash;

    NSError *_unzipError;

    _Bool _shouldResumeFromLocalBytes;

}



+ (_Bool)isHashMismatchError:(id)arg1;

- (void)_completeStream;

- (_Bool)_openExtractor;

- (void)_suspendStream;

- (_Bool)canStreamContentLength:(long long)arg1 error:(id *)arg2;

- (id)closeStream;

- (id)copyWithZone:(struct _NSZone *)arg1;

- (void)dealloc;

@property(readonly) unsigned long long expectedUncompressedSize; // @synthesize expectedUncompressedSize=_expectedUncompressedSize;

@property(readonly) SZExtractor *extractor; // @synthesize extractor=_extractor;

- (id)hashFailureHeaderStringForUnzipError;

@property(retain) NSArray *hashes; // @synthesize hashes=_hashes;

- (id)init;

- (id)initWithExpectedUncompressedSize:(unsigned long long)arg1;

@property(getter=isExtractorComplete) _Bool extractorComplete; // @synthesize extractorComplete=_extractorComplete;

- (_Bool)isStream;

- (_Bool)isStreamComplete;

@property(retain) NSString *localFilePath; // @synthesize localFilePath=_localFilePath;

@property long long numberOfBytesToHash; // @synthesize numberOfBytesToHash=_numberOfBytesToHash;

- (_Bool)parseData:(id)arg1 returningError:(id *)arg2;

- (void)resetStream;

@property _Bool shouldResumeFromLocalBytes; // @synthesize shouldResumeFromLocalBytes=_shouldResumeFromLocalBytes;

@property long long streamedBytes; // @synthesize streamedBytes=_streamedBytes;

- (void)setup;

- (void)streamCancelled;

- (void)streamDidFailWithError:(id)arg1;

@property(readonly) NSError *unzipError; // @synthesize unzipError=_unzipError;



@end


